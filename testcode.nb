(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    246927,       4944]
NotebookOptionsPosition[    244302,       4854]
NotebookOutlinePosition[    244637,       4869]
CellTagsIndexPosition[    244594,       4866]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Testing", " ", "SystemSolver"}], ",", " ", "SolveDiffEqs"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalDelta]c1", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"\[CapitalDelta]c2", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"popsize", "=", 
     RowBox[{"10", "^", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timestep", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Testing", " ", "system", " ", "solver", " ", "for", " ", "one", " ", 
     "fitness", " ", "class"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"{", 
      RowBox[{"10", "^", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"system", ",", "sol"}], "}"}], "=", 
     RowBox[{"SolveDiffEqs", "[", 
      RowBox[{
      "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
       "genotypeabundances", ",", "genotypes", ",", "timestep"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n1", "[", "t", "]"}], "/.", 
       RowBox[{"sol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "timestep"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<One Fitness Class\>\"", "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Testing", " ", "system", " ", "solver", " ", "for", " ", "three", " ", 
     "fitness", " ", "class"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"10", "^", "4"}], "-", "100", "-", "2000"}], ",", "100", ",", 
       "2000"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"system", ",", "sol"}], "}"}], "=", 
     RowBox[{"SolveDiffEqs", "[", 
      RowBox[{
      "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
       "genotypeabundances", ",", "genotypes", ",", "timestep"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"n1", "[", "t", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"n2", "[", "t", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"n3", "[", "t", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "timestep"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Green", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Three Fitness Classes\>\"", "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.673116177021326*^9, {3.6731262506283484`*^9, 3.6731262862843857`*^9}, {
   3.67319082497758*^9, 3.673190827881064*^9}, {3.673369817430798*^9, 
   3.673369817798792*^9}, {3.673370636607048*^9, 3.673370639086833*^9}, {
   3.673875084876329*^9, 3.673875094436377*^9}, {3.6738753320134993`*^9, 
   3.67387535418959*^9}, {3.673875478229555*^9, 3.6738755316378117`*^9}, {
   3.67387572723071*^9, 3.67387572747853*^9}, {3.67387711551609*^9, 
   3.673877127547649*^9}, {3.673891513192905*^9, 3.6738915138962584`*^9}, {
   3.673891612153204*^9, 3.6738916125368137`*^9}, {3.673894806565002*^9, 
   3.673894808804337*^9}, {3.673900335281618*^9, 3.6739003655206957`*^9}, {
   3.673906789121922*^9, 3.673906791231956*^9}, {3.673907098001443*^9, 
   3.673907102609193*^9}, {3.6739076262353487`*^9, 3.673907627786487*^9}, {
   3.673961208382987*^9, 3.6739612089340363`*^9}, 3.6739879645124283`*^9, {
   3.674301320446027*^9, 3.674301334606099*^9}, 3.674312441383945*^9, {
   3.674312480239259*^9, 3.674312482071232*^9}, {3.674313185438923*^9, 
   3.674313233609013*^9}, 3.674313659839324*^9, {3.674314618543891*^9, 
   3.67431464710362*^9}, {3.674318028991828*^9, 3.674318031639688*^9}, {
   3.6743253495772057`*^9, 3.674325366240168*^9}, {3.6743254528884497`*^9, 
   3.6743254558882217`*^9}, {3.6743256206254377`*^9, 3.674325626960462*^9}, {
   3.674325660048629*^9, 3.674325660216227*^9}, {3.674327687200553*^9, 
   3.67432769173661*^9}, {3.674327780787836*^9, 3.6743277811477337`*^9}, 
   3.674328070705064*^9, {3.674348900689376*^9, 3.6743489009771843`*^9}, {
   3.6743888074271317`*^9, 3.674388807890704*^9}, {3.6743924142403927`*^9, 
   3.674392426616136*^9}, {3.674392550228224*^9, 3.6743925667681837`*^9}, 
   3.674409792551757*^9, {3.674411823871142*^9, 3.674411823982185*^9}, {
   3.674417704740241*^9, 3.67441770746791*^9}, {3.688136265053318*^9, 
   3.6881363206367407`*^9}, {3.688136355476605*^9, 3.688136382884503*^9}, {
   3.688136415044464*^9, 3.688136503788519*^9}, {3.688136651812438*^9, 
   3.6881366520845203`*^9}, {3.688136803020981*^9, 3.6881368239485188`*^9}, 
   3.688136951164887*^9, 3.688137035980901*^9, {3.688137262405142*^9, 
   3.688137263228405*^9}, {3.6885671445534563`*^9, 3.688567145393744*^9}, {
   3.68856733288579*^9, 3.688567375813493*^9}, {3.688567549743102*^9, 
   3.688567640231125*^9}, {3.688567798007579*^9, 3.68856781006532*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/frTHx+3tK92DCDQcdihymaH5ccFyg4w/qrrwY/f
LzCG8yfcavzrUuIC51+e3z57YrIfnO8Wsdu5ViAEzvf8nTTnTkQknN/fqbjv
t1scnG8n6fEw6XwinD/pwM9v5/JS4PyOu2YfpR6mwfkX2c/E2HRkwvl7lr9Z
Y8uUA+e3zGoXOJafB+f7++79JNhZAOfrddSc33C4EM7fdvJ5yi6JYjh/rYlA
S3t6CZxfFlU39cj8Ujj/RduM+JxPZXC+Vt4P6Ra9CjhfLIZlIltrJZxfWHy2
3+dqFZw/z/VOAxN/DZxfIjddSzm5Fs6X2jT92OYFdXC+fn7oG/Yb9XB++cz4
1MdTGuD8/RHbz1YZNcL5MdKpk9zvIvgbij5Kf2tpgvNzly+YF6PYDOfX3V9a
++MUgv/jy9lQn8wWOF9z/pVPjSytcP56H8M3b9Yg+POub7jH79UG5z9MbdPN
+ILg916sK62Y3A7nf7gY2pSl3wHnr7ja9HriDQT/5LZLvoVlnXC+3ewKnjbF
Ljg/W+Rvf81JBJ8hewmPdlo3nP/qyMKnfAI9cL7tn4PbV61D8N1PHPDT8OqF
85dNF3W6/QnBz3Xp1XOb0AfnLxF4K6j8AsG/dcfn63/7fjgfAHgGHMs=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    RowBox[{"{", "\"One Fitness Class\"", "}"}], TraditionalForm],
  PlotRange->{{0, 1000}, {0., 20000.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.688567147093124*^9, 3.688567538925179*^9, {3.688567594030456*^9, 
   3.688567610649428*^9}, 3.6885676416265917`*^9, 3.688691033890149*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
miGUirLrVamRpK+0KrdwCKciNS8+mE7auY24NC+aCqfr7bLnSPc8G3Eelk7F
ekNf5QbSja929N3dnYqoJuv3q6PJ/vlY1engnIphk00XC0lrLzXfK7+VChM5
e4mq0wT8/9t0S6QqFftKIkXrSBdORV5JuJOK2kIvgWbSy2O7Ml3vp+KFV9f4
S9INr0u8xVipWB42pEySRiV1U/LrVPQHDgspxhDY56pH91pKhcXz51JXSR9o
azLbbpwG9beVBbQzBOLEmWLPTNNw7YxfE4M0y99+1M88Df38CoMZpLWE507f
sU7DtoFGriLSyq7yN3Wc0xDU0bHuIenNSzlrbELT8Dm2f90U6TklnzZqYRp0
Nzq+to8l58E54X3vp9JQbHXYSZJKgBL+5LvFbBqyngW1yJDmtYnMb/0vDSfc
bWTlSAcLDUxWLaXBVjJ8QJW0btqVoiROJnLbIkWNSb+lqfxRE2NihbzXsxDS
q/0t72foMSHeLLOzhbSffpqiYQYTdXlKZyk0Ap37yoRXZTGxuLE+3on0v3rE
EpHDhM1/U6FupGe0F57qXWAipsLf0I901G6P49qlTEw9X1UbSzpJTrtYtZ6J
lU9+PS0lfUXgu6D0GBOmqbIjP0lz8nMvDH1jgvJUyGaG9Im10h+LvzNx3kGi
eZ60/GrKrc3TTPx9l522gk6gmuOxsdgyE9oNEfNCpBvnCuiC69MR9Pc/ETXS
UrP3vF9uSAetwMhUgzRt+pVlumg6ToV/P6VN2nCSW2qtZDpUqve8NCD9/Gto
PbdcOih/1A8dIa04ln75CfmPcJYKdTtKOmO0PDlBKR1j0xLhTqStPn20W6mW
ju9iDRmepGuGFnWJ3ekovlqf5016w8cN22ia6dhnrnLRn3TE4C4+Pe10+Kts
LQwm3ddvOvtXNx1NfjkXwkn/D8ShcmI=
     "]]}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    RowBox[{"{", "\"Three Fitness Classes\"", "}"}], TraditionalForm],
  PlotRange->{{0, 1000}, {0., 9990.9266230379}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.688567147093124*^9, 3.688567538925179*^9, {3.688567594030456*^9, 
   3.688567610649428*^9}, 3.6885676416265917`*^9, 3.6886910341432123`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Testing", " ", "module", " ", "that", " ", "checks", " ", "for", " ", 
     "new", " ", "mutations"}], ",", " ", "NextMutation"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalDelta]c1", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"\[CapitalDelta]c2", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"U1", "=", 
     RowBox[{"2", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U2", "=", 
     RowBox[{"1", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"popsize", "=", 
     SuperscriptBox["10", "6"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"starttime", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timestep", "=", "100"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6885680869932117`*^9, 3.688568107676817*^9}, 
   3.688568396224392*^9, {3.688570127232911*^9, 3.68857015876475*^9}, {
   3.688571131370401*^9, 3.688571169190495*^9}, {3.688571221773478*^9, 
   3.688571272085524*^9}, {3.688571418094035*^9, 3.688571431511201*^9}, {
   3.68857146723342*^9, 3.6885715000956173`*^9}, {3.688571553787676*^9, 
   3.688571578591317*^9}, {3.688571641391821*^9, 3.688571665747957*^9}, {
   3.688572468620905*^9, 3.688572581113586*^9}, {3.688572741271303*^9, 
   3.6885727500421953`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"system", ",", "sol"}], "}"}], "=", 
   RowBox[{"SolveDiffEqs", "[", 
    RowBox[{
    "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
     "genotypeabundances", ",", "genotypes", ",", "timestep"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.688571283008575*^9, 3.688571414185316*^9}, {
  3.688574277029724*^9, 3.6885742802935257`*^9}, {3.688691106785205*^9, 
  3.688691110146936*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"getNextMutants", "[", "genotypes", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextMutation", "[", 
  RowBox[{
  "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", 
   ",", "U2", ",", "sol", ",", "genotypes", ",", "starttime", ",", 
   "timestep"}], "]"}]}], "Input",
 CellChangeTimes->{{3.688691484052844*^9, 3.688691496476296*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"6", ",", "1"}], "}"}], "}"}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "2"}], "}"}]}], "}"}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "2"}], "}"}]}], "}"}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2"}], "}"}], "}"}], ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6885742953249397`*^9, 3.688574879641499*^9, 3.688687990115136*^9, 
   3.688688048681122*^9, {3.6886881379712067`*^9, 3.6886881650325327`*^9}, 
   3.688688199749318*^9, 3.688688342469342*^9, {3.688688535533622*^9, 
   3.688688555594432*^9}, 3.688688639984653*^9, 3.6886886801226788`*^9, 
   3.688688747968503*^9, 3.6886891912751207`*^9, 3.6886892430878*^9, 
   3.6886892897085533`*^9, 3.6886893290713253`*^9, 3.688689388388866*^9, 
   3.688689593211829*^9, 3.688689661035387*^9, 3.688689742022944*^9, 
   3.688690001384369*^9, 3.6886900638831787`*^9, 3.688690225335659*^9, 
   3.68869063470923*^9, 3.6886908257823563`*^9, 3.688690868799096*^9, {
   3.688690919710621*^9, 3.688690931291325*^9}, 3.688690971830204*^9, 
   3.688691133689797*^9, {3.688691215148739*^9, 3.688691265197378*^9}, 
   3.688691317111124*^9, 3.688691444527104*^9, 3.688691500396583*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"30.94007186481715`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], "}"}], ",", "True", ",", 
   "0.039300574533808606`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6885742953249397`*^9, 3.688574879641499*^9, 3.688687990115136*^9, 
   3.688688048681122*^9, {3.6886881379712067`*^9, 3.6886881650325327`*^9}, 
   3.688688199749318*^9, 3.688688342469342*^9, {3.688688535533622*^9, 
   3.688688555594432*^9}, 3.688688639984653*^9, 3.6886886801226788`*^9, 
   3.688688747968503*^9, 3.6886891912751207`*^9, 3.6886892430878*^9, 
   3.6886892897085533`*^9, 3.6886893290713253`*^9, 3.688689388388866*^9, 
   3.688689593211829*^9, 3.688689661035387*^9, 3.688689742022944*^9, 
   3.688690001384369*^9, 3.6886900638831787`*^9, 3.688690225335659*^9, 
   3.68869063470923*^9, 3.6886908257823563`*^9, 3.688690868799096*^9, {
   3.688690919710621*^9, 3.688690931291325*^9}, 3.688690971830204*^9, 
   3.688691133689797*^9, {3.688691215148739*^9, 3.688691265197378*^9}, 
   3.688691317111124*^9, 3.688691444527104*^9, 3.6886915004355803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalDelta]c1", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"\[CapitalDelta]c2", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"U1", "=", 
     RowBox[{"2", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U2", "=", 
     RowBox[{"0", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"popsize", "=", 
     SuperscriptBox["10", "6"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"starttime", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timestep", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxtime", "=", "50000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fulldata", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"verbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"veryverbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Trait 1 q = \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}], "/", 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}]}]}], "]"}], ",", 
      "\"\< in \>\"", ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "\"\< No Evolution Regime \>\"",
         ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}], "/", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}]}], "<", " ", 
           "2"}], ",", "\"\<Successional Regime\>\"", ",", 
          "\"\<Concurrent Mutations Regime\>\""}], "]"}]}], "]"}], ",", " ", 
      "\"\< with expected time scale \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "0", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]c1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
               
               RowBox[{"Log", "[", 
                RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}], 
          ")"}], 
         RowBox[{"-", "1"}]]}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Trait 2 q = \>\"", ",", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}], "/", 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}]}]}], "]"}], ",", 
      "\"\< in \>\"", ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "\"\<No Evolution Regime\>\"", 
        ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}], "/", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}]}], "<", " ", 
           "2"}], ",", "\"\<Successional Regime\>\"", ",", 
          "\"\<Concurrent Mutations Regime\>\""}], "]"}]}], "]"}], ",", 
      "\"\< with expected time scale \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "0", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]c2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
               
               RowBox[{"Log", "[", 
                RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}], 
          ")"}], 
         RowBox[{"-", "1"}]]}], "]"}]}], "]"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"Testing", " ", "one", " ", "trait", " ", "evolution"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688695558225275*^9, 3.688695577769321*^9}, {
   3.6886976542927437`*^9, 3.688697703019405*^9}, {3.6886977463208647`*^9, 
   3.688697752537838*^9}, 3.688698185549271*^9, {3.68869821919487*^9, 
   3.688698223223608*^9}, {3.6886986620524282`*^9, 3.6886986629004*^9}, {
   3.6886988603750963`*^9, 3.6886988664805202`*^9}, 3.688698904555194*^9, {
   3.688699337369549*^9, 3.688699342189859*^9}, {3.688699460908698*^9, 
   3.6886994643065567`*^9}, {3.688699585083333*^9, 3.688699591745851*^9}, {
   3.6886999821022263`*^9, 3.688700108974204*^9}, {3.688700161987878*^9, 
   3.688700213709936*^9}, 3.688701092035573*^9, {3.688706294970908*^9, 
   3.688706295860649*^9}, {3.688706362192438*^9, 3.688706363363892*^9}, {
   3.688706394895247*^9, 3.68870639920033*^9}, 3.6887078089313726`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "4.708735280542232`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "105.4813220547839`"}],
  SequenceForm[
  "Trait 1 q = ", 4.708735280542232, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 105.4813220547839],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706308885817*^9, {3.688706373720022*^9, 3.688706400606756*^9}, 
   3.6887064838358917`*^9, 3.688707058890171*^9, 3.68870781352206*^9, 
   3.6887081428506947`*^9, 3.688708211212734*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"No Evolution Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "0"}],
  SequenceForm[
  "Trait 2 q = ", 0, " in ", "No Evolution Regime", 
   " with expected time scale ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706308885817*^9, {3.688706373720022*^9, 3.688706400606756*^9}, 
   3.6887064838358917`*^9, 3.688707058890171*^9, 3.68870781352206*^9, 
   3.6887081428506947`*^9, 3.688708211213945*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meansubload1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean substitutional load = \>\"", ",", "meansubload1"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean q = \>\"", ",", 
      RowBox[{"meansubload1", "/", "\[CapitalDelta]c1"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndLoads", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "timesAndLoads", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.688697705911489*^9, 3.6886977385901012`*^9}, {
   3.688697851586619*^9, 3.688697881514435*^9}, 3.688699542613991*^9, 
   3.6886996145602417`*^9, {3.688701974370201*^9, 3.6887019797698917`*^9}, {
   3.688706327590456*^9, 3.6887063285022173`*^9}, {3.688706468965032*^9, 
   3.688706478057048*^9}, {3.688707040023732*^9, 3.688707053374549*^9}, {
   3.688707990485836*^9, 3.6887080244590893`*^9}, {3.6887081595099154`*^9, 
   3.688708174075613*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean substitutional load = \"\>", "\[InvisibleSpace]", 
   "0.03460008001353787`"}],
  SequenceForm["mean substitutional load = ", 0.03460008001353787],
  Editable->False]], "Print",
 CellChangeTimes->{3.688706500009067*^9, 3.6887070743794317`*^9, 
  3.6887082279022417`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean q = \"\>", "\[InvisibleSpace]", "3.460008001353787`"}],
  SequenceForm["mean q = ", 3.460008001353787],
  Editable->False]], "Print",
 CellChangeTimes->{3.688706500009067*^9, 3.6887070743794317`*^9, 
  3.688708227902841*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
weDifHoF+2tb5QXJUOH/AMKVie4=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 50000.}, {0, 0.06418519221027319}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.688706500051055*^9, 3.688707074411471*^9, 
  3.688708227947262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalDelta]c1", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"\[CapitalDelta]c2", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"U1", "=", 
     RowBox[{"0", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U2", "=", 
     RowBox[{"1", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"popsize", "=", 
     SuperscriptBox["10", "6"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"starttime", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timestep", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxtime", "=", "50000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fulldata", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"verbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"veryverbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Trait 1 q = \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}], "/", 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}]}]}], "]"}], ",", 
      "\"\< in \>\"", ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "\"\< No Evolution Regime \>\"",
         ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}], "/", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}]}], "<", " ", 
           "2"}], ",", "\"\<Successional Regime\>\"", ",", 
          "\"\<Concurrent Mutations Regime\>\""}], "]"}]}], "]"}], ",", " ", 
      "\"\< with expected time scale \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "0", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]c1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
               
               RowBox[{"Log", "[", 
                RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}], 
          ")"}], 
         RowBox[{"-", "1"}]]}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Trait 2 q = \>\"", ",", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}], "/", 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}]}]}], "]"}], ",", 
      "\"\< in \>\"", ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "\"\<No Evolution Regime\>\"", 
        ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}], "/", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}]}], "<", " ", 
           "2"}], ",", "\"\<Successional Regime\>\"", ",", 
          "\"\<Concurrent Mutations Regime\>\""}], "]"}]}], "]"}], ",", 
      "\"\< with expected time scale \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "0", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]c2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
               
               RowBox[{"Log", "[", 
                RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}], 
          ")"}], 
         RowBox[{"-", "1"}]]}], "]"}]}], "]"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"Testing", " ", "one", " ", "trait", " ", "evolution"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688707875533177*^9, 3.688707891207817*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\" No Evolution Regime \"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "0"}],
  SequenceForm[
  "Trait 1 q = ", 0, " in ", " No Evolution Regime ", 
   " with expected time scale ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.688707898052257*^9, 3.6887082459985228`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "3.7383519587043743`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "96.74281185269709`"}],
  SequenceForm[
  "Trait 2 q = ", 3.7383519587043743`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 96.74281185269709],
  Editable->False]], "Print",
 CellChangeTimes->{3.688707898052257*^9, 3.688708245999782*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meansubload2", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean substitutional load = \>\"", ",", "meansubload2"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean q = \>\"", ",", 
      RowBox[{"meansubload2", "/", "\[CapitalDelta]c2"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndLoads", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "timesAndLoads", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.688708075250152*^9, 3.6887080944918413`*^9}, {
  3.6887081873013563`*^9, 3.6887081920608463`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean substitutional load = \"\>", "\[InvisibleSpace]", 
   "0.05973240693413181`"}],
  SequenceForm["mean substitutional load = ", 0.05973240693413181],
  Editable->False]], "Print",
 CellChangeTimes->{3.688707919115756*^9, 3.6887082709709587`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean q = \"\>", "\[InvisibleSpace]", "2.9866203467065904`"}],
  SequenceForm["mean q = ", 2.9866203467065904`],
  Editable->False]], "Print",
 CellChangeTimes->{3.688707919115756*^9, 3.6887082709716053`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {}}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 49999.99999999999}, {0, 0.09675661114016698}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.688707919154818*^9, 3.688708271012733*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalDelta]c1", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"\[CapitalDelta]c2", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"U1", "=", 
     RowBox[{"2", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U2", "=", 
     RowBox[{"1", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"popsize", "=", 
     SuperscriptBox["10", "6"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"starttime", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timestep", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxtime", "=", "20000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fulldata", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"verbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"veryverbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Trait 1 q = \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}], "/", 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}]}]}], "]"}], ",", 
      "\"\< in \>\"", ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "\"\< No Evolution Regime \>\"",
         ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}], "/", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}]}], "<", " ", 
           "2"}], ",", "\"\<Successional Regime\>\"", ",", 
          "\"\<Concurrent Mutations Regime\>\""}], "]"}]}], "]"}], ",", " ", 
      "\"\< with expected time scale \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "0", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]c1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
               
               RowBox[{"Log", "[", 
                RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}], 
          ")"}], 
         RowBox[{"-", "1"}]]}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Trait 2 q = \>\"", ",", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}], "/", 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}]}]}], "]"}], ",", 
      "\"\< in \>\"", ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "\"\<No Evolution Regime\>\"", 
        ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}], "/", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}]}], "<", " ", 
           "2"}], ",", "\"\<Successional Regime\>\"", ",", 
          "\"\<Concurrent Mutations Regime\>\""}], "]"}]}], "]"}], ",", 
      "\"\< with expected time scale \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "0", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]c2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
               
               RowBox[{"Log", "[", 
                RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}], 
          ")"}], 
         RowBox[{"-", "1"}]]}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{"Testing", " ", "two", " ", "trait", " ", "evolution"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688706416860038*^9, 3.688706427095549*^9}, {
  3.688707260061904*^9, 3.6887072765813293`*^9}, {3.688707489173719*^9, 
  3.688707625099484*^9}, {3.688707779784658*^9, 3.688707783529849*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "4.708735280542232`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "105.4813220547839`"}],
  SequenceForm[
  "Trait 1 q = ", 4.708735280542232, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 105.4813220547839],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706514208481*^9, 3.688707088858027*^9, 3.6887078246012163`*^9, {
   3.688708284918737*^9, 3.688708297894167*^9}, 3.688739537902643*^9, 
   3.6887515120228767`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "3.7383519587043743`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "96.74281185269709`"}],
  SequenceForm[
  "Trait 2 q = ", 3.7383519587043743`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 96.74281185269709],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706514208481*^9, 3.688707088858027*^9, 3.6887078246012163`*^9, {
   3.688708284918737*^9, 3.688708297894167*^9}, 3.688739537902643*^9, 
   3.6887515120237637`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meansubload", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean substitution load = \>\"", ",", "meansubload"}], "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndLoads", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "timesAndLoads", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.688706457306293*^9, 3.688706463986483*^9}, {
   3.688706573486517*^9, 3.688706646883993*^9}, {3.688706687264188*^9, 
   3.688706757336728*^9}, 3.688707012267789*^9, {3.688708106608053*^9, 
   3.688708124675424*^9}, {3.688751531707631*^9, 3.688751581171226*^9}, {
   3.68875173576383*^9, 3.6887517483953114`*^9}, {3.6887518687800903`*^9, 
   3.6887519014915733`*^9}, {3.6887520188917027`*^9, 3.6887520255954113`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean substitution load = \"\>", "\[InvisibleSpace]", 
   "0.057301414985270145`"}],
  SequenceForm["mean substitution load = ", 0.057301414985270145`],
  Editable->False]], "Print",
 CellChangeTimes->{3.688706556565688*^9, 3.688706876011691*^9, 
  3.688707202552621*^9, 3.688708429275429*^9, 3.6887396239021473`*^9, 
  3.68873972619645*^9, 3.6887402141082087`*^9, 3.6887410213329773`*^9, 
  3.688741456678694*^9, 3.688751673951076*^9, 3.6887518327649803`*^9, 
  3.688752113327182*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1mnk4ld/3908JpSgNGkhoIhkKqcTaCA0SIpKxgYRMlZJyVJJElCkhszMP
5owHJRSRUooiqUglqcjQs/p+fk//dL2u93utte/77HvttbuSP+RteXQ6hUJZ
LkSh/Pv7//+hxjfvPXwnGeaKX4mzqG2DNP6c1SZHMiFxieXnMsNPIPAUdj3r
lwxyomtLA+K/Q3dcxYsws0ywOhuf8EFIhDjTNW2KCQ2sfSyLBnQVCCU0wf5C
VC78OJ61Yv+WA0Rw/HmMY3sG2DeOKyb5OBM51n7XXc45wGI+71o/5ULSJgtK
/kjxwP9tGWn+e4R079AM3BXBhUQ+55UBy40Qi/lRf5dzofFZm87m556kW3D8
6bFdBfCtX2LBJSNvkuYiw+cKFYDTgZpCznFfQmpt15Qq58O4WbFG4QNf4hxY
wnU/UQi6FTPLb3j6kSF6mFSNXjFYOl5wl73tT5zvSm94MKMQgg/W0YM4/oTS
duJS1pMCMLpyUiTmtz/hqd27dUG8AL47KOwRuXqGyJ2MPrPbjw6dy3Q2JT89
SwRq9ye9n+bCroorJhZvzhI5y+Gxne9ZMNhXUXoo9QLh2WjdblvLB2tPPbWD
W4OJOfVufOQTHsyv3Htd53YISevUfHjkOgs+bSjI4ypfJC1PjEX/BOWBrfBg
AbhfJOZnStK/SubBw+IXJfnKl4jc457qwWQePFvQuX/OlkvEWfZ3HiWEB491
7AJL0y4Tdbq5687FPFjuYC3lvuAK6f71+6VsOxcCsw0cx4OukDRprZ8K/hwI
nR+9lTiHEWfdqoBb15nQxE+Q1lx6lThfZGrYGXEgi7tQS5Z2jZDznhrbrLLh
qmKxlC0rAn8ft1eqwbkwdrMzYeWj60TuvIBTosWAg+3jhTmBUYRy0UFLuCgX
Dvx5WB8XGUUEdk49u8tZMPkX/8ANQr27kV38lAm/3+3KMTWIJs4a0lUafXT4
Kv1yxRQjmqTdUJwdaseG2DDHGd0Pogn51bm59yULDp55dtDUMoYIUlsZaREc
CNBTXCsyFENISFST5XI6nJGxm++39ibpDj5cFSOC+2+fl9ziazcJRfeYlm0h
DWbFBcBiyVtEbjDmB0OfAXPaue/bZWIJJdH2+PElOcAfmb9M2R85eIXHpwXZ
8Onqup2zJmKJ4PGsOw1+NJhK1Q83Wx5HnIe/UJ9No8H8zTKV7iviCHHuyGpZ
woYvT3r0g1bGETmVwagFs9hwu2jZ9WHDeEJZIMSepkQDIZO/pp92xpPuddbZ
vSv5EC1quEymKp4IxrN/XujgQhvH30hqWgKRKz0Yp2FeAGZJ/W3WkEDmqepn
H0nMh/Q7s9KK/RJIdP074do/efB8oaXfx4sJpJuZY1tenwezh9oil0UkEOeg
tb/SOHnwdW1L9hHxREJ5vdZr6C8PQjq6e9c/TCTOy6MEacd50HDU9D3rbSKR
o4Wkvq7gQjGrqOHc3NukO2YwZAPwwe7tgFNn2m1CWbzrm5QDA34Z+hSOSSSR
7i7LrJx12dBl8fhPRnwSkVv0Wsd5Vg74lL2zU6lDnn08O1CSARcLrmzVtrhD
BNRfu1jxuZCkdfjTqHIyoah9mnr1hQ7dO0Y+dlUjb7PuH11PgweL39RavUgm
advPbf8xgw3tmf7X511OJd3uGc5uM7OB4k35+eRWKhFM7Ks+yMoC5b0TcmsL
UknatzPCf4TpcMh0/+7bbag//rEtzJ0N0/41N3KXOHP6Mm0+MECb8aDA1Pcu
oWpqMe72c6Dw66qS4wPIPlmHB9xZsCV+pZDV1jTifPbyBs8xDjSl+qSuOJpG
5JweLar2wvW86gn6HJtGzN9LJOy24UHdgsQu46dphOKozq3w5cOLFxmfPb6h
HqmXEJDIA3WVrdYFtulEUJIwJMjiQIeH/moN33TS3dbGsGhhQeb7yoTKOOQe
USETXy40xAU9+dqAnK29djCWBXWV8l4aX9MJ78hRU915PDB+va2VeTqDOG+4
IXhxiAHCpXYrjl7OIHLRtYv21XHga/mUbHddBiEHvSv+tnAh1+LsaL17JnH+
67kn1z8HCo+eOzc3NJOQVe/SB4yygW6d9nfL9UySViZReHozF6oWTe+/xsgk
lBzrg7NFOECTOsiSeo66Wn5p50UWNByoCX42lknMB2O1N2jxIDJeT6vjeBah
RFQEq+H3+WegKf/bjSxCVA6N3e7Jgy/XNJSy2Flknv19r98kD/bJlrV/78gi
gu2jx04s5EPt+De3neNZJO2WmJjlNy4svu5tfG1FNuHRnPOeL+bDwt0p13ef
yCYtvyIm9VV5cKtpydj9O9kk7frN7LvtLJC2cTCtEM0hzhKu1+vm5ELBqJKc
u2EOScu5xJ14QIfBesM3X5Cp1GjHH1V02G2kt3foXQ6Re6BXs34HDebMLxbW
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
5fYg211N2S7OgUHmKWb7h388IfrpIRsG994rkuxH1k6EdPz9jnblVV0XekKo
M6dbft7ChUUhA/ecJJ4QSuHuSvVMHmx/JpExVwH14KADYSH0/85vgsyKebL2
SToor9i6754RstfafrV3aVCmLZQUao7xXiKxlXbZwDnizZzch/odwyMNK7Nh
rPzpG/EzqLtHHeUk0mC5UsC+d2Go77p2XWcdGzytGneqXkVdoHBTpyIXajeI
T3CjUS+c/5tzJxfyjr0bqshCvWvBhmz8PYOj52/ak4P6bvZcfUceHH40Y5v/
PeR3e7tlZbgQ5zBsMlqLfsl5Emfj2CC/5GlOaSvqzPfvFV9x4bokM25/xz99
duECFht+r1R85t7xbz1pO8ey2fAha11KwQfUa+9r9G/mwGwdZZURoRZCXfm5
7rRHNmys7xAvFmshlJsmtuYRbEgR1eJ3iCN7l3levsUC3eZ2pqgk+u3nDPPL
mLD10b3W+/LIBmw3xQ258K3YYdMMJWTpzTHKKQzQU1+nq7AB4zcFpH+fyYE7
FTJ/U/SQ+yJmavxgwJDNSBzZjn4fOdGFHnQ4Hjis+dcM9bCew4teZsPowTPX
n+1FNvnmXVzHgEbp4EoLS+Q5GnHXPtOh27zYaPwAMjPGUnYvC/ToUz9M7JGj
Vp8bpzLBaKy3QNcBWfu9rRveLz48MLsYdwT5o2Hzx9f4PjSct1m5Y/0w9Ugx
exY4fn/1eY4HcmSSN+0cfl/0c8HRvshRhr1PsP/PHHvjJOKP8YNKiacZHPgU
bHio6jxyxLwnzalMuOfO9c+5iOwla/1sBxesj1hWm4Yi05wezX3Ch5NJ3XMm
wluI4M+BZ8dn8WHLlcS/LtGY/9XSzifF2M+jJCmasej/kCtlJsaBacfKos3i
WgipXxMaZMv/r58mob9vv3X3Kh4krwsiXXfQ7+N1ZEwhD3zainkmGZj/5f5d
ybI8iK02DtdgoV4z08foFR3EROmOq9nIidfO+BvRYTLNj63K+1fvodu8KhY8
eLNI93Uh5o/5aWW0DL+fzPML1Sow37Puwlm3eMBc2bUzuhH9m1kuoco8mNBf
88jhMfKN7WsVLnFBsFRLINuC8d+n8pq5OH/cMtN17kRdo11hdz4bbIN/ZMt1
oR66YnxyOx/2LRcZsPuOukPpBCueCX3U5K/n//GSifkfw5jgWGyk1Iws2G6W
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
haIuebM+3ZDzf/9fDPk9ffVBfzb8P4T0A6s=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 20000.}, {0, 0.10311704675872502`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.688706556547431*^9, 3.6887068761072817`*^9, 
  3.688707202587901*^9, 3.688708429311344*^9, 3.688739623987962*^9, 
  3.6887397262435207`*^9, 3.688740214141637*^9, 3.6887410213670387`*^9, 
  3.688741456721466*^9, 3.6887516741170397`*^9, 3.688751832814542*^9, 
  3.688752113365809*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"timesAndMean1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timesAndMean2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timesAndVar1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timesAndVar2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timesAndCov", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mean2mean", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", "\[CapitalDelta]c1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/", "\[CapitalDelta]c2"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noseTravel", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"results", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "12", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"timesAndMean1", ",", "timesAndMean2"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"timesAndVar1", ",", "timesAndVar2", ",", "timesAndCov"}], "}"}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Black"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mean2mean", ",", "noseTravel"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.688708451049461*^9, 3.6887086300771112`*^9}, {
  3.688708703200172*^9, 3.688708745911834*^9}, {3.688740484840589*^9, 
  3.688740523919965*^9}, {3.688740622104692*^9, 3.6887406970010777`*^9}, {
  3.688740794072215*^9, 3.688740802560251*^9}, {3.6887411375934963`*^9, 
  3.688741222992558*^9}, {3.688741696666604*^9, 3.6887416989377317`*^9}, {
  3.688741732417933*^9, 3.6887417360820217`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.004583333333333334], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
AWY54Uc=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
rg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 20000.}, {0, 3.2267578769019645`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127904316*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.004583333333333334], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJw1mnc8l9///+0VsveMRLJFkXOeJWkoe7UUpZDMUohoapkRIXvvnb33eL3s
ihKZ2WSPn8/3fftd/1y3++2M63ld53Eez+e53S5hczu922QkJCT85CQk/7v/
/6tx52EH48QM2s/w8qNuTRcOj/2+v2Z5Bn3i0vtboj6BXyjutKsxzSIh6kPF
LsEL2DLSI7JacBYZPA4OGSOnAurKKQe5m7PI0F6vYErtACSyZ7p3686hJes4
QaPjpnDs6sZ6lMQkutq8KR5mfwMm/f+Nl3v/QWmpPYNHdm5CDqf7QBAaQU6/
SqB99xZQNZ+P6dAfRp+yM76fSrsDaVesp7x/jaDm7i7VYz334ItD8tgNzXk0
N8nI+kzDDk5IR1n4V64iM9Pq/AxrB/CJ4btCtKTGm5cKFfLrHID9r9eGFsM+
rFZGU+p7zxFeFxa8NfdhxnrXPawEQp2AuqjFm9aXG3teqU92z3AC7/t0Kodo
ebDGS2cq/1UnePdTqDTAmRcvXDtwker1I0ji1mauObGIBnhUlcI7H4NJsmGL
zOchdL7spabuz8dgs3Hk87LcEJoeLSs2j/QAqhP2fV+8a5HhPSRzRcUTQo+X
/H1oUYtYyrXfqYZ6gVXZz8TckiY0IZeXkynpDQpSPnXXn7YhE8rpPGzlDUwS
g7vGXh2oobCvKFfyGdzLytI0ut6FulkHjOiPP4PTIoeCLhR1oVbVy67FUc+B
036Q10nzB+K/ZshhxfoSzKdE9HOThpBr/Knrm+4v4ZypCRzV+I1esPipwI1X
IODjKn9fbhi1ZYfwKnK/BrrHtwzqXIZRXCbbUYGkN/D2YlKcmMg4ei1eyGGS
9haORD8gsZubQ+sBAyEiLe9gIXTk2dT9VXSldzM/wfUDnK2luPqukAybbjQ0
fnz/AQIcEgb1aMnx9u7ehX0BjsQ9ubZAiVeHzydonfKDCsGaV+fP0+FZ3n7B
nRQ/0GK7y5zwZx8OenWdYqjOD9ryKu1WuOnxlUfdV7T0/IF0p9OuuHkfdkHi
h6jm/cF25VgwmwctfsR3mcXxUABMruwXeZlCg5f0bYU43wRA571h14EYakz7
0QVzMgfCChXQaMhTY/rezD+9fEFwXp7xg9olapy9zMIj6RQEjA4NE+zHqPHE
68PnaLeCIOhpu6AFOTXeiTzpc4n/I+Bjv0HvHxVmOcZXbiX4EUTM7PRdl6nw
TMfvk+4iH+HOiGslcYMKhxbwvFtUD4YZ1kNuwE+DyTV3tSbOBYPyo4u1dxRo
sB+1Og9fRTDUUccL2VDtw10ZThocpCHAoEA7yfGDAV8Km+wyxCEgqPt3YL6F
CUd/po0qdAyB9+UdHBXNLLiHTc9x3DsEvoh/GLf1ZsX75rve87wNgeYEu1Hf
36x49hAh/hbDJ9ClnlBRJ/Bgr29DI0caPoGigAjbnV5h3HRb60/ar0/wT/xR
QyXTAVyYVtDktj8U2JrCsjqZD+DLv6bMBqJC4XpgYw5dBS9eUbfPX2cMA2b3
V6V63Ux4ULd1IyY4DCzz01Mlrm8j+5Lhy1L1YTD5pf/mtY5/yDvvpYqy7mf4
UhBYPVb2B4UdtZhYkwyHwIibCyLFfWjo7PL4YFU43PLLzP3Y2YfqOH/WGPSF
Q+mc7BCPZj/qjXV6x/Q8Eh63anl6Fo0iEjuSfx2BkcDke9RobGsUSWpvCR3K
i4ThEF7vV05jyFzL6EJoVyRcEEgIvdU4hkj/Z27wBcZDWw6F8I0j5ZS6PC2H
LyDsj1P+/B1D+bOiRdZTX+Cwx5DHQ5oxdDxYhNxAJQrE/3BVJ9mPorZI+0jB
21FQqqBFu/p7FPV+/+3+NygKwmZe6OCocVTP+mnwTGcUcGx/fqNEOYP6+mL+
2sxFgfMhAT2B/HkkK6VimGcSDQZFU850xpvom83JgwoO0RBPNLvWNbOFYv+U
h5R/jIaB6r+GoQ3bqOmje8dsUzTM7wuNicjfQvXlwrYKs9EgQtlKPh+0ic78
OEFMfRgD3gGp3SPfthFl8WXB289joOjBaKJI0A6aLd0RGKqPgZ+2io4KfiQ4
UffxWqNVLGgvR6cqvdtG+bfd3Pa/iIXB2VOpPwS2UbJh1O7xd7FwT0KA8sC+
bVTBTjb5JiUW3tcylWQNbaEkjitpHD2xcPyxAx035V58ptWe3eux8DFnaybp
3jZ6H4yOfrOOgzDxURafB7toY6otd843DqKmnrEcXN9FM28UJOLS4+DWt9ic
Qk4SrC9Q0rvwba/dbUVdkY8E12zO3Tm3GQdqXqGXyyRIMOc7uzNvBONh+GN3
388nJJjtQsS7C/fjoSIgkHMpggwHtnGt136OB7f2DNrpSHLMa3xNq4w6ATyV
ld51vCbFeWsSQlbqCRB220ZKa3cLTTeq/5zZYx9LB+3zC1voggbSnh9OANrw
NVedW8uInqWQUnk6AdQqDd4c2VhGnc1GhePciTARdtrX7M4G+p9d7dolgu6c
1IRkLzV+Pv699M5AItyOPWLIF8mGGR01k4/SJcFpzuKpan5OrPOg9xyn2h6f
Xv/cYcSFp2VSSzZckiDDq+165Twnjoo61fbqWRLIcpTemMvixGv2bOhVRxIY
am85K3KzY+tS17odumR48eFhvxYHC2YWWl+xupsM3PZC64RCGlwxnDjrGpAM
Hu15riEOFDiUa93uN6QAtbHYVr4BOZ4SmC8a1k2BqpQ70WriFPijM/jcNEgB
267ElUBNCkxGuLPB8j4F/jL7xfwppMLSn/tOO/enQLXSy6clItTYodGtkEUy
FWzq+55cHSbHwWuX+4tOp8KEM80/lngyLOvyRelfeyrcN2LWCj+1gTqeu/Lf
J6bCoQSafH2eDVTPfoDS8W8q+LrIP7M1X0MDDMr0sqJpYB1pZ0n1fRm10jfq
PB1Mg9+XFYpaBxaQu+WHefGxNPDUW7VZZFhEpa9wJ9VGGkSfdHxg8mYRaUxr
CzQKpMOCb+grZ+slRNljhxXd0oFTX109pGMZ0eq84/2ZlQ5ObD9XXlQto3GF
KwKtfekwRZap3352GZHThevmTqWDs7DsUOzcEpplCfyp+yIDTn7poNO7t4gk
SRtqXgVlAE756OqnsoSaXw30vqjPABNTk5tO39eQas0T5ovymdBi3rRwho0S
/58ecCYsG+m9FGKixHzy2pbKAZnAforLzWR3B+m/ofVfzcyE6NRrqjSOG+i9
HxWX5XIm3Jh7JHynZAklxyh51FFmgXbJQY21W4volWhiIPWRLBAtcTVRjJpD
GbOnvI/iLKgLdg7N/D2L1j27lMTuZ8G4+Y33c7qL6PSxqENtr7Mgw8JSqDlq
BVk5UyUe+5i1p4CTel2ba8jirGp3XkIW/Oq5aNihtIVUj/l4V9ZkQVCeTnYA
FQkeDj8XLzqTBWyCr42EJXaQTKJvUtdyFghaBKwffL+FZJsqRd5IZ4OZ6RVz
xoxJtHDn/OM/+tkw/Xp733WdATRClHXdNMyGynwdg2m/H2j12qjGUZNs0Dqs
eHst+zu67RWqHfwhG6zuCuwLHG9BNA9HLjGEZoOy0sPuOJ5mdDBiZ/dqZDaw
RzE+v27YhIzqGfTFq7Lhx+FWYVWbRjT2/msw90Q2JGdEam/RE5DEcGtt/Ew2
kJ/zLJoWJiKRalpNY4ocOEOjpePJ149ixMLPuZ7KgQkr5UE5mVWkqJ1gdEU7
B+ip/zZSS+4gZ/978Zl3cyBDl3ci+g0V/p41ZuTukAM5a/zX3rXQ4NFCL0aH
1BwY94Cixof78Ld7N3jzu3OAVSLQaXOXAq/8LZZS/54D0iV3akQZKPBLCpbz
fms5wDfJh86c2UU9JQPT23K5IJ2dYhz1eANpWGxeK7DKBXHmpKGfNVuo24D9
zTu3XOCm1Kg109hA5Gbw/tnzXGCxGsjUP7WGTvQf+fjpRS4IHjxNTbKziv6v
GH+dCxEmJOYUN1dR+dmnpeK+uTD3WdlZwfkfup/4VtCrPhf+jKqJOxQNIT5P
5wm37Vy4f0Gx30eagBJtdn6z8eWBlRXzUf3YDrTS/uPdCM4Dg0vBHLdpetDP
8pOXGs7kgUk6mfiTxl5UXUtGTDbPg40R2ZfTj4fQDZof8l5P84BYoeNtpDqJ
Fkmm418P5gFf3X2yl7tkeISvS8pyIg8mbH23932nwLpcHf4flvIg0FBqsayC
Co88+lh+ay0PbpjVpcQFUeO3H/Y713Png8C64QUdSgYsdfRfgKRFPmy3jjz+
t8KCQxY7L51+lA9198elc+NZ8foh9/dXPPPBT4DwsLmNFT+92wSNxflwXdPf
n52KDZd9/R6zVJYPFBF6L5eo2fBbxm3+tO582CKqaUwdZcObk71miyP54Nzx
sFkjmg1TPuqoKVjKh5OOYk1u99gxT7/xsv1yPqBg6uLpR+z4s58x9RHyAlix
+9CvF8SBZfIqW6TlCiChkqQnJ4oXazwtvWd0sgAybGMcjK7yY9dZNTpP9QJY
LJH/Qe/Lj1uD1CTnbxbs5Y8f8XhQAOtR+3hu3S6AJ1SvywOaBLApBysfnWsB
ZFZW6t2d4sPzPgJTOq8KYExksd9TmQfLRAjdpAsuAKm3Dfeaqtmxlf6FX2tL
BXDpSfs/2YxvCIv+zrOnLYQZJbr1DJFedIFszSyZsRCsKZpVvqBe1Bd8NP33
Ho/8EhtrudSLNLXWPQ0sC+HsfgXCzemZ/+of+0L49y+fe1ZuAZ3xkw/MdywE
d+WRZdVfCyjij+OXdy6F4LbIcvq25BJiOBbsYhxZCEjHyoA6eQe5TL06+ra2
ECSY/V2zSsiwmCYD53Z/IWwdincWUyDDZg07Sc7rhaCcyvEo9dIOenBb86s1
XRFYtKfl7WvbQAS2O1EWQkUgxyqvHLW4goRDTdZmpfbarcL7Rjj/Ier8Ep7D
T4qAJ4aMt3F+BZ2KOSom9LoIeLl7FJ6JbKBJ79PvdX2LYMW8LP9o3xa6Wy4/
cPJTEeyc2fX+5ECCz677MbXlFoH2g8gBER1avGyS+/BAYxEMSPN/WpJgxpWM
Pxl714vgjP3xSvlhfqy+/H63d2NvfLm0wSdeAZz+vOBJGONX4BOxjrUaFMJP
RL+yIravQDr7yZRTSRgHvbx16IDgVzh6MimRIVYYiyXyWxbf/wpGIEuQo+LD
afnyd2xcvkJmBnez0hYPDqxWkQh8/hVsspWetqVx40Hqw2H19V9h252xtOYg
F76htSnV//cruCRHXx1E3Ngp/2KU6vJXyJBxSbS+y40j6zN6raSKIdvwAFvx
QTbsd/289zHFYjhy3yDtL2LBHHcdHZt1iuFF+fHDiUCGWXOkh1UKi0H3gn/t
520CauBmKeX8WgxMrtlOR2WI6N8+Yu/N1mKI9EoNIEh1I3pDn2OMhGJgCSLP
ItD2oBQ5V4aOyWKwltlV0SYZQHC34YTuSjH8vVXAsP/EEHrvs+HScqoEiOGi
I2+Cl5HTJ/YDl3VLgHmNWYzGfQ3ZVOidXzQqAcphSl8fsY3/9GZSAvGhCVwJ
e374obyAgv16CfSxVbsP2m4hu4JKXQ7LEnC6/dTOSn4XmeWKSXA4lYDqr2mB
ZG4yrDI3SmEbVgIF0WnLD57tw8HSsjoj7SXQOzMYR+/EihWGDvxaGy2BIxOt
z2v1WfERfzdNVtpS4D45bqFIzYifOqNCd4lSoFryfGH3mRy/t6xt2JAsBd7a
TE6+STIsOZd8eFKjFMzVN0TrODbQ8/t2HME2pRCWTkew29sPlnCceehzKejf
7STP3V1E9RyRycudpXB7MumMS+E6kqTt/UPbWwr3F5bbxEg2kJX0BKnX/jKI
XHv4YF1jC230Lv/5KFMGLXxythVNm8jtHl2zx4UyENJ/N6EvuIkKmO+mPdEr
g/AxZb7HWxuI7qU4xwmjMlgsGkhRWdpA3CP2xhHPyyDvxHgnY/8GWtl+nlD8
oQye0DRaxnZvIGudTyQXUsqAja3886eRdTTwI8j+XFsZnL8WTaHOsoL4peRa
aTv3xtsOcu5a/kM12Z+cFenKoTLb+Fd/7DQyznuad0iwHDoVnj/U05xEdHkC
+48Il8PI51IjasVJdFLKjDpFoxxKshomZczGkH9lNUOWQzkcaOOhGnMZQ9Lj
7LLNLuXAOZp/vHZiDH3wiBucdC2H03S8bLcYx5FTrnHmj7flMCjqqK67Po60
ea+K3wwqB7bzr7o1rScQ1Ug422JROeRl0tr0S08hple70V+ryqEqf65aLWUK
uZ7L9JjvK4cJ2sq5ZzIzSN79YVA9fQUsHXMZ0q5eQU/clUWUGSrA+wyj4eCv
FUTh5+rBqFIBOc70JfJFO4j8/857FZD/lT7KNXUHaZzZT7TeYxeB9vePE3dQ
td6Lz9VmFWAlrnWNOnUdSTw/ebT1XgU8PXr6sHbMClqociE/+aACaB6fr5wa
XkZXJVULyTMrYJn8MIPNxhJ6DyEc600VcDSGT9Kpbk/PxyW8bL5XwGRW3KUn
g2R4tpj01L+lCgj7xlWzeJseHxeuG3pJUwkM0m3Gv93ZcANvLd3vPcb7n9/g
iGHDVueSyfx5KkHijxDHMgcPNikS1bbhq4TmQxcSYix4ME2svIjr0Uo49pMl
qoqMBxed+N5Fq1kJmT2/e5nOcOH1udx/t89XglfBnQ5RHi7cS2gNwTqVINmS
MXRtmxPLOBIXDt2vhM83rA0XRbixlMzrGk67SvDo/6fiy8GNM3TH85FDJfgZ
S9DOTnDhPBtKmyTHShC5LGefU8GFg2SzjoW6V0JGWIn6NWsO3D8aPPwzoBI8
GQS/MunT4ivCljlzUZVglXXrxGDMDjpJ1Cc7nFgJMRarSm+t19CBF+I1omV7
8z2TJ9NmHkMalw/3RFRWwqLYxvexVyNIaZ871dmWSnDTbknKOfcDqQa6/bLp
qoTVOLPw08/3/MnjtfrTPYZWyXIOtx4U2kSwcO6phLePTz8dtu1GUgzMohND
lbAz1tzMd4qArtl7br6drYQNdZmKV9CKSlPsO9n/VYJzSmqCLWUL+vOCmFtD
UQUH7CymD6U2Iuqw4uJO5iqg2EwVVdJsRO8p2xZJRarAJvgJ5ZpcM+LRG403
kquC1jNXgmrY29CDg52MjWpVoDq0GtDk1oF8XHacR22qgKpsRMU7uAd1U9RX
xDysAuojj8RQXD/6aGAdQhlQBVxRA91jIcNI4a+anmFgFbx/23crjmTkP70G
VYFi1T8r46Mj6PwvHzubuCq4lP7xK6PUJJosXd4S/loFHrsK0xf6F1CvQgWb
QU8VzL6VebZOvoW6Xj+NiFiogjvLDJR0e/7wi7ulMJW7GuIuDrk+thlAeRXx
w1Hi1fAwx9Hw7DARmS1WkL04Uw0f3QhJZXcb0WzD4pn069Vw7fc787dzXags
OU71qks1HMiENhPWMcRbftvox7NqCDR95TGmNocEll5Gbr+ohsPL9uTkrvOI
NEahlD64GsJ6GmQTz66inemneuGfqsErZNVtwnYN1Zy/XvOjqBrINihoWvZR
Yp9md60jldWQucryd4mZBpOH/Tib31wNii8fhvvXMeA6oYpQ285qsG4bZkcB
zDiz5K5gXk818LB2Unf+YsE91ytcf/dXw9CD+C5leTbM4B8ZQva7GrJoToc1
F3Fi9jdV0i0r1ZBK892DW1QQ13WN032mrIHQDynaTziF8ZXYDoMrtDXQyeM4
l+IhjElkz8Sy0dfAA52jRvs7hPEGZSj9BaEaOE/47k33TRTrG/ram6vWgBPB
endO8zAuPRZ4gRPv9bdL0nCkkMSvF8VWzNVrgOSKitvBbkl8toe5WPF8DRx5
R3OIsHoEf3WKnfyhVwMMDz0+SFNLY+bs0BBqqxp4eOytUVugFC7TrXDzsa4B
Yd8aCYnLUpjWlzN61aYG3NcckIeAFB4UIyeo29eAzP4wo7gLR/ByzufgNM8a
0Df682YqQBzbLr1sS/GqgdkxAXyZSxz/n55e14Dph1DZ+joxHBx/QaDMrwa8
t1N6OVIP4t4Xd9BodA1stxeEXvoghuVsMyNS42ogdiY3R4f+EBZ3tXF9XFID
bCzd5y3NpLBvnte2wLcaIHN6J3p0XAFLqYiJsg/WQIOBJpuwnyIeuxGllzxW
A0+KGjkoKZVw7riUWvlyDbw/oV/hWqiMo+6QGjbu1kATS7K6QPEx7Hdx9cY3
7lroJZ65Tuaggv1937XzCtaCbVmh5EN3FfxsouA7rWwt2J8fNc4cOIbfNkx9
kDtWC9Wn7fu/kCjjMJkFnwidWnB7p0Ka/E0aD8oOxWRdq4UUNx7P+sRDmGNh
/22Bm7XQViDMzMUlhtWU5kjyLWvBSflZ3fcfIlj20cfi0ju18Khglk7OWwSn
H44M1rarBZcLlU8zFIVxr6z1TrlTLVSZ5k3VSQjhcxQbOYS3tYD+Pjp+4z4v
nrdKWPJ6XwvThfu6r1nyYtkeLY93exx/41au2l1ezGPYEn4/uBZ2H1nTyqTy
YktiWpdpQS0UurBm3+Tnw/5u7/t6imrhFe02t2oRLz59XSk5v7IWQs+RPXvU
xY1zVNecTapqITfstWVpDDdum4ho52+vhaKWhG5Eyo6zqOqF88dr4fCvjan4
LSqs0BC3EjFVC+9r57tdtSnxjbsoN26nFr7Em7UJR6+jNjxy8wtLHczqbrFR
351HtlXqAh6CdfB9P/mXjbhJ5JUXxnBCow4udtnE6R37hY5e+5tbfb0OTkdz
GG/JDKKOzlrvGec6oCbyiPDvnTeJP66eN3yw105huS7aNIQo/6c39zpAVLqK
zizDKPZ823rAqzpgivTIuXthFCkek/+jFVYHM6l0rvk7s8jknE9WwZc6qKVI
cj4Qt4Aet0kWK8bWAXBeCio9toSCV5FnQlodbJxQkevgXUOWKctq2UV1kOsy
mhtlu4PYNBimdIfrYKiyR1SHmxTnuhIdZ5bqoKh3gTtymARrVXo32m7WwcuM
HhciCykmcNRJTZPXA8fnaHsuR1K8deJcdB9zPVjoV7n+2qufkyq+lccK1QPX
ZHjHBAk5dn8p7WkpXg/3AzbzpQ+Q42v7zlnbSNaDcPcdi9vc5Pjm9Er6S/l6
yJ3OL7UtJ8N8nDsmf9TrYZ3lNXnln11E/doj3+BcPUxd8FQc0NtG1BnfLJL1
6kHfZ42FhG0dHQ6ad6y3rAejx+u+yfOL6FH6qalUl3rgvCzO1x03i0TND4RW
uteDQmGKVq7nNLKSVRvhel0PhvuN/x5LGkdqY+IH2wPrYUhf3XYudAQ5J2eN
un+qBx1NxvgF5mF07PDaI6rsvXj/0DfKHvyBaoIvqwxV10PhWvlZve2fiO7c
fA7Nt3o4tD9q3NxoEl28mBXF8L0eIiFt5dLWJMr9uPWJYacebL6lsPCWbiH9
gAPEVv4GoLYOEc1MpMZNCl0ibsINMJn31UGvmwarKrwrUpdtAPkIj5jkDAas
FrMwIHusAab/eXeDAhNehhf2daoNULsREU/TzYQj+wts5bQagPG7fAZfJyvW
9BE2JLFqgPIVfqfHMVz/+Zd9A1ym3qGIkOTGMBie5PykAWRslcweWnFh9yXK
+JVXDRBx9ZXNs3523IYY6W68aQBSnhOjqwzs+HnI55nRrAa4LU+vtHGcAt/4
KStWWNMAByLcVQ+1keKcTQeakLoGeO0xreBWT4pZH0cs3expgH/jDoN2EWSY
vDErIX6hARpSim53pdPh8gtCZsxkjaDwQfoxlTwL9uW9e2mCshHuHkwLDHzE
itt4uSKj9jcCk9GN2xK3ObDml+8z7ayN8OmHaELqDU7MWX2BCOKN4Ojrr5qP
uPC4XBLZe9VGoO80Wut7w4afJ82o+aBGkOd+r1g0xIr/ZUnnvNdqBOUfobZ0
8sz4pkN3U6B5I6iJU0WFP9uP6WInSI2tGuG5mvDuPzYmXDb/QVvKqxGkk2dk
fEcZMXSkTHi9aYRDXlIWi0J0+J5KfIv520bwZ9KIX42mxZMLBuk18Y1wTjQ+
IkZxB7GQNduUVTeCc6kv7bnYHQSX7DXP1jfCtN7UOzrPXSSe89ZheagRPK5c
HW6qIcNkFy1y2P42gtAWrVPR3v64ThMvx77bCPihz8SWJRm+sT14kpqkCRL5
1MQXjMmwl/9AwChZE+QcCFpSkiDDJ602lxb3N0Har1rrNQtSfJGT3q6Sqwnq
zPvmcmhJMY+Wx5VWoSbYVg4QcxgnwfrW4Za9qAl+XromO3KVDFPN/bq1eaYJ
tLx2HrgVkuON3+r6eWeb4LN1XHYKFwWW2LBzdr3cBPvdkd5kCx2m+J+ebjXB
9Y80fHe1mPBbl32jm05NQFl/znb+KRteOaXw/ZN7E3Rrj1/vzWTDhJSosW8e
e/E8e8hOtGfDk9V8vLm+TVCftByfE8iElRRlFXMCmkCTpk6UJmk/vnnz+LO2
yCYglrVkMDXS4YMjvyu74ptg5FNv1NW/NHjA/NUj5oomSJgZ+lzJSIU3TDVN
dL81ATfv4qZOISVeTSzZfvijCaJJk/s4Kimx4oOUE8s/myCkUOZpZg0ljj+d
WFNM3gzX+b7bfng6j9D86igJVTMUOTz/7tg+g9SyzqFc6mYIM088QlP2F40w
SXWFCjXD8v2D56/eHkHJLF7LBOVm2JEwnnr5bRrNw3FIvNkMH6LED36/v41s
u2Sj6e42g8HpUnHTnl0U5imWPW3XDLsqj46Y3yXFv40Zz0g5NYPswmANHzkZ
nlO6E8bv3AzyymYTn2XIcP+9ZDLLL81woU/ApD9nHy681dZ5b4/5s8kDuvP2
4QJb6nnHxGYQjyVeYzvBiLdlzwpa5jdD6dKvFq8aZnw9ZNpGqqsZ7nW3Dswl
cGNVG6eoub5m6PFLbxOU48VpwWm2pyf25n/kbVdhJoSf5/eyZU03g86N7bUr
fMI43CyiWX27GWj/nM8i3hfB9+zyhV+StcDlRff0v/Mi+Co5Q8MqUwssHRQS
zg0SxZcbX8lncrTAR8VB3uq3oniq2NF4krMFtoRGrpO9FMWOnwzNLh9qAReh
i++eD4vgI1ExVW1yLfCIJfOL7S0RzHyz5MA3+RaIEanemTYVwe5VuMr5VAtE
t46QMUuJ4DG6V31t6i1wfdet5ulFkf/8zKQF0n32fcxZPoj13gqFqJq2AD79
vdASi+FoTwrZh9daIGdwMo1W7xC+o25gt2PTAvo6mWKEN4fxfEHc81cPW2DO
nEtWoucwHvmddS7RtwUKPehDLsgcxG8PZx7NC2oBaVPd2sWfIvj591vJO5kt
YBo6xTQYLYCP/AnmVM9qgbT3WcVbHwVwXZh25N/SFoiK9T8be4Qfm/++uCPa
2QKMp8/xeR/mx0uRqX/O9LXAdMKJgYRb/Jhk/6vyxf4WuMVR/Iroxo//rvvf
sxxqgdcrL84d/MaPi78arXwfa4GgC/uexwoIYPeE54+YV1pArCHpTZ+xAP45
pfXRkawVTkbIbjGTC+CmnxVK0ftbQZj2m+Ppy/z4gX8I4Qx/Kzh6hKX9qufD
oTWvVN8Lt8LXB/nZP3L4cLoRVxA60AoBDj7d7tl82Oks1S/1s63gsJlZkR0j
gHUG5tJH99iSvb+JN10Ap2eH95HqtkJejkxxEZMg/klGoTFj1Aq7C74za5KC
OKOKU9bKphUYn9SynVQSwDib92m3XStQzNE/7tx7n1t3+cNaXFrhyH6FpgZF
fhxQ5Lup+aIVGq5Yq4fe5sPVq/dztN+2Au/crTmWE3zYoZfs/eXIVshk9rO2
9+DDJvGzB17FtcK9uO7X3ol8OKnqaSNb6d77vT7AH7VXz51m4Rqhb2yFVG4T
2Q+jbHit+LTNE0IrtNOdDY07w4xZZSkOV460Qhp54z7O31SYZZSBb3mPx9Bg
cnorFb6c1m8kRtUGUr9Z/1TcI8G5v27aewm3werDp7Jt1tvos/J7goRkG1ic
DzEq0NlC3JPNJ38daYNeEvEH1EJbaEHk6kkHmTagXLBo2Ozc/O/8qdUG0oWL
5BRua6jphIapkm4bmHzI/UJkWkNPU5/9oTBuA78r1fl+3avoU6ivrMoeK0kH
ZZ/pW0UHg+JQhmMb3Dfs0fvuT4JfhP9oPuLaBn+rTwk40lNimyVzobt7LCEr
rep2jBKTF4UkpXq2AUtdCVN3KS22U/ippf20DbpfiLetXKPDHIeuJzVEt8Gm
Fz96+IQfnzIspC6K2Xue1pm5pmB+fM3c8PKz7Db49Fvnb/xRfrz5jeLxavFe
/8aqjLtxfNg99bjql/o2IC/6uMZ3iw/7tLu0ve1vA6EnLp1XmPnwH5qUUuWF
NhBNklrlYOTBg3pWoQt7LJ1pWak7y43/1l/1fb7cBgVc4TceOHFjDmzhv5+i
HWIv1KV/VGHHBRdnnkgdaAdDp1+RNQzUmHs/s/iQdDuc8Jxp72Aix1wnOq5H
yrSD5lhsFeUsGTbt9n3RdKwdHLTM5NXJyLA2tJtNoXYQpFs3pqMgw5oveS+E
GLdDtNoJnu0NChy92xv97mo7tC9ZbJ2epcQe/oK6K3tsOfkp1ZScCqc8VuWu
sGyHJxUPrtpJ0OCJ/bTg9LodchcPqmSUM2PIaD/PGdAOFlfKLqkdY8UkijP1
tjHtYGBgefHCEgsOW61bc89vh/J9Dh1MCox49MSk98PSdmgorRNqo9+HHfhb
bEsr2uF7YCgpdxotJnFLsehqbgdJw0yTiAxKzDVlpMVAbAfdzJcLTKvkeCua
QzrzdztYZ1iwfD1KiqdTH6T2jrVDmxd9+5EBEjyt/bWAeXJvfgFq9SMNJPj2
YE7FO/IOuO3K53C1gQyze019NWPsAFlXaumCdAp8upsxZv+BDjBV0L7W30T5
X/6GDshTDvNW9ybBkoIq+l81OqBD6DWNeeYuKlEmD3uh0wH3KXj29RK2UcYt
u9Rt/Q7weTdIfuThNlov7fzJ8KgDDhpvBnqk7CB+CRf94VcdQG7dbTVvSYLv
GTSfk37dAX9uBNBlfibBNXIMW5l+HUBCodvkrLlXL94dni+L6wBv7YmY08Vk
2NOPReliQgdMhW0dNugkwxYtFCecvnYALUNCdFYsOf54bVFzraYD/o52rO+2
kmNhrs6EYmIHqK4GiXGkkeN3zKkfjb51wOSIVWPzA3K8KiLebbXH5793dtzd
47G4wxF5Yx1gTGjsLJ4kw/tUJaWWyQnQoieq+oiGFMs3fmMopCOAc7Np6C1W
EhxBfTT7GwMBPnF/lF+W30Vq7b2p1MwEWPq5I9couYNUWr4Sa4UJ8Fm+/9Ab
sQ00V3hNiUKCADlOQfFf1jYQkj2sdkCOACdX75Lw39tFn8v4diMQAWbFm5w6
W2jxvPHyRzhNAAXHD7kvgpmwteui4u4lAsgcXpe4u8CN1648etetTQDzcw3Z
KSU8uJnXs1xXjwDM/tomttz8eEinUGPTlAB8+yJMODaEMUreWdK8SoCp4Ae2
+/4cwBrrI3lq1wjA6m25cBP28mfdJe+Pt/bar+e2Po8+iMcUbpwwsCIAh6Ap
Z8wvMXx94ftfehsCPAtYTbt87hA2TXbz9HMgwFbERARdjTimWf9pRuVEgJFk
ddkQDgk84aluXvGEACRBm2+pEiXxV6tMpwRvAsRHVDJ5skphw1t6VVovCDDe
Fb08uimFncOG6Ld8CKBzvpRv35YMPv7y0+5NPwKcN7jZrbUth5M+MJMoBhHg
hN0rraVwBUx6t8Tv0kcCbIs7FkYLK/6X78MIoPjmX/5xcyUcftgdBj8TQDIq
dkNTShnbdxVmacYQ4BqrrJH6qWM4qOqMj0IaAe65o2bTZHlMR518/WA6ARwC
CpT2d8vh7SjHdOksAhTQy701UJLGdT/Z1X7kE+B3sJLhM/qDmD32CZtM2d73
nfhLZenLjVNFBs/5NROASdedJ2qWCm+dFGu51kqA1yEpN4ZXKXAl99FKAQIB
UqttzydnkeLowEtqNwYIcFVjN/S8yAoy8VyKFxokwJmUV30JQf+QPj/V1OUF
AggIpm+2akyi0afhs0/2+CWy0qlRmUTXCzUk2vf4BuZ27eWYRBpHFEjG1whA
ahByUjhjDPH/MrPgWScAJafGI6XQMST0Xsh2YJcAc6a/k30a/yAelQHFq/RE
uDl3jDOheRhF+KSVPdpjiii53udNw2iNITVUlJ0IP3/X1h7lGUGC4UndUvxE
4Mp41lA79weN67b9WhMnwkJ+em9B8CSq+it1hEtijwNOndRvmkQVoZqHXkoT
wefI46zMsGmkPHPirawqEUxcXlaYlC0gv4bLfFvqRKBdKmt6vbiETHlrzD3P
EMExpsTl8Idl9CG0h1XJkAiWxhRHFyLX0OHiH9Kjl4nwPDn5wX28iS49f2x3
1IwIVqL6IdS3t9Gvs1SGbhZEmDdyG9wu2kXfnviuk1gSwUZPwNEjkAS/CnJm
rLImQri4k/75eVLMdZ836o7jXjxPr+r8/U6OJzL8RXRdifCltZbUQn3P/yQu
7af2JMKAyo3c5x2UeMpceVnnKRESmZ95l8xQ4rN26RbhPkTgdfthzXWXCpfY
GhxX9ifCrCLHzRQPKvzJQELRbI/PhiubNO2xbnL6qZQ9przy6OS7p1T/6TWI
CI9VG+kyPKlwoEjCJkUEEdgl1ggZt6nwssyWfVkMEe5vpYw+k92bn5s5ojCe
CL/+1QTu36DEqr/i8usSiUBF7n+TvJYSH6O+1BeeSoRDI7pCQ9J7+evTukFf
DhEcjn0WTz6zd15k8g9eKyQC8+DJesUHpPhGsWHuViURQpTcJG7c2UahVwUc
n9cTIYvNumIxbxN9iavhLW0iQur9wWHWy5toNVq5sr+LCLcJjOMKL7aQJJeE
qf83IvwRbOuX37eDvjwb6h0c3tOLbX6lCpDgBy9/q+3MEMHsbE+jwAgJNt5f
3vF2jQiS8nF4U4ME05wvWz+yQYSDEVlD7uwkWM5Aji9liwjpgQNKmm92UZ7D
b9W323v6vJdl6nhpF/Ufyg1gpumE7yf5nX50bqG1tT7aStZO0Pwl/dRufhN9
ltlZamHvhI2+IN7RP5toOF3g94pAJ5j82WL/UreJGPk9RKlFOsEr9tqriZZN
tLT51tNfshNKam7OMolsoRjWIzeCpDpBenv5Q9KZLcQRmkf2TLYT5qLPRVi8
2ULKd+InSRU7Aes01/iPbiEdmzkKY9VOoP/MrBFUuI22KNOYnp3ohILZyaJP
PdvojGSphhbqhHs9rAm6lDvoIWNjXfbZTsg0jz5Ic58Ex/syie3T3Ytfn1OB
7wYFbk3K4O0y7IRs2yyrYWUafP+z5Z1jxp3Q+OvO2ewAWjwY4D5z4XIneLos
PyfM0WM7E1O+ArNOsGi+Wj9JyYIXynoSSs07IUy7qVdMkw3P5u403LDtBOP3
0pvppnx4SLnVO+xxJ+Sen0rOuyuEE3rMk2rdO0H46g+LRyeF8Nzd8CufnnQC
W75Hjv1hIVzZfeyD1+tOSGxxOyzygwerccz7X3zTCWmcLoKfP3H/Vx986AQD
3yJl4ykO/CHn45SOXyeYk8ZQ38Hs2JfDvDIuphMu+dvfFmOlxrxl/oLdcZ1w
qH6g63oVJS7lYv5Jl9IJYjPcxYGnyTENIx+3UmEnHFg1Y6rt2kWjqScl4veY
7tRAiHveLnpEZVuGSjuB8pJdX33eDhoWsgiPq+iEN/clPUo0dxDzItulDz86
wd2m55vjPVIs/kS9PvNnJ/ReJRrGJZHib9In/kztcRfRIL86hRTz2NSJqo/v
rRfFULfFAglOMFlhuzXfCSoP/Lex+hZicLM8IrO9t34STiEyP5YQ8dTR4UGy
LqBz07w5e28BlWR7fSVSdkE59YvhUr95JHRtZtmPrgtCrAV7/z2aQ1oOY/GI
qwvs59kzreYXkGvRpvFj7i6IG0ynNXm9iIIOMOy68XRB5rPKhz4sSygEBikc
ebuAqJgRsh61hHxperaq+bqgq4r+2Nc9P0xd67JfkOiCqtSlz8iRBFM//fTy
m2QXpNdLX5t9T4onpPNTeKW6IL6dfp5biwyPmDApV8p1gWNl6wOKc5T4gIIA
pYx8F9yLHXV/FEyJnW6+jh873gWfvrX/s7Wlx1fioGpbtQsCbxaXbZLsx15/
Cq/SnOyCL6dOiamHsWJfGsq7eqe6YJFmcblkhg2fOSz4+4BuF9Qt00jMah/E
X0+MytnsMVue0lLV64O49PadHGXDLqAwP2ijf0UcS18gCP7b4zWLmDe+g+LY
xqmn44xJFxzyDqfXuH4YP7jXLHjPtAtOzpdvJDFK4qP28sv51/b6r6VkBl6X
wl4yPtWWd7qgKcSPZ7RfFnuXP6P3vNsFD836AsZZ5PDFIq+TgXZdwDBl9Onf
U3kcmWrqbfagC67QMcoyBShgkerIiMTHe+uzURDcf1wRS3SpaL5x7QJxBc0t
SWNFPHP24UE69y4Y2Re32/FMEc8zV4/MPu8Cj2c7yq2/FbEW3SXi8IsuSCl/
ujDbp4j/+1+sC9RcihlMchXx/wM6hKzZ
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
YFXvqXtpfmKQJpp4xFuvBDktZzg8hgRAyTjT4oxxCcbu0474Fy0I7pFOGYX2
JbhhPThvsiwE74pmLHxvlmCFx3Gz0v3CMF3pT38zrwTNx2cU2f0FYdzJhqv8
dQlqqGfVm9wRhF/zNTL670pQVCSuw9hVEIIoDhyN2CjBjwnQYZMkCG9qP/z4
K1+KdOKr71Q+y4DBpa1zFddK8ZTHzKLZVTV4fYrl4SOfUuS/D5KN4apAfgHD
HwSUos72lSVxURXQeisdHRdYiudu42WZVWX4vzAeUorc7jYTPJ7K0GB4r078
Cel5pWGjjJ8U4UZWGJ9/Rym23Wju9JTnBW4/91mfv6WoZru2m8ZpH2Q57kwx
c5ehcK/OqSfptPBr4P2jL1CGJtbNCt59TDDZoHui81AZaruHRugSWKCljWw4
52IZFpxOM5vp4QSbPe8V/O+Vod7X+7PlZbywuutHRshEGSYZKVanSnPDF26i
jN1sGTqZP6j/FsUNJuyDkY/XyrBW9UEj51Ue+OIV3XB5owx9CEtORVM8EPZ4
v3sHRzk6/UnPkHQVABnln0+lLpWjra5NrvBTSYhdHTlx0Kscz/8aTVIwkYFN
Md/wM37lOM+cx/CMQxbu2XdjV005brZtsxdky0J99bu0tfpyPMvHNKV6ThbC
6P/yvHpdjvtvhHAZV0nB1vfRC6tfyjG/urP/b5sEUHoNtlaslSOLap2Q9ZYY
cL61XHdZL8eFelcRmu9i8DzCklqavAJD1ciZnhWJglxZU6+sfAU2z6eyOhiK
gsG9OicL3QqEo3nX/A+LgfeiNo2ffgXePRYXsOYhBn1R2lLLthUor6yrelpX
GkypQ/22r1Qg7Y9f3Xs9ZOA0KxM3jXcFbov3W55MVITlUN65k8EV+LBgcrPz
nRrIJfHb0sRUoFZHK2G3KMA1s2MfN9YqUPbWyeOHPhwAEJ4qc9lbidd5gsIi
ZcnhGNnGhRz6SvxZI7t+vX4XjMUo50+RWExkH7tk5i44bLTpd8quEqcuCj82
TKH6L/+4VCJt/HsRJod9cChC4Vm5ayWSdTD2f1mmhaSvrimPPCsxMYhixnJq
P9CpxXhaJldiry2j8E1ufvCcC1YOa6vErcLDV9UaxEH0MB3b37eVKNulUZz9
XRIudO5ku29WYozD6NE/eyTB48rhageaKpyJ83/XeUMchpivpl7ir0I1wxtr
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
      "]]}, 
    {GrayLevel[0], PointSize[0.004583333333333334], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
1XDv//0vRoV9RSHZBu578P8DMA5CQg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 20000.}, {-0.00040386307448685144`, 
    0.00047934030470667973`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127966363*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzVXQ+QXlV1//Z779v/ye7mzyYbQjbZRJBMUORPLWqriEqrSIeadhKmxaaM
TAh26kAUdrMxmYzBQCJgiLhKx8G2VocOLVOIDKPtSEGBYjqmGhgwSFuMDQ1J
mrgxIZvd0+/d99753Xveue973+4mWTKzm7v33nf+/M6555577ttvP75q7epP
/cWqtTfdsGrhVbes+szqm264deFH/vKWalfQUCo1rC6VSj9YWIraVG0m38y/
m6JvpdI7o/8CuvHGG03vu63eErqjn6bSeKv575zqtxE6tOvbdPemjbRx42ba
8dhLNDxa7R5+gbau3UA794/459TXX5Umlun43q/Q4NbddHSMSmEhOefTqYNP
0dbBHfTs4VM0dnIfPXHHIA39bJjGxk7QwdcP0PDImHfOSJ39Y0TlcYhq9Buj
o7u30+DatdWf1la/n0f92/6FDoykT4zRkV130bodL9KxsejnUTr01B20bugV
Ok615uyl/62rfw/t3t5Pt97WT/39/XT72ptp9c230sCdj9CvTlJqDJ82Lea/
PmPM/Y9too0P/ZJOJhN/8/K91L/leToymj7qm/Ms7X20nv7n6L+eup/u+NYe
40gW+hr490XfyxHy31Rk3qnR/zEdGbNkVuc8R3tVXXz9VZqnjtJPHtxMD/zb
YRoWMlcikb/slzQ29sD2qsZGslP0xpObad3Xsg6RnRMbvnh/THPs2Mv091u2
0+PP3Evr/OhuZ5n/OpY5XopNNHroado6cA89+fpJGv3NL+iRTQM0tMcsm1K8
buZ655yqs38s0f/Ea9+lLZ/7NH3mznx5AwvjWN5GY+k3dj1Ed2/op9v6N9GO
R1+go6PJApjhG663P9Y8NMMHnryHBurw29MR7DPmOxuT3nLboja+g1V7cIKT
MpzM8Gmk/xYbR5j8m3onFfK0OpHexq0ZNXRafBpm9vHMmfHMOJ6dS2cuZXuT
XvvOAK1ZvaYq35o10fdb7nqe/i/e9UtlRfKvsNB3Ra0wanXZ4i84g5ncr+nX
e4bo8/f8kA6eoqZcaWHqRFo1mVtyFpO5Ks2RQ/T8gxtp8L6d9LM3TkZ7Y8Xn
PEukPmcnnUtojh2n1370bdrWv56++v3/pOP6tpgneOz1ZzSnG0s9PKTRYz+n
x7YN0LZ/PlDlEGcOJq8bZml/15Z2MZ3ZvG4vHXzxb+mBR/bRmwnl468M0eCW
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
xpXYDygTGFKf40SEeAvnL7EJYnEZWZooWdnxrYbjVebL8qqKRRoe6u5ZhIwB
4sHVYWaGmThA2KvBBYZDduqljuKIyImG1YFuxcaBNSUV0qR10Z5FPa4Yk2Af
hgJ3toDHeiEMAwHHmDSSygBMSrbGm4Hl8RXHTvFXkseIvd/aJ0P5EG8qVpZe
jma4SYTq/pzuSFjC7EAcYVtSW2hLnQCz17biyDTDx8hQ4eNWTXtrJ8UyrxuY
EPGtUYeTT24xYE0MrDC0vTbSQSSq7vKpbcSQx2yngiLp44ldUutm5lV/6hK8
XLHhDzhVVmy+FsH4zGxE49eqLAB5RyJ4C6sQzzMePqeGhZoV2ohobWwKwTTv
qKX5Eo5wZnVkcAHXBN1YmSaHaxHLAAhhD9v/7R+JT9buIkhOHZGiFs/0IS5j
W7BpeiPE8+1FzLqVnFgndqW022e9kptHk21HWK+Ff8SSynKT1svsj1hszpqK
VmtJbFMJuChWeC2GU5pwe7x2Fbrkxc6I2IAF0MVoi8emu/oDE3iZR+9Gfay7
sGGMPlCl4piI7MOqM4DVINwKWmijdr5A7km5OuBWsCzQy+yh2Grh3VieIYMO
TzZPcEHOMhPCkRAyZB/B3tjkWgiUxbMYyDUBJRldsysclqMwgeas8KEmBnSW
Am0792FHZ6QtVEW4gu9q0VAAKsOvYnXM4zod8QukJE78gYuBjaWBsgCCmcIi
2VttAgXhpGKgTfQUsR6FRUTECk8JuZWsQ9bbxjmBJOXQLh+3DVBywoPNtcMe
sFsmDuAUAU/FCmnJMopv/IWTJhImIdoBArYRr+UB50DBGdgnyU2KEHSjJJ7C
Vs2KuKCWnGUsQuYne/dO/pU6+KE2FlAD3bOVavEI4CP3AeQwwwxm3aqMahFC
B9+7Tc3mKfBRGASeqUGI0YoyTzNEmy2QBb+MeghAAYedzFGI7PMcFhy/wmyF
iS4m1eLKglDkTyGJy6cyLIHsUmZv10hSgQEPwDNXysZhupVRBFoQ1fc1YJ41
MwCAz3BibvkWpySTAYUZ5bemKeMkpUxuWrYMQ0m12osMFp6WUsLb6sWllydj
NOcdeAge2FxsSLC0DLFz3CdwJhPLO5ONEuqmtlPxtVtstMCFKTn+2/8So9nO
Bdln+iUhfsvVAafN5a+HoaIwibCewoW9oNENPYEU0tkq+Q1hy9st/u4m68Am
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
SQ/JjlLD/wOakk5j\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.004583333333333334], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJwV2Qk0lN8bB3DZ98i+hGwh+zKyf5kZM/Z932YMkYiotNjalaKiVBJS1mhR
lPKTUkqiiGyVSkqLIluW+r//c5zjfM773ud9nnufd+beM2vC4z0j2dnY2FZz
sLH9//9eJV7ib8pG88hFjSMX520Cqnw72PimbOx7f8W/qJ23uWKf9GqQf8rm
g+Kq/1Ra5m0eu99/JiU4ZRNZyDNg0zVvQ6Pwuu4VIXzqDqN41R8b81tuOs+V
pmxORFbP/1ZasHkxenZouGbSZtszrc/CbzjxxHB8iuEzaTOw5FEap8eNCLX3
d2bNJm02ff1+/Nwxbvww2N16XXrSpiowOmyFBA9G7sWPSUlO2ji0RIbxb+LB
7bHCrILdkzafb3t4937nATtv7qk8gSmb8E9vffxNedElq3U7gG3aZs0T/vrT
Anzo+3ti8s31aRslWwEmhx8fKkUfSq+OmLWRtCvYPi7Oj4Fs3vQEm0Ub87q9
D6/6C+JF+I8inWuLNidSy4/syxEEm8Gyk4HDsg0pQG+s0F8Idaa9VRfKedBC
MRxMVBNH5OUthdnLPOCb3ns2+oY4Zscv/3D7x4OoN78V/tWLY1ddqAK/Ji8K
y+o1irMloRisVSGpxYubHfTbXj2S0LCzKBMn8qYcLt7BeiaNDrbKd4Y2vEiK
2zCVkyYDLdZMSTuZFyaHtcb5X8ogZ+93VTsfXowkO6dL/pKF1yYlSwk/XiT2
qqslcsmha0uvHV8aL1hFQX7Orqtxvogs6HqBF5UWuglPohWhUi38YN8lXsSe
rov6NKmI/O0eqxuv8MIoeWrid6YSUj6lPbtSw4vB0h1P/mNbgzFHC+6kIV4Y
btB5s7pRGdvCa5+5mfFhG8+Hd39tVaC8Klap8T0fHD69qHS8rIKLCZtzPngK
4NjE5UrJaRXIZWw5L7VBAFT9OPPtsypY0Vzw2GqtIGYu+Uf9ElCFoJEI6eNd
IZyq/JrabKaKyswqxeE3wnj3YDj9dLQqouyXuXdprYSiHleo9w5VvPwsv28v
QwSCvUPLZ3+pInhNzXS8qSg2f6jt29iuhsbm5FS7XaKQLcG4urI6zH2ExU9+
EEWncDZ+1anjJZsN+VbAKtQ2Fzo109diRF7fdUZXDFLVtR9TP65F2Zrm7YJJ
YmgXiUgN4NLAm5KOPRIjYsj+QbHJsdXAfOEyy+qPGPQVu9V8PDSw9nft1jcL
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
1wTjwqH4cy9PkEH6TQrU0AjGzAm2jNkGMv6Tt7/BbRaMlnx2H54hMjxLuPJ5
bYNRfN5wdbsSBXfzM5l2TsFQD5y8/0eTgrDxE9Yk52AkieuffEujoLlWOTHG
MxhbW0UVZgm7+9+8zCD89deHqBeuFPT0L441+AYjZdRWXMmPAn6HzYLSzGBs
WvFU0SOAgs3bhR+zIoJBTxsr1QikEOfXHOaVyGDcbX+Rlh5CwSNNl6GUmGC8
nt+d+45BASedfe/nzcFgFFmknYgh4l0LTL2xMxgVPsa9jCQK4mxN58h7g+HX
cMxWMoWCmNGhMI+sYNxu6Nk9tIcCi8tv2S7mBWOp4/qVT3spKO9vNOA/E4wM
/KsbIZy+uiczmvBQt0sD3xYKjoZXO3G0BCP7wa9/UQkUrIjsc/5K2GGrOR8z
ioKTkwdr7J8Hw7Plroklk4LB2dGmn31E/ZStXSxHIp/ELP5LU8EoNawf0LOn
EB+wN2dfzwVjS9CB8VwbChZXHBBuYwvBU80ZjY8mxP01/zIOCofg+8FLmdUG
FGzY2jlXJx4CZ63D2WWKFASt2v8wfV0Ixp/6nC+TooD0XymPACkE6Zpc5Xu+
kmG5Y2LyVEwIsm8ZB3K8IiOi/x+r/VAITAT4drc/IePZqthAzrMhmNfdpiDX
TMYq3jYK7UYIlIbEPyoQFnzY9CKVMCOJ93V+OxkDza1tpx6F4G4UX9fGfjKs
ft5QuNsdgquhuyJuDZPxzUrunEd/CHzNL5YkvyHjqLPqtpiBEGw4261w7C0Z
j6QatQWHQhDafn/08xcy5t9XiTb9CMHJcwXOt4l8r5vrkI0mQ9BRsIv783cy
3gr2p+nPhMAu9A/bT8IWwYpCILxx24Ug+0Uy1rgpnu7gCcWdV6M/pDgoqJsZ
nzMTDoUg7+pBKmEPf4Use8I/Zj2K//BTsGnjx10NYqHgpmQcmhOg4NqF3wdd
xEPxS2FVbhixftFtJuNajqH4VjJdK0v0U94Xripr51D4irJvVj9I9Mu64xdE
o0MRdo8tPvQo0U8j71KHk0MRdeYMyS6bWL+wLWz1hwnrr5fekUNBpfK0uMv5
ULBdTNPaU06BN69I1r/roTBSmWV4V1DwxCJoSf9GKISraHOkKxQ07eVdv/pm
KI4LvEj820a8P9ZfIj62hEL6za/mjGWinvuRzJ8joTg85qL0dSUVTVqZZnE/
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
F1oR+B9SyIUF
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJyF2UtuHNcVBuCLZJKhBx5owAAdQSAMgxD0JCmKj5KsSKYUJ46VtxO74zhj
b+EupZdSS+kleAlB4P5PcL+uju6kcPw/z60yJVC/+u6Hr/79s9baL3/e2n+f
B8700+MXPNu0jP9489Pzow/oxJ0//sB/1/cO/I95fsQz/OiPPqC7w9Pe6uWt
mO+iDx79Efx7+AaPPn7Rr8DvgWeO/zH+6sX1O4b/Cfxj+ME92cu88OP/KX6Z
0zv6+NlH/Qn68I/gr5jjF3387u+ed/HLbP4D/PV7SF788x4+YbZf/JN/Ah7/
I/jJf0S/+/DtF370j9HLDx4/9U/ob9/o78CP/unu6bkDHr8nzMHjd0reKfzM
2dd+Z+Dmi5t3Dh7+EXj4z+AHv4s+/Av81D8DDz9+5+DP0cuPX75f94s+fpfo
g0evn/nqM8f/Cn5mT/z1Cz8/h+yn/zX6zMfw7x3g34BnPj7An3bP/NzQfxr5
PXP89NcveffQJ/8F/GnkF368rO8vRn7Hz77y20v45BUe/5cjXrMn+6Bvn5GH
X+Hxh194fq6/HOc9v1fkqdc//OS/Gvn2KfwEPPm/xj9z8vVnVt/R13yyzG+v
6Wf+65HfM+fPNfPgtzcjf6+PfvYxP37pl9kjP/n426/hX/rs8/nu+WDZb68f
/IZfD55+wdMv+KfL/MJPwNP3lr5vxll98fP3Bu/PvNsR38tzv+DJe0ue96X/
2xHv5BWefpnvMz880P/d7ulJnn0zPzrQ593I3+sDXvxHzA+W+R1+zfl7VObs
9xv6ZX6yzO/BH8J/xPyY/PSF79y+oC9+hT/BP37oO/zSJ++3u+dT8Mfgyfti
5Hf8eviPmU8P9AmePr/bPT3ph3/x08988D1+5uyj/5cj3uTr/+U4T5lP4T+F
f7aMT/h1/Ep/jv4Z8xn8i+W8Tt6Mv/cx02diH/u33++ez5fzC8/fw/E3r/i5
r8zny32Kfwr/jNmT+8FfP3H9O31n9DP7u4/69tWor/kMvwv88n14H+jL7xy/
M/jZP3O+L+8L/mz/92O/vX3oY/70fsRn93k/8vv7EZ/IV9/Rz+Q1ZvuYN+PX
/kDfzHlf7pfZkz74TfjZf4Lf4Rd+Dn4B/nyZP7sP+o6+o29/pH/wS/IulnH9
C79Cn+8veZfwc1/Bn8O/Iu8SPPeZOfeJfvY+0Xf0M3r7l/56uV/5eXLf+Nu/
/Wn037sP8ifv137sW/5X8PM+gt8s+9tv776C5/1kvmTO+yKv+t4s++vX8Zu9
P/Yt/oR/7hP/mX7x6+pzX+R37xv/9ucRr/ka/jV47jOz5wo89+s+5E34d/o5
z/hP9ne/vxzgp2/w62V++U3M6Yd+Qt/Ai599Mk/w03c3d/Nzv/jr192H/PbX
0V9+8No/+Av4E/zcb+abce7yPdMyX7+eOb/Xcx/w8oNf9wO/w7eP/Bm++pm8
9jf6Z3657Be8+mSGX783jN9ny7h6+eZ1+BN9D+EdPP7FJ6/2B9d/dr/MnlfL
ebP7f/3/8enrMa8xB699wTv+8mfwfgCvfTO/ol/2dR/82t93M/zozZMvPu3w
/F5Vv9KDd/C6r/DxD9+8vfsjr/rm97joJ/Jn74c+wfN739rXk33p432430yf
9o8xP3Py9+7D+w6e+44fc71P8iby9u6X/PLL+yJP/55Z/9w3fuHX+4v+QP5M
fvc+vxnxmX31Kz759b69v29G3D7xq/uC35gn8mf3x69n5nT86r7IK33uw33Q
t2/HPur3+rvvtyO/wy9//Op+0NtHvOb0xX9vH/izfewPv613zzcjvx/w6+Cl
fz3y47/CX33wrj77glde7o/88hN/s9xvjX/19eTfcfBfkz/Rr8OvGb/o1+g3
B/T1Pum/hr8B79yHeTP+G/Atfvab8Td/xq/9c9RvfV/cl3mlf72s36I3f4W+
/NDX+6dv9Pl3t7qvz5fzo49f6fO94j/hb7/Se/L/c/j0id8KXP+JvmvwNXin
b+nz73roO/oNfbxf8+Xbd0Zvvw1+M/ot/t3vA3yD/wyuf/tu5G/xL/wW/9tl
/y3+q52+o+/g9X3Bn8nbsl/p871E74z/3sn7g1/9872Bh1/fB/we/BY/+PV9
wHefDfzMHX19T/iZF7zjt4fnewPfgrd/jX76lz7fA37R1/vGfxV/8PoeyK8+
+R7i/xb/25Ff3wN+K/zW8NfwzbNPZ58Vfh2/yvPke8F/g77jv+G+7S+ufmbe
wjd/Zl9x9fq370d86/v+fvTXr/R5n+Ez1/dB3wau3xQ/9eD18wC+fmvy5Nt/
jf+E3n6177uxb31/8O2/Rm+fTv6a/Tb462de+f3v/AcgdV36
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 54.}, {0, 165.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752128024289*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean2mean", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "i"}], "]"}], "]"}], ",", 
         RowBox[{"noseTravel", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "i"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "60"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "150"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "mean2mean", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.68874124061594*^9, 3.688741243420786*^9}, {
  3.688741567568636*^9, 3.688741586272008*^9}, {3.68874168036839*^9, 
  3.688741687528088*^9}, {3.6887417635360403`*^9, 3.68874176807205*^9}, {
  3.688751217148959*^9, 3.688751293810988*^9}, {3.6887514211800957`*^9, 
  3.688751421659536*^9}, {3.6887514553238792`*^9, 3.688751487468504*^9}, {
  3.688752169235358*^9, 3.688752219779504*^9}, {3.688752253187915*^9, 
  3.688752256995316*^9}, {3.688752338011848*^9, 3.688752390107595*^9}, {
  3.688752501708383*^9, 3.6887525047724857`*^9}, {3.6887526717726727`*^9, 
  3.6887526837320747`*^9}, {3.6887527200843353`*^9, 3.688752720603757*^9}, {
  3.688752755419982*^9, 3.688752791587425*^9}, {3.688752870652404*^9, 
  3.6887528793477297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<~/twoDgrowth.avi\>\"", ",", "plots"}], "]"}]], "Input",
 CellChangeTimes->{{3.688752894068179*^9, 3.688752899723771*^9}}],

Cell[BoxData["\<\"~/twoDgrowth.avi\"\>"], "Output",
 CellChangeTimes->{{3.688752883323763*^9, 3.688752895229185*^9}, 
   3.6887529467016068`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalDelta]c1", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"\[CapitalDelta]c2", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"U1", "=", 
     RowBox[{"2", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U2", "=", 
     RowBox[{"1", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"popsize", "=", 
     SuperscriptBox["10", "6"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"starttime", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timestep", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxtime", "=", "20000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fulldata", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"verbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"veryverbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Trait 1 q = \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}], "/", 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}]}]}], "]"}], ",", 
      "\"\< in \>\"", ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "\"\< No Evolution Regime \>\"",
         ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}], "/", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}]}], "<", " ", 
           "2"}], ",", "\"\<Successional Regime\>\"", ",", 
          "\"\<Concurrent Mutations Regime\>\""}], "]"}]}], "]"}], ",", " ", 
      "\"\< with expected time scale \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U1", "\[Equal]", "0"}], ",", "0", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]c1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
               
               RowBox[{"Log", "[", 
                RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}], 
          ")"}], 
         RowBox[{"-", "1"}]]}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Trait 2 q = \>\"", ",", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}], "/", 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}]}]}], "]"}], ",", 
      "\"\< in \>\"", ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "\"\<No Evolution Regime\>\"", 
        ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}], "/", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}]}], "<", " ", 
           "2"}], ",", "\"\<Successional Regime\>\"", ",", 
          "\"\<Concurrent Mutations Regime\>\""}], "]"}]}], "]"}], ",", 
      "\"\< with expected time scale \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"U2", "\[Equal]", "0"}], ",", "0", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]c2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
               
               RowBox[{"Log", "[", 
                RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}], 
          ")"}], 
         RowBox[{"-", "1"}]]}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{"Testing", " ", "two", " ", "trait", " ", "evolution"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{3.688753340315027*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "4.708735280542232`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "105.4813220547839`"}],
  SequenceForm[
  "Trait 1 q = ", 4.708735280542232, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 105.4813220547839],
  Editable->False]], "Print",
 CellChangeTimes->{3.688753638020606*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "3.7383519587043743`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "96.74281185269709`"}],
  SequenceForm[
  "Trait 2 q = ", 3.7383519587043743`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 96.74281185269709],
  Editable->False]], "Print",
 CellChangeTimes->{3.688753638020955*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"results", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"RunSimulationCheckEachMutation2", "[", 
       RowBox[{
       "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
        "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
        ",", "genotypeabundances"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.688753318987649*^9, 3.6887533200689163`*^9}, {
  3.68875360606778*^9, 3.6887536070115967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Analyze", " ", "behavior", " ", "of", " ", "blob"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"blob", "=", 
    RowBox[{"results", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5"}], "}"}]}], "]"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.688753611899971*^9, 3.68875363306802*^9}, {
  3.688753807755365*^9, 3.6887538457313223`*^9}, {3.68875389128337*^9, 
  3.688754009611796*^9}, {3.6887540957638063`*^9, 3.6887541148039513`*^9}, {
  3.688754167252035*^9, 3.688754167347722*^9}, {3.688754214835932*^9, 
  3.6887542677883377`*^9}, {3.6887543039004*^9, 3.688754394754507*^9}, {
  3.6887544373084917`*^9, 3.688754561578891*^9}, {3.688754616975334*^9, 
  3.6887546582210083`*^9}, {3.688755342246117*^9, 3.688755364661318*^9}, {
  3.6887556243565083`*^9, 3.688755624908174*^9}, {3.688756091644719*^9, 
  3.6887561071002703`*^9}, {3.688756152820294*^9, 3.688756328781499*^9}, {
  3.688756373269032*^9, 3.688756374660254*^9}}],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"blob", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{"blob", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{
          RowBox[{"blob", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"blob", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"blob", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"blob", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"blob", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "blob", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6887564160772657`*^9, 3.688756417859736*^9}, {
   3.688756597534762*^9, 3.688756600678846*^9}, 3.688756708566671*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"blob", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Large"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "blob", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/travelingblob.avi\>\"", ",", "plots"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.688754016609482*^9, 3.6887540332293787`*^9}, {
   3.688754175101905*^9, 3.688754206371833*^9}, {3.688754691068412*^9, 
   3.688754848006689*^9}, {3.688755557254673*^9, 3.688755616355212*^9}, {
   3.688755972004508*^9, 3.688755979540669*^9}, {3.6887565027339907`*^9, 
   3.688756508892968*^9}, {3.688756899550144*^9, 3.688756923221085*^9}, {
   3.688756963244418*^9, 3.688757006301362*^9}, 3.688757769093914*^9, 
   3.688757825765091*^9}]
},
WindowSize->{1535, 876},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 6160, 142, 341, "Input"],
Cell[6743, 166, 1801, 42, 239, "Output"],
Cell[8547, 210, 24006, 410, 239, "Output"]
}, Open  ]],
Cell[32568, 623, 2711, 75, 283, "Input"],
Cell[35282, 700, 478, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[35785, 716, 378, 7, 55, "Input"],
Cell[36166, 725, 1974, 53, 32, "Output"],
Cell[38143, 780, 1181, 22, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39361, 807, 7084, 184, 535, "Input"],
Cell[CellGroupData[{
Cell[46470, 995, 715, 14, 23, "Print"],
Cell[47188, 1011, 633, 14, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47870, 1031, 2498, 63, 165, "Input"],
Cell[CellGroupData[{
Cell[50393, 1098, 324, 7, 23, "Print"],
Cell[50720, 1107, 278, 6, 23, "Print"]
}, Open  ]],
Cell[51013, 1116, 7724, 138, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58774, 1259, 6346, 174, 535, "Input"],
Cell[CellGroupData[{
Cell[65145, 1437, 491, 11, 23, "Print"],
Cell[65639, 1450, 570, 11, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66258, 1467, 2151, 58, 165, "Input"],
Cell[CellGroupData[{
Cell[68434, 1529, 297, 6, 23, "Print"],
Cell[68734, 1537, 256, 5, 23, "Print"]
}, Open  ]],
Cell[69005, 1545, 9815, 172, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78857, 1722, 6731, 184, 557, "Input"],
Cell[CellGroupData[{
Cell[85613, 1910, 694, 14, 23, "Print"],
Cell[86310, 1926, 697, 14, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87056, 1946, 2283, 57, 143, "Input"],
Cell[89342, 2005, 533, 10, 23, "Print"],
Cell[89878, 2017, 16856, 287, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106771, 2309, 5056, 152, 231, "Input"],
Cell[111830, 2463, 34098, 572, 237, "Output"],
Cell[145931, 3037, 59201, 985, 207, 50935, 849, "CachedBoxData", "BoxData", \
"Output"],
Cell[205135, 4024, 23632, 401, 241, 19469, 332, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[228782, 4428, 1678, 39, 32, "Input"],
Cell[CellGroupData[{
Cell[230485, 4471, 175, 3, 32, "Input"],
Cell[230663, 4476, 145, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230845, 4483, 6561, 182, 557, "Input"],
Cell[CellGroupData[{
Cell[237431, 4669, 545, 11, 23, "Print"],
Cell[237979, 4682, 548, 11, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[238554, 4697, 681, 16, 55, "Input"],
Cell[239238, 4715, 1075, 22, 55, "Input"],
Cell[240316, 4739, 2191, 64, 143, "Input"],
Cell[242510, 4805, 1788, 47, 77, "Input"]
}
]
*)

(* End of internal cache information *)
