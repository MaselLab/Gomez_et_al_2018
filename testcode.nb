(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    338814,       7153]
NotebookOptionsPosition[    335442,       7040]
NotebookOutlinePosition[    335777,       7055]
CellTagsIndexPosition[    335734,       7052]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Testing", " ", "SystemSolver"}], ",", " ", "SolveDiffEqs"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "popsize", ",", 
       "timestep"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"10", "^", "4"}], ",", "1000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Testing", " ", "system", " ", "solver", " ", "for", " ", "one", " ", 
     "fitness", " ", "class"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"{", 
      RowBox[{"10", "^", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"system", ",", "sol"}], "}"}], "=", 
     RowBox[{"SolveDiffEqs", "[", 
      RowBox[{
      "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
       "genotypeabundances", ",", "genotypes", ",", "timestep"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n1", "[", "t", "]"}], "/.", 
       RowBox[{"sol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "timestep"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<One Fitness Class\>\"", "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Testing", " ", "system", " ", "solver", " ", "for", " ", "three", " ", 
     "fitness", " ", "class"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"10", "^", "4"}], "-", "100", "-", "2000"}], ",", "100", ",", 
       "2000"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"system", ",", "sol"}], "}"}], "=", 
     RowBox[{"SolveDiffEqs", "[", 
      RowBox[{
      "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
       "genotypeabundances", ",", "genotypes", ",", "timestep"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"n1", "[", "t", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"n2", "[", "t", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"n3", "[", "t", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "timestep"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Green", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Three Fitness Classes\>\"", "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.673116177021326*^9, {3.6731262506283484`*^9, 3.6731262862843857`*^9}, {
   3.67319082497758*^9, 3.673190827881064*^9}, {3.673369817430798*^9, 
   3.673369817798792*^9}, {3.673370636607048*^9, 3.673370639086833*^9}, {
   3.673875084876329*^9, 3.673875094436377*^9}, {3.6738753320134993`*^9, 
   3.67387535418959*^9}, {3.673875478229555*^9, 3.6738755316378117`*^9}, {
   3.67387572723071*^9, 3.67387572747853*^9}, {3.67387711551609*^9, 
   3.673877127547649*^9}, {3.673891513192905*^9, 3.6738915138962584`*^9}, {
   3.673891612153204*^9, 3.6738916125368137`*^9}, {3.673894806565002*^9, 
   3.673894808804337*^9}, {3.673900335281618*^9, 3.6739003655206957`*^9}, {
   3.673906789121922*^9, 3.673906791231956*^9}, {3.673907098001443*^9, 
   3.673907102609193*^9}, {3.6739076262353487`*^9, 3.673907627786487*^9}, {
   3.673961208382987*^9, 3.6739612089340363`*^9}, 3.6739879645124283`*^9, {
   3.674301320446027*^9, 3.674301334606099*^9}, 3.674312441383945*^9, {
   3.674312480239259*^9, 3.674312482071232*^9}, {3.674313185438923*^9, 
   3.674313233609013*^9}, 3.674313659839324*^9, {3.674314618543891*^9, 
   3.67431464710362*^9}, {3.674318028991828*^9, 3.674318031639688*^9}, {
   3.6743253495772057`*^9, 3.674325366240168*^9}, {3.6743254528884497`*^9, 
   3.6743254558882217`*^9}, {3.6743256206254377`*^9, 3.674325626960462*^9}, {
   3.674325660048629*^9, 3.674325660216227*^9}, {3.674327687200553*^9, 
   3.67432769173661*^9}, {3.674327780787836*^9, 3.6743277811477337`*^9}, 
   3.674328070705064*^9, {3.674348900689376*^9, 3.6743489009771843`*^9}, {
   3.6743888074271317`*^9, 3.674388807890704*^9}, {3.6743924142403927`*^9, 
   3.674392426616136*^9}, {3.674392550228224*^9, 3.6743925667681837`*^9}, 
   3.674409792551757*^9, {3.674411823871142*^9, 3.674411823982185*^9}, {
   3.674417704740241*^9, 3.67441770746791*^9}, {3.688136265053318*^9, 
   3.6881363206367407`*^9}, {3.688136355476605*^9, 3.688136382884503*^9}, {
   3.688136415044464*^9, 3.688136503788519*^9}, {3.688136651812438*^9, 
   3.6881366520845203`*^9}, {3.688136803020981*^9, 3.6881368239485188`*^9}, 
   3.688136951164887*^9, 3.688137035980901*^9, {3.688137262405142*^9, 
   3.688137263228405*^9}, {3.6885671445534563`*^9, 3.688567145393744*^9}, {
   3.68856733288579*^9, 3.688567375813493*^9}, {3.688567549743102*^9, 
   3.688567640231125*^9}, {3.688567798007579*^9, 3.68856781006532*^9}, {
   3.689363608002809*^9, 3.689363639970355*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/frTHx+3tK92DCDQcdihymaH5ccFyg4w/qrrwY/f
LzCG8yfcavzrUuIC51+e3z57YrIfnO8Wsdu5ViAEzvf8nTTnTkQknN/fqbjv
t1scnG8n6fEw6XwinD/pwM9v5/JS4PyOu2YfpR6mwfkX2c/E2HRkwvl7lr9Z
Y8uUA+e3zGoXOJafB+f7++79JNhZAOfrddSc33C4EM7fdvJ5yi6JYjh/rYlA
S3t6CZxfFlU39cj8Ujj/RduM+JxPZXC+Vt4P6Ra9CjhfLIZlIltrJZxfWHy2
3+dqFZw/z/VOAxN/DZxfIjddSzm5Fs6X2jT92OYFdXC+fn7oG/Yb9XB++cz4
1MdTGuD8/RHbz1YZNcL5MdKpk9zvIvgbij5Kf2tpgvNzly+YF6PYDOfX3V9a
++MUgv/jy9lQn8wWOF9z/pVPjSytcP56H8M3b9Yg+POub7jH79UG5z9MbdPN
+ILg916sK62Y3A7nf7gY2pSl3wHnr7ja9HriDQT/5LZLvoVlnXC+3ewKnjbF
Ljg/W+Rvf81JBJ8hewmPdlo3nP/qyMKnfAI9cL7tn4PbV61D8N1PHPDT8OqF
85dNF3W6/QnBz3Xp1XOb0AfnLxF4K6j8AsG/dcfn63/7fjgfAHgGHMs=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    RowBox[{"{", "\"One Fitness Class\"", "}"}], TraditionalForm],
  PlotRange->{{0, 1000}, {0., 20000.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.688567147093124*^9, 3.688567538925179*^9, {3.688567594030456*^9, 
   3.688567610649428*^9}, 3.6885676416265917`*^9, 3.688691033890149*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
miGUirLrVamRpK+0KrdwCKciNS8+mE7auY24NC+aCqfr7bLnSPc8G3Eelk7F
ekNf5QbSja929N3dnYqoJuv3q6PJ/vlY1engnIphk00XC0lrLzXfK7+VChM5
e4mq0wT8/9t0S6QqFftKIkXrSBdORV5JuJOK2kIvgWbSy2O7Ml3vp+KFV9f4
S9INr0u8xVipWB42pEySRiV1U/LrVPQHDgspxhDY56pH91pKhcXz51JXSR9o
azLbbpwG9beVBbQzBOLEmWLPTNNw7YxfE4M0y99+1M88Df38CoMZpLWE507f
sU7DtoFGriLSyq7yN3Wc0xDU0bHuIenNSzlrbELT8Dm2f90U6TklnzZqYRp0
Nzq+to8l58E54X3vp9JQbHXYSZJKgBL+5LvFbBqyngW1yJDmtYnMb/0vDSfc
bWTlSAcLDUxWLaXBVjJ8QJW0btqVoiROJnLbIkWNSb+lqfxRE2NihbzXsxDS
q/0t72foMSHeLLOzhbSffpqiYQYTdXlKZyk0Ap37yoRXZTGxuLE+3on0v3rE
EpHDhM1/U6FupGe0F57qXWAipsLf0I901G6P49qlTEw9X1UbSzpJTrtYtZ6J
lU9+PS0lfUXgu6D0GBOmqbIjP0lz8nMvDH1jgvJUyGaG9Im10h+LvzNx3kGi
eZ60/GrKrc3TTPx9l522gk6gmuOxsdgyE9oNEfNCpBvnCuiC69MR9Pc/ETXS
UrP3vF9uSAetwMhUgzRt+pVlumg6ToV/P6VN2nCSW2qtZDpUqve8NCD9/Gto
PbdcOih/1A8dIa04ln75CfmPcJYKdTtKOmO0PDlBKR1j0xLhTqStPn20W6mW
ju9iDRmepGuGFnWJ3ekovlqf5016w8cN22ia6dhnrnLRn3TE4C4+Pe10+Kts
LQwm3ddvOvtXNx1NfjkXwkn/D8ShcmI=
     "]]}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    RowBox[{"{", "\"Three Fitness Classes\"", "}"}], TraditionalForm],
  PlotRange->{{0, 1000}, {0., 9990.9266230379}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.688567147093124*^9, 3.688567538925179*^9, {3.688567594030456*^9, 
   3.688567610649428*^9}, 3.6885676416265917`*^9, 3.6886910341432123`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Testing", " ", "module", " ", "that", " ", "checks", " ", "for", " ", 
     "new", " ", "mutations"}], ",", " ", "NextMutation"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "100"}], "}"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6885680869932117`*^9, 3.688568107676817*^9}, 
   3.688568396224392*^9, {3.688570127232911*^9, 3.68857015876475*^9}, {
   3.688571131370401*^9, 3.688571169190495*^9}, {3.688571221773478*^9, 
   3.688571272085524*^9}, {3.688571418094035*^9, 3.688571431511201*^9}, {
   3.68857146723342*^9, 3.6885715000956173`*^9}, {3.688571553787676*^9, 
   3.688571578591317*^9}, {3.688571641391821*^9, 3.688571665747957*^9}, {
   3.688572468620905*^9, 3.688572581113586*^9}, {3.688572741271303*^9, 
   3.6885727500421953`*^9}, {3.6893621522663593`*^9, 3.689362155323229*^9}, {
   3.6893636584731092`*^9, 3.6893637340260353`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"system", ",", "sol"}], "}"}], "=", 
   RowBox[{"SolveDiffEqs", "[", 
    RowBox[{
    "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
     "genotypeabundances", ",", "genotypes", ",", "timestep"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.688571283008575*^9, 3.688571414185316*^9}, {
  3.688574277029724*^9, 3.6885742802935257`*^9}, {3.688691106785205*^9, 
  3.688691110146936*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"getNextMutants", "[", "genotypes", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextMutation", "[", 
  RowBox[{
  "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", 
   ",", "U2", ",", "sol", ",", "genotypes", ",", "starttime", ",", 
   "timestep"}], "]"}]}], "Input",
 CellChangeTimes->{{3.688691484052844*^9, 3.688691496476296*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"6", ",", "1"}], "}"}], "}"}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "2"}], "}"}]}], "}"}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "2"}], "}"}]}], "}"}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2"}], "}"}], "}"}], ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6885742953249397`*^9, 3.688574879641499*^9, 3.688687990115136*^9, 
   3.688688048681122*^9, {3.6886881379712067`*^9, 3.6886881650325327`*^9}, 
   3.688688199749318*^9, 3.688688342469342*^9, {3.688688535533622*^9, 
   3.688688555594432*^9}, 3.688688639984653*^9, 3.6886886801226788`*^9, 
   3.688688747968503*^9, 3.6886891912751207`*^9, 3.6886892430878*^9, 
   3.6886892897085533`*^9, 3.6886893290713253`*^9, 3.688689388388866*^9, 
   3.688689593211829*^9, 3.688689661035387*^9, 3.688689742022944*^9, 
   3.688690001384369*^9, 3.6886900638831787`*^9, 3.688690225335659*^9, 
   3.68869063470923*^9, 3.6886908257823563`*^9, 3.688690868799096*^9, {
   3.688690919710621*^9, 3.688690931291325*^9}, 3.688690971830204*^9, 
   3.688691133689797*^9, {3.688691215148739*^9, 3.688691265197378*^9}, 
   3.688691317111124*^9, 3.688691444527104*^9, 3.688691500396583*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"30.94007186481715`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], "}"}], ",", "True", ",", 
   "0.039300574533808606`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6885742953249397`*^9, 3.688574879641499*^9, 3.688687990115136*^9, 
   3.688688048681122*^9, {3.6886881379712067`*^9, 3.6886881650325327`*^9}, 
   3.688688199749318*^9, 3.688688342469342*^9, {3.688688535533622*^9, 
   3.688688555594432*^9}, 3.688688639984653*^9, 3.6886886801226788`*^9, 
   3.688688747968503*^9, 3.6886891912751207`*^9, 3.6886892430878*^9, 
   3.6886892897085533`*^9, 3.6886893290713253`*^9, 3.688689388388866*^9, 
   3.688689593211829*^9, 3.688689661035387*^9, 3.688689742022944*^9, 
   3.688690001384369*^9, 3.6886900638831787`*^9, 3.688690225335659*^9, 
   3.68869063470923*^9, 3.6886908257823563`*^9, 3.688690868799096*^9, {
   3.688690919710621*^9, 3.688690931291325*^9}, 3.688690971830204*^9, 
   3.688691133689797*^9, {3.688691215148739*^9, 3.688691265197378*^9}, 
   3.688691317111124*^9, 3.688691444527104*^9, 3.6886915004355803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "Evolution", " ", "in", " ", "1", " ", "dimension", " ", 
    "for", " ", "first", " ", "trait"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"0", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "50000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fulldata", ",", "verbose", ",", "veryverbose"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "False", ",", "False"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688695558225275*^9, 3.688695577769321*^9}, {
   3.6886976542927437`*^9, 3.688697703019405*^9}, {3.6886977463208647`*^9, 
   3.688697752537838*^9}, 3.688698185549271*^9, {3.68869821919487*^9, 
   3.688698223223608*^9}, {3.6886986620524282`*^9, 3.6886986629004*^9}, {
   3.6886988603750963`*^9, 3.6886988664805202`*^9}, 3.688698904555194*^9, {
   3.688699337369549*^9, 3.688699342189859*^9}, {3.688699460908698*^9, 
   3.6886994643065567`*^9}, {3.688699585083333*^9, 3.688699591745851*^9}, {
   3.6886999821022263`*^9, 3.688700108974204*^9}, {3.688700161987878*^9, 
   3.688700213709936*^9}, 3.688701092035573*^9, {3.688706294970908*^9, 
   3.688706295860649*^9}, {3.688706362192438*^9, 3.688706363363892*^9}, {
   3.688706394895247*^9, 3.68870639920033*^9}, 3.6887078089313726`*^9, {
   3.689361436747138*^9, 3.68936144590728*^9}, {3.6893617538262377`*^9, 
   3.689361937297886*^9}, {3.6893621616660337`*^9, 3.689362163651622*^9}, {
   3.689362350506291*^9, 3.689362365490233*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "4.708735280542232`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "105.4813220547839`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.00009480351407433339`"}],
  SequenceForm[
  "Trait 1 q = ", 4.708735280542232, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 105.4813220547839, 
   " and rate of adaptation ", 0.00009480351407433339],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706308885817*^9, {3.688706373720022*^9, 3.688706400606756*^9}, 
   3.6887064838358917`*^9, 3.688707058890171*^9, 3.68870781352206*^9, 
   3.6887081428506947`*^9, 3.688708211212734*^9, 3.689364900448118*^9, {
   3.689364992686941*^9, 3.6893650141488*^9}, 3.6893695994232492`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\" No Evolution Regime \"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0"}],
  SequenceForm[
  "Trait 2 q = ", 0, " in ", " No Evolution Regime ", 
   " with expected time scale ", 0, " and rate of adaptation ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706308885817*^9, {3.688706373720022*^9, 3.688706400606756*^9}, 
   3.6887064838358917`*^9, 3.688707058890171*^9, 3.68870781352206*^9, 
   3.6887081428506947`*^9, 3.688708211212734*^9, 3.689364900448118*^9, {
   3.689364992686941*^9, 3.6893650141488*^9}, 3.6893695994257812`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "7", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-0x10pn4_exp001.m\>\"", ",", "results"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.688697705911489*^9, 3.6886977385901012`*^9}, {
   3.688697851586619*^9, 3.688697881514435*^9}, 3.688699542613991*^9, 
   3.6886996145602417`*^9, {3.688701974370201*^9, 3.6887019797698917`*^9}, {
   3.688706327590456*^9, 3.6887063285022173`*^9}, {3.688706468965032*^9, 
   3.688706478057048*^9}, {3.688707040023732*^9, 3.688707053374549*^9}, {
   3.688707990485836*^9, 3.6887080244590893`*^9}, {3.6887081595099154`*^9, 
   3.688708174075613*^9}, {3.689361633370254*^9, 3.689361662274227*^9}, {
   3.689361981385914*^9, 3.689362020777807*^9}, 3.689362061731192*^9, {
   3.689362102969953*^9, 3.6893621119619417`*^9}, 3.689365058890818*^9, {
   3.689369504882784*^9, 3.689369508802414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "Results", " ", "of", " ", "Simulation"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-0x10pn4_exp001.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meansubload1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean substitutional load = \>\"", ",", "meansubload1"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean q = \>\"", ",", 
      RowBox[{"meansubload1", "/", "\[CapitalDelta]c1"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndLoads", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"timesAndLoads", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Substitutional Load\>\""}], "}"}]}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Substitutional Load vs Time\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.689362387785572*^9, 3.6893624275221453`*^9}, {
   3.689362960161792*^9, 3.6893629607470207`*^9}, 3.6893631365700912`*^9, {
   3.689365268051827*^9, 3.689365270826549*^9}, {3.689369514387765*^9, 
   3.689369515606209*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean substitutional load = \"\>", "\[InvisibleSpace]", 
   "0.03516167419209922`"}],
  SequenceForm["mean substitutional load = ", 0.03516167419209922],
  Editable->False]], "Print",
 CellChangeTimes->{3.689365063882965*^9, 3.6893652714035683`*^9, 
  3.6893696182603283`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean q = \"\>", "\[InvisibleSpace]", "3.516167419209922`"}],
  SequenceForm["mean q = ", 3.516167419209922],
  Editable->False]], "Print",
 CellChangeTimes->{3.689365063882965*^9, 3.6893652714035683`*^9, 
  3.6893696182731256`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9l3k8VN//x8eWFoXKVtlLFEXZonqfFKXNkhaKRJSKRKgoQwtlK5FljLmz
IURUyJLJWlmyM4TJEvq0oUjI93w+/H7+8Xg+nq/zfp97595zzlV0uGjpxE8i
kU7zkUj//v//v6Ydsk07wuCVgWYrJe0XkGvbXp6sioW+Tc5/w5A/ImloFK6L
ioIPMTtspnbdRaiX91O1hgrXreR205PCkH3QIWX5AAb8VwtFIAWfqehCIzrk
VoZ+6dpzH5FzEo9vFmKD9Jdo34zJh0hBfwwJviIg9LyuhcxANCJeDku8zCJg
x2PD/j1NsYhnlxHIa2CA/G3q8KrQeMTr3Lo4fAkb1PtVar8IJiBe3tYp8X7W
XD8aIj/69nrjywT4zTWkTpnTkP0byoiOPRN8QwpF1ngSiJc5dOKIEwv6/jl2
KHWGjjg3CwsvbWRAxSL/K3YEA5FWvgiXLGLBFUH2doleJiK0szeutGQCUl0c
oCrGRmROg0e4LQM+PLiySf5bEkIxbX+XZ1Jn+7snI7Kylk2LIAVYUTa1dmtS
EK+R0sX9TcCEn+/0i6oUZP9KMVs8mwWangFHJQMfI9JwlZl5XzLIOOqXtxWl
Intj6cWKdWxoTvhisToiHZH5fCTqlyfA3o0PQ/QjnyCS9Q2x6YME8P13vZkI
jXcna/lS4Mr8usPptExEaujSduVjQF/BGcm3LU8RGltRsfVhApiXePAfmspC
yLaev2EHBRSE9ibZvM5GnNPZUob1NLjY0rG7PegZUgjRnWxzI+C/ZyL4GeK0
T5yUwzz2vmzEUO05Ite7tE7tI+BwlfcN8f7niCTGarcWp8O5IU+TIMdcRIo7
G/XVM3Z2fu6Y+0fs9NfGgn/oQuFegzxE/pSqrmtBAyeD3QPy7XkIGaX9zlJk
wbrUtC5jq5eIXKtEevSVDUsWntM9tikfcbhoYqNyIojW02yFfucjsuYpi47y
ues/VoDI3kET+V1UOG9uHyPIKUDI672l2zQdBiUy6z+eK0QkyxvNCvYM8LvW
V9NvWoQ4OkdXGt5NBMNGKygdLUI8K3FB22t0yBEizKdfvUIKnsNX7x2lQ2Ob
f+vtzcWIg5YpcXWYc/e7GKEtK6/f4DGgZlHzZpPCYkTIL3N9U8aCbnkd5ZHR
YqRAOR9RcjgFHlmZiUds5yCU1K7/wz0ZFgRlh+jEcRBnLSd2OpeAo2+Odj9Q
e404k4OBo/doYBBgWq3g8xopxMmb7ymae3+iXiPyAvLNARU62MfYS6qIliCO
aXxzyIJ4OF5+P1/+RgkiOViF6q6jQUiWW073SAkirwmPCxujA03N72+GYilS
MGeJUkcYICDzRPKrbylCmZZODsfps9cTXIrsqUayFVwCcrdPX06PwvmsU9Yr
vdnwrK2sVKcD59m29ooOyWBgRl73WrIMcYTfZp3JYYPKNYPDV0+VId583tuD
HAIuK4wXL6Vi5m1cMvKECQbLpt3vNZUhe+Ftnz1ik6B8OlTl+7JyxGk6K3ab
L2m2vx/mm73rG2SioDNemLeHidkposPrexzsC7NiuZIqEMmgw9XFnwajbcv2
JqyqQPbi6w9a3mVB+Z1AV5MzFYiosB/Vm5cMPk8kT2a/q0Dk03K8UgkCBBzS
9uXMq0Q8PW/741fpcM2we5fwmUqkYLnrxInVjLnnsxIR/zx3WhlDh1RHD0Ol
2kpEqrnrl1GcCGbGEru6xN4gFHRw1+AEAQG3IqWz9rxBCmevik2bscAmNWWM
TX2DyA/8znoGsWB39oqINTOY8+pUF+2lAU8ndduYw1ukcDhPVVlk7n6ffot4
x10UGvjpQI76XfYo8C0iye827TRnwTajhrMXi7FXrVrjmcQGbvEoqV7oHeIk
HCO8B9gQET0cI3rhHULdlpNhvgTs7BZNSk1/hxS23qVPHGVAp8gKw8f8VYgQ
pjW0utNha/DallObq5B9klyhz1HW3PtShcgWyTaxwQwQ2yW4dvN5zF7ri6wg
CX78uDSf/LIKKfwIbiEbM6FYfnhhIV81IjImgldw6cCs/MZ2PV2NSC8s7YoL
8fO7+9Yd+lA1Iq/2Tf+J15//ntf9NYj8N/7ofKFoGFPkP2ZuU4PQfb+h2JpE
KOm+/5FSWoOIqRDay7d0cPOuCfq6tBbZC5xP8BMl4OPLjMQ4x1qEjreEnA3H
9f+xk3jzpBYRC25FPNBlwfDfH0//TuF8eM+t6HLm3Hr/HnH4vLJP+seCnOG1
6MAQzDej4yiDCZDkvHA8/897RAyEanWrE+Do1z/TKFCHOPOeZpiQ2MAqtLbU
VaxDpKb9zSyTFAiiXjGpVsG+8IAef3M6dN2f2da8F7Pr85+JnUkw8+9fHM4L
PTwwLRgG4nw7Dmq+qEPkISmRF9RoOPfGUq90CPsbpIxs/0Twe6kuFb68HnF2
cKvcqhlgqC7cZqFej9DZ51u24d/77HWNBUE7sC8/bmZ3iw3lXo42R0/UI9Iy
B9Ye+eTZfg8x//LK01z1AILaZb7tYNUj8uCRJ4pXYiDgz+WpsRbsCYpNTyUV
ZJKFyqMEGxCZbDaQWkYHz8k2S7dtDYh0Qe9bKo0K+8dX5Y07YX6z+9RJvN78
Vz8M538IjtT7U6Dw2golpxTMRobNI+k0uFDr0eTeg/P2IwFDtonwy6u310em
EZHVabkrgIClyl//3pZtRBzm2KaKPyz4ObVhJcUEs5hUvPMVNph6BCxod2tE
JJFNrIZH9Nl+QXj8ctOcA42PwJryz7uxKOwNzGUHLyXCz0m1fdTSRoQOPd7u
30IAdfmj+jOtuN727qY9DUxIcv8RKTCE/dvAd+49SSChlBfFkWtCHHqsfGQQ
E/Q0U8uCHZsQab5cOt8kZbZfAOZMRZEfq2LBJMtf2+EBzvevLvBYTID7vIZW
yuMmRJ4QEbO+wAQPx8sntrzHvsftDyOKBeqmUva/uNiLFHyb7kiGybaolCff
sffQ/621OgU0WMv0FUWbEWlcMXyPAQs02uSIXFvMCpYcc7mE2efTrxmRFbxj
XzXFQuin4+Sz0ZifvpA+J0ZAFf+Dks1tmC29NB9HEbDFSCzIhNSC98eFbiZ9
dDAQcChNUmpBpOncwjOPGKAYkh6hth/70ftl+X40qBo/vXiNB/Y7W6gzGXPr
izf20i91uhzpcOFEZOel9BbEebJyyV0POsjkuK8rbMFsfWMhIUuHMiffUrVf
OH/CZ233Kiao+O1wk/mD6/VdSPqTnwwvowmXm1KtCHG+rAv3TYEkw4EhYZVW
xMnRjD0kngoe6Jntzz2YPat7V3SzgK31++LFC614/86cmc4m5s5D2EdYjdrw
ESDufuC5EYF9UXGmgBoNYuI/rlvCwd7Xysp8igF1oZOVEh+wXx/XL/KIDfOM
7mmNT2KuTLsYRmFDlpbRW2GlNkR6v0xeqgufN+6KZXbvxbw7y2VDMzH7e7u0
IXJI2UPtcgo8PKepOhbUhlDhsKE7PwGeC0WcTtFxPmBh6DqCAaoHdy6drMe+
TKAtZJAJ0Xo1fUu/4/Fs+TOebixQXj3hyreCi0gsW7fCPALEetI0FDZhbnji
3nKWCbcPf1365jgXX69ohFcia7a/IxchwzrWVAgT3q/+kHPGH+eDFlgF5dHh
meLy7VopOG98r1s9lgbFXO2NUnVcxFmyVOarNxNW7ZlXtWYUc8XumZSrLCAf
UWcniLcjTore5UVKTFALsk1fr9aOkNOraVXPuX627Yjsc1Jj/F48bFQi6ws6
YS87fjcvhQ7WlnsJjWjMeuW0tZV0uCc3XvaRg3lM7VDcBQIWejinbmnH47Xj
dGV2suCay+bYk6O4n8Dqs3+MkyFCwnJyg0gH4qQ5XN4SkAS5sd7FP+U7EDL2
HST9SILG3vpSQ+0ORMp91mi0/DF0JkpqLT+E84uLhLXZc+vXUZyPjXHqW5AE
tE8ecuXuHXh9qtCbDGRAiNShFfrPMT+eR80+Q4Va/b37dtXhet9RnlYOActV
lLcrj+Pxm9KDfLMYwI+oFKO1HxBqFmaEb2OAcJ0D5Gh+QOTGTfXG2Wz4ZB3w
t3/3B0SSPqnPCJ5bry0+IM7Pw9Xikmww2iOu8u00Hm8lfHfLu2Sop8iXK9Jw
nnGlZuu5ePCVGqwUbcRMes+5I0kDWUeLvRafcd7ZL3QV3n+4g5odD2Q7EVnF
k9ezkQkmKgomW4w7EanYSe9sE2O23z7s3aTmwRs6GC68GPz2GvZaP38AnQrf
17m8ImidCJG3N93ZTAedhIgggyLsy6xMDW1YcFp6wYb5fdhbRGaGljEBWO+0
J//geg67W838mNDlsumki0wX4kzMa7z2jAmT1PVSk9u7EPlNzUE9k7n90KQL
IYbktsXFdFgxWLLP9BT2nxNa6v/i/dTFx3wDDfPt0PzufgIa7cs6TzNxvvJA
i2ACG9SOXb7RW4Q5dovVpcFkEDjAO/CzF/fzNbZqi/+/77lufL4S8hsPfgDh
Z/YW+Rt1I9LMZ8W1tymgn8a92hWKueAANa4rAaoWVTq0NmIWntl6YjcFKBLi
hme+diNOrnmBwxABale9SnYL8RD5vrj2Z3yek9u5KldnOQ/vJ7ZLXX/NnQ9l
eYikafri4wAdlPNVrHoVeAj9sa39KcoCIX7B9b2a2H84tUqugAFHfG/3H96F
/cbwVpdwJhw4ULu7wBrzpRc+ga74PPjAjWJ9GeefOE/ySAzgHBlQvuSL++nq
3Rm8zwa+3Lg7Q/dw/uS8aDtB9uz3TzzO37GR+D1MhV4pbeG2ROxFlCP3/6HD
qx+GfvzZeP5m+Zre+PvorkLu6nVFuB55IkqlkAn+1PZ9hbU4v/D3jt9hbNgo
s6R7eSeuZ8fnFlzDBvuT/KUB3zBrTw1NWTDgRNm+uGcCHxFZZs1M3FI6CPzb
X+ojIr36dd73XgLoLvY8vmEFZqc2c3UuA/bpGJsFbviIOMt0687h90l9crXB
/v3YP9sTGboFn5cXjtgdtcY8cNDI6Q4DvK+trY4/h/OBtaxM/Lzl35domgn8
iND2GscsCh06XTeXngvDee7arO2JjNnrj8LzufXINgz/Xl8zSb1GT/D4yBKX
dGkGaFVORHjk4rxXm2JBOgs88o/VFlRiL7x0dCleP8tp+fpqtXj8gzJjyvVk
6Cp/EyTfh/2xwOufH7EgZ2WO3PAfPP7X9KClLBMO7jwoZrGkB5Ed+xrvaxOz
1y/eg0gPyk929CZCUwEf9YQu9ooWAX1sKpxKpyx5fRCzxSUhRXcazHP2ynJ2
wVy7xcT0CAExCSJmzjcwm6+OOKfBmK0Xjus574tjd8ZDRbrwcgECe/6YF0Xi
iXB+W8brqCzs78unPDxBh/vHJkMPl2AvLtqd8YkBAT1KKc+5PQhdGCy6uowB
1bdKJ9Af7K/x1ufFJ8ImWQ1zinAvIl2c+R7GZs7ev0WY901f+bKTCT9P35t6
Jd6LOD5gwt+aBHXbiITvkr14P1DP/7sxFQ7GL+BdUcPeO3VmFSMJ0m73FWTr
YV8y43UuE693LSQv9VO43sjijqouCgy7GGfHuWIfKz0p4I3P509WSD69jr3x
WMsPm7nzfnAv/r7Oqxn0ZsBFnlJKRwjOj9o+Jl1MgjDFwH5pKuadB1zPP2HA
Qt1y/banOH+nNn8okA4tPVwfh2o8nxdm8TGFDEj+WSKlwMX5nmyKYTMbROWd
SdaDmA/rZEY6s2f7CfUhMi/yeP9QFGxWPrjYeF4fPn812P/NSoSqnLFOf2nM
5j6HJWvpIFbhrJqv3IfPe3rH1QzZcP7IyvzWrX2IMzbd0xyN7/cz9zYHJ1yP
uQiR+eJn159APN5U7ayFYTRcGlIS0gjC3k6T8mo6EfYvTaosTMT1hrfeK7hB
h6c1J7aJFuD8qb8efq8TofCcendXNeYlJSLrEQM+zdf8QR/AeWJNie95AuJG
dTQMfuH+D1wOZyjN7a9/cT79pN11/P7sLLknNrq4H5Ej4tWCq+kQY0N6cHVV
P/5ecPSQ1GeAA3fp6jQ17NeZ+DAE2HCJO+HQB5iL7ZbN24/ftw5ps98W/Qjt
OrUT/Ah4Fru6levcj0i0uDqpYbxfm66JyLmM6+0//s+ehLn+vjifG1m84xkD
FnfyfbwRiPMaNDLXlQ1hp/PfSofhfMQl7roWNny89cfgfjzOUxclcE8lQcTH
CxLP2DgfOj9QOi4ZtnV7iKkX4fnc1pVVMyBgeijDVvsbZvNkjXlpcfD3336/
/70+s+Hq8UfgxySbCy74hMjzleq98O+3X+a6U5f0J8R5/PUqVZAJd69Uul5W
+IRI1jZSdRFJEFOTv7pd7RNCqqEJy/tTYKKVP19WH/vNDQWGyimwf0xHZMgc
84HIl1+0EkG07GiNhBOuZ/ztXYwKHZaliYaRPbF3WBoUfoU5Ox8vzBEZ9O0k
Jrz8JEoo3cLzWWcTPbCFjb8/n7sVRuLxXbo7vw+xwfwbbadCEuZ7UibVp+jA
1QszjC3E8ylL7J44QgdVei/12mdc79jKtkcV0bP1R3C9DXdvBn+OgqMOrgtt
RAbw+3abPkWhwrbX7j4l6pjfPjugIJgI2ifPr+cYDiAS/xpj4xEC7rMWNKdb
DSD09fPB1J0MCAvt6VZ0wax1aeWfcMZs/YuYq93V7ObTYSQyfX7abTw+Uumx
2SECTCvURMgPcf3qeh2yBR0uBoy+oD3G3s2ye4EUE1pEPnnnvsP+l4P+yicJ
kNHVfqx2APO+cEU7ERpM/1v/C85fHfYzlUiEZZftdw59xV5O4KoGiQU6vY3d
1XyDiPz6+7jvRzZ065askF0yiEgVN9PlD7NhldEd/RRF7FVlRRkeBBRwcxp5
uthLpD0dtmNAnGPGYMF+7INnNOIvE9Crdkn+/XHs1fdn+KjSYfK/8zbmf0T+
kZWMh/8BFKqbOw==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Substitutional Load\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Substitutional Load vs Time\"", TraditionalForm],
  PlotRange->{{0, 49999.99999999996}, {0, 0.05631262707799456}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.689365063962816*^9, 3.689365271439526*^9, 
  3.689369618309936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "Evolution", " ", "in", " ", "1", " ", "dimension", " ", 
    "for", " ", "second", " ", "trait"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"0", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "50000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fulldata", ",", "verbose", ",", "veryverbose"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "False", ",", "False"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688707875533177*^9, 3.688707891207817*^9}, 
   3.6893614551487303`*^9, {3.6893622768661118`*^9, 3.689362328107135*^9}, {
   3.689362372346081*^9, 3.689362373179264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\" No Evolution Regime \"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0"}],
  SequenceForm[
  "Trait 1 q = ", 0, " in ", " No Evolution Regime ", 
   " with expected time scale ", 0, " and rate of adaptation ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.688707898052257*^9, 3.6887082459985228`*^9, 
  3.689365091307961*^9, 3.689369624710877*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "3.7383519587043743`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "96.74281185269709`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.0002067337057605115`"}],
  SequenceForm[
  "Trait 2 q = ", 3.7383519587043743`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 96.74281185269709, 
   " and rate of adaptation ", 0.0002067337057605115],
  Editable->False]], "Print",
 CellChangeTimes->{3.688707898052257*^9, 3.6887082459985228`*^9, 
  3.689365091307961*^9, 3.689369624711681*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "7", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
0x10pn4_U2-1x10pn4_exp002.m\>\"", ",", "results"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.688708075250152*^9, 3.6887080944918413`*^9}, {
  3.6887081873013563`*^9, 3.6887081920608463`*^9}, {3.689362470817972*^9, 
  3.689362536737473*^9}, {3.689369531035686*^9, 3.689369534930915*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "Results", " ", "of", " ", "Simulation"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
0x10pn4_U2-1x10pn4_exp002.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meansubload2", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean substitutional load = \>\"", ",", "meansubload2"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean q = \>\"", ",", 
      RowBox[{"meansubload2", "/", "\[CapitalDelta]c2"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndLoads", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"timesAndLoads", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Substitutional Load\>\""}], "}"}]}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Substitutional Load vs Time\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.689362644994102*^9, 3.689362654906098*^9}, {
   3.68936285575425*^9, 3.689362856194236*^9}, {3.689362954609708*^9, 
   3.689362955139308*^9}, 3.68936312921129*^9, {3.689365276011771*^9, 
   3.689365278474298*^9}, {3.68936953830833*^9, 3.689369539730855*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean substitutional load = \"\>", "\[InvisibleSpace]", 
   "0.05982278189337146`"}],
  SequenceForm["mean substitutional load = ", 0.05982278189337146],
  Editable->False]], "Print",
 CellChangeTimes->{3.689365117186619*^9, 3.689365279631941*^9, 
  3.689369647908626*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean q = \"\>", "\[InvisibleSpace]", "2.991139094668573`"}],
  SequenceForm["mean q = ", 2.991139094668573],
  Editable->False]], "Print",
 CellChangeTimes->{3.689365117186619*^9, 3.689365279631941*^9, 
  3.68936964790985*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
DWTC/wGNqgKD
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Substitutional Load\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Substitutional Load vs Time\"", TraditionalForm],
  PlotRange->{{0, 50000.}, {0, 0.08971023971879255}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6893651172228203`*^9, 3.6893652796700487`*^9, 
  3.689369647946554*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "evolution", " ", "in", " ", "2", " ", "dimensions", " ", 
    "and", " ", "store", " ", "only", " ", "summary", " ", "data"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "20000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fulldata", ",", "verbose", ",", "veryverbose"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "False", ",", "False"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688706416860038*^9, 3.688706427095549*^9}, {
   3.688707260061904*^9, 3.6887072765813293`*^9}, {3.688707489173719*^9, 
   3.688707625099484*^9}, {3.688707779784658*^9, 3.688707783529849*^9}, 
   3.6893614644684067`*^9, {3.689362610674225*^9, 3.6893626289131813`*^9}, {
   3.689362730546171*^9, 3.689362757722989*^9}, 3.689362788915221*^9, {
   3.689364283857853*^9, 3.6893642873462553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "4.708735280542232`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "105.4813220547839`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.00009480351407433339`"}],
  SequenceForm[
  "Trait 1 q = ", 4.708735280542232, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 105.4813220547839, 
   " and rate of adaptation ", 0.00009480351407433339],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706514208481*^9, 3.688707088858027*^9, 3.6887078246012163`*^9, {
   3.688708284918737*^9, 3.688708297894167*^9}, 3.688739537902643*^9, 
   3.6887515120228767`*^9, 3.689365150275324*^9, 3.6893669339904947`*^9, 
   3.6893673159580393`*^9, 3.689367552762413*^9, 3.689369653995016*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "3.7383519587043743`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "96.74281185269709`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.0002067337057605115`"}],
  SequenceForm[
  "Trait 2 q = ", 3.7383519587043743`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 96.74281185269709, 
   " and rate of adaptation ", 0.0002067337057605115],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706514208481*^9, 3.688707088858027*^9, 3.6887078246012163`*^9, {
   3.688708284918737*^9, 3.688708297894167*^9}, 3.688739537902643*^9, 
   3.6887515120228767`*^9, 3.689365150275324*^9, 3.6893669339904947`*^9, 
   3.6893673159580393`*^9, 3.689367552762413*^9, 3.689369653995878*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "7", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp003.m\>\"", ",", "results"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.688706457306293*^9, 3.688706463986483*^9}, {
   3.688706573486517*^9, 3.688706646883993*^9}, {3.688706687264188*^9, 
   3.688706757336728*^9}, 3.688707012267789*^9, {3.688708106608053*^9, 
   3.688708124675424*^9}, {3.688751531707631*^9, 3.688751581171226*^9}, {
   3.68875173576383*^9, 3.6887517483953114`*^9}, {3.6887518687800903`*^9, 
   3.6887519014915733`*^9}, {3.6887520188917027`*^9, 
   3.6887520255954113`*^9}, {3.689362798633952*^9, 3.689362817843029*^9}, {
   3.689362892234837*^9, 3.689362900849856*^9}, {3.6893695489001427`*^9, 
   3.6893695537466297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "Results", " ", "of", " ", "Simulation"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp003.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meansubload", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndLoads", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndMean1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndMean2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndVar1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndVar2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndCov", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mean2mean", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"results", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", "\[CapitalDelta]c1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"results", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "/", "\[CapitalDelta]c2"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noseTravel", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "12", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean substitution load = \>\"", ",", "meansubload"}], "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"timesAndLoads", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Substitutional Load\>\""}], "}"}]}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Substitutional Load vs Time\>\""}]}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"timesAndMean1", ",", "timesAndMean2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<mean trait 1\>\"", ",", "\"\<mean trait 2\>\""}], "}"}]}],
      ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<mean fitness\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<mean fitness vs Time\>\""}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"timesAndVar1", ",", "timesAndVar2", ",", "timesAndCov"}], 
      "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<variance trait 1\>\"", ",", "\"\<variance trait 2\>\"", ",", 
        "\"\<covariance\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Variances\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Variances vs Time\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mean2mean", ",", "noseTravel"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<distr mean\>\"", ",", "\"\<distr nose\>\""}], "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<trait 1\>\"", ",", "\"\<trait 2\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<evolution of traits vs time\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.688708451049461*^9, 3.6887086300771112`*^9}, {
  3.688708703200172*^9, 3.688708745911834*^9}, {3.688740484840589*^9, 
  3.688740523919965*^9}, {3.688740622104692*^9, 3.6887406970010777`*^9}, {
  3.688740794072215*^9, 3.688740802560251*^9}, {3.6887411375934963`*^9, 
  3.688741222992558*^9}, {3.688741696666604*^9, 3.6887416989377317`*^9}, {
  3.688741732417933*^9, 3.6887417360820217`*^9}, {3.689362822378406*^9, 
  3.689362851274207*^9}, {3.689362916706655*^9, 3.689362946793866*^9}, {
  3.689363041426571*^9, 3.689363115668157*^9}, {3.68936318781952*^9, 
  3.689363493679721*^9}, {3.68936528790909*^9, 3.68936530818753*^9}, {
  3.689367023414147*^9, 3.689367053200871*^9}, {3.689367418173017*^9, 
  3.689367419284339*^9}, {3.689367798141247*^9, 3.689367808976677*^9}, {
  3.6893695593020678`*^9, 3.689369570757266*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean substitution load = \"\>", "\[InvisibleSpace]", 
   "0.05795443798380116`"}],
  SequenceForm["mean substitution load = ", 0.05795443798380116],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.689365242268652*^9, 3.6893653087392693`*^9, 3.689366782401513*^9, 
   3.689366866514913*^9, {3.68936702838268*^9, 3.689367056626916*^9}, 
   3.689367422514751*^9, 3.689367904396324*^9, 3.6893697503541727`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
A/gwS7yHZs1BHrV4NpcuAAfLp56OwjriIBbQM1cG+z/la7q3c7H+HG+mC/Yv
1cP8hG9ldSRxp+E+s9sCsLO6fae2GusXrj3lWc6HRg/2K/V3mK95UbsvUgCK
PhS/222oP41n6y8UwFr70XUT3ajv/SOmt5sPL3xXK3sM4PUEJl5QeSKAJEnf
NItBXK9TSSS9IBPid6wz8/5dRxRv9himhGXA+NVsRthfzM9O6Nb1EcI2I52k
51OeEYcflK5Y8UxICnq8+DuyqPiqpZdYJni80wvWlX1GKFPCfQMuZoFf2rQZ
MYrIu1ReyJ7JgHnh2iPNhpi38yp+IxSCcFu56UczzIfGLXo8IAClr7aT7Y88
I4qfVseGivPhecisdQedkXeW3384VQBFWy7oSvth3n55chOHD6OKTgXF8c/w
/b0pyXaYDvxXRKs88RlJtBLGB+kKIG3rEf7nJFx/8QLTr8sEMBDj+CspBf3x
x55Y/uRDKfvFNpdsZGV9T2MaB1x5Fg++IIuoR6rk4zmgLiH2TaEb8/nlYa1C
OnA+3T26rQ/9DpunpeaxYQvIJGX/Qp1bI2yZxQJtattBpbnPCUWiMTJCIR0m
TtmdVN+E7Bcy8tc1BZpeqwef24zsklBW5EEH8f++b3tOqOMHpRfOSIfKjLmP
03Yht0brXOTT4LhNS0GQPvp/J2Q3fWVCvkG/WZsv8ktpy1FeGqzna/65cx45
ZKql0Xkm7LJheW4LRPavXn9OBd+f6VH02/+YE5uvupwBrh/95nXEIp+OzViL
/bhezINV61i4Xkxmq8RSBixbx1MP/Mf3/5Tqb+dCjcX4xAQXOa+52ymHAz2j
2998qkCeU7co+DcXRB6vziR8RG4JM+ndzoT0X/bFaj+xvs+c3cVS6aAqy7XX
Gka2v9coF84CSmvvyr6p9YTipT6nXIYD383s/Irl6gnVSaU0aD4dtJSGTi9d
ivqLNmv2NhpQK36kpiugfnCLbFMIE7Y832Duroy6NEvWpysdZH5Wad5bg2wv
9ni0DvsBnwWnR7eiv6NE8lNkGgxYd73t2YHM/u5Pj0yFN6ukvE/vRP93gyPr
cD6WlS6VEekgi/kr946yoeT47lDVY8irHhom4vsm3zz4Df8f/2nN61vDhMby
632/XJHXX1oSk8iBqdM3XFI7ifXX9UWcwPlzb1ndxVw3ZIeRURsdDgytZd2p
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
+37kxVd3Cr+kwv8Dzb099w==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Substitutional Load\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Substitutional Load vs Time\"", TraditionalForm],
  PlotRange->{{0, 20000.000000000004`}, {0, 0.09073484584497593}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127904316*^9, 3.689365242305155*^9, 3.689365308784734*^9, 
   3.689366782447113*^9, 3.689366866553609*^9, {3.6893670284222116`*^9, 
   3.689367056661128*^9}, 3.689367422556012*^9, 3.689367904432624*^9, 
   3.6893697503897142`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1: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
VMOy/9SHRS2eeJ+qq/iqGv6Y3J4ssqxFE1uD/PHhajA50C6tc7kW+ef39qdN
VkP49BOTIz61uMk80/DYn2r4sUjDrSKe6C9JOa20tgZEtfbPO5XUoqOFUuie
3TVgPx20LLqjFm13RWXftquBrosvUjMGazFCf/vW6pAa4HMUKfF+UYvW62LV
pMNr4K8ek5szX4vbi9uXJQvVQmEzt9CEpw7361+U0ZerBe1lDud4NtWhz3vF
QIvmWrCx4Tv1XbEOk+IifR//qoX1e/d29+2sw7eK1Xb2S+sg+9ZZpauH6nCd
e+9wqUUdXPv2JbTTtQ7/Kn/+bvy6Dn7+PVdTGF6HJ/jWRd01qIcgtzxn1ag6
3DB4orzOqh5+7vPk90uoQ+slX7999auHUvrGktjMOtQb7Mp+WlQPHml9qdeK
69DNcfjn6HA9uIzLPZaprsPpcwY2AfP1wB9+mPe3VD2G7ogwrbpZD8k27Y/P
b63Hta9XDy81rQeRaqt9KxTrscS2bOUV1XoIplvMqlvVIyX/mZ/0gzpw3xhh
Lutdj8K9JncqL9dBcsD5/cr59fiYLzbWzLYOqvxrhw0L6nFRc7XpdcIbmyot
w2vq0b/NWGHGrg6ecbbLUBvrccgv1HL0fB20hNMy7v6px+nKt48dPerAt+DS
J6+VDbg9WPzHl5t10NYfnecr04Cq+QUrrtyqAxqlSoGt0YAHz4nP8noR+RM6
mvCIeKbwezBXo32tDm5t6zYz8G/A6TvTwqvN6wBbyVIPExqwSvBiFtWkDkQ7
l4nu/NuAu+TeT4u/qgMPERfNWsVG/OaWc4DsWA+NvckTC4QDVUhpFpfqge+/
zzuNKLA6vT83rR5KDjouqT7YiNZ/q5W5BfWgIqT2ccnlRrxRQLWv5m+AZ6tM
7H24jRjLUz5lVtcA/kylkr1/G3F2XY4ffGsAhS1UgUsrmtDM30qXd00jnBuf
LKTsasJvgiaPhR40goKuOcdldxOuH7oteDq5EU6skTqUTfiI6mBKQEojvLkX
XsFRa0JqpOVQSF4jWFn9Ul11oAn9i5JHT79uhJS/+rVZJk04FLrFnivTBDWl
NvEzFk2YL7R/f7NqEyw9Od1z3aUJyd37vzi6NgF5umNU8HYT8vC/tufENMGh
f5YuqfeacFyrOc/uWRMk3p9a5RvVhDlUOf5xahP4zjz5y4hvwgIBo5d3XzdB
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
7UTEu7RSyuhjO3TK6QZNurThSoOKKfXpdpB2PxN+824bhjsbiHwi8nEofj4l
JLINLTIGNwxKM+AO78Q3+8w2FLLoUDiszwDqRH6e4NM27KrWMHI4xACjtfIn
3xJes7qA78YRBpxSYWi/eka0V0q6M04y4E3WTyvxljaU06/TyslnwCVD9YYB
ahu687rz/qphEOfljxc92tuw3XSDCl87A3azj3hbfmlDs4XIMMGdHUAf/VnS
8KsNq6SdU+/t74BBpUPjZotoWJ5V+KBNtwNGchZ+Gy6m4RLjc0fND3TA6JCr
bctuGiocsT79ULUDfI+em5hQo+Gua34HR4h4XzNr16ho01DgWX6QmkIH3F4p
PniMcARNmXaMcPSCZ02CJQ3Z/idOHBPugNWlL6IMbWmYgzMlESs7/u98SsSX
32P25x8Dhga7E1feoqHj9rgXEr8Z4J46rZB3h4ZbNLUmrX4y4GuIjn9NAA0n
1TbP35llACNtvsE4ioZrP2odfT7DAK1Hb0pV4mk4VZylTZ5mgNecdtGRDBpa
cFlLzxPt3o/NKvXJNNQZ1nZfNccAoTPmBvaNxPgn7pu//8UA1ufvJzRaaRhz
r3RfFTH+Jlvdnb3tNLQu0n9xe54BxTyTBsadNOzbpikfTPjzv7cVmpM0bLWU
We5LuNLN2SFjMR1XLlE7GENYoMxWEnjp6CNa9vA/HlsT3ee3jI73Xrb01BOu
Pi0zpiBGx5kF/19DPB3wwvaobKMEHUmdCRqwtAM4nxUdMuToOOs9Ob1/XQfc
XC64OHEXHb9ebxSO2dcBpFlthWldOpZ2zF48xyD2Vznaue8wHRnne8Opkp1w
X/KaUYUDHYfOXJ/h9WKC58CZjYq+dIyNYXWeqmHC6NRWWbP7dCzTSxdS6mbC
KX5xc2YuHcfsLHrtPzDBR11b7305HW9w9lbljjJhK9ebc66Gjn7/LFYzB5lw
pX0tx7iVjnWqH4Rc2pjwiMd3n+oHOrbLbvqzKIoJv7Netkj8paNz3j49s0Am
mB7xiNBa1Y6lG4Ti2u4ywXiEksS/ox3LOrQXokKYoLxgIlF7sB1ZuvbPVeKY
EPU5oQoN2nHuw9pjFx8R413mYegatWOW49R37RTm/86v9u2YqckVGs9jgvrr
gxEW19uRduLp+a5SIj5zutHCux0fZ3O6UsuYIEnJv+nq145qi99M/iTa3Vcd
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
7/v+HrSJkBTwIfz/AHNqoE4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1: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
6I8AyX/P+4nrvzgtsk70/wG6TkQn
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 20000.000000000004`}, {0, 3.38474508308381}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"mean fitness\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"mean fitness vs Time\"", TraditionalForm], 
     PlotRange -> {{0, 20000.000000000004`}, {0, 3.38474508308381}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"mean trait 1\"", "\"mean trait 2\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127904316*^9, 3.689365242305155*^9, 3.689365308784734*^9, 
   3.689366782447113*^9, 3.689366866553609*^9, {3.6893670284222116`*^9, 
   3.689367056661128*^9}, 3.689367422556012*^9, 3.689367904432624*^9, 
   3.6893697504688807`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1: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
A+fluVvUfDT4/wEoclod
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        PointBox[CompressedData["
1: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
oyjPAB1O/d95fys8nage1Kynw/8fi2o5PA==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 20000.000000000004`}, {-0.00018084832168643698`, 
       0.00043565470339303875`}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Variances\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"Variances vs Time\"", TraditionalForm], 
     PlotRange -> {{0, 20000.000000000004`}, {-0.00018084832168643698`, 
       0.00043565470339303875`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"variance trait 1\"", "\"variance trait 2\"", "\"covariance\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127904316*^9, 3.689365242305155*^9, 3.689365308784734*^9, 
   3.689366782447113*^9, 3.689366866553609*^9, {3.6893670284222116`*^9, 
   3.689367056661128*^9}, 3.689367422556012*^9, 3.689367904432624*^9, 
   3.6893697505623417`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1: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
OeOFchmz330lpDh52abLOWPDpPPdzT+UoHjGQ3K/sTOmss4y8/Mrw/P+irvt
TmeMM9pVUwWV8b6svI0S7ozh2H9v6KLKKI2c2+oc5YxrTQeE4qyVMeLJeDos
3RlflOKTH91VxrH6zw/lrjiDhV4w2z+igk8/Uutq15xxxctUbXRcBZXHhuI4
GV3wMsVcLnpVBep7dHz/rneBWghFxHVNBVlKZ5/Vcbrg5w0TFhVmVcw9dJf+
zOOC3uU89+BNqliSijd4r+QC7d79TUpSqnhQX79nytgFQh8Srt3TUkU9/yjH
jKcLYoNeVDhZqKJi9lpmZpQLdtrXq/C6qKLuZa3qnYMuEO+zERfyUEWn5dSF
/lgXyI4er7QpUEWmtz7D8yQXeF/fJ6LQrIp1Pz/e7EwhfGZBbtu0KiQNV7TE
j7hA4ovhb3NGNag77NEeIzz4ttZ+LEoNlQvzyyo5LrC0j5bVj1bD94fdpzcS
Xv3LNV2QqwbFWoMZ5gIXVNyjmu6tUMMS61fL7YUu6PeNc3/XpoaCxYYNUldc
kLWyHPBzUA11rY3iM40uqHcOi2j8pYaf4nNLp5+7YPRFSgAHozoU/igH7Bl0
wcDz3PKLhJttnj1bIjxysywhfoM6uo+s1Pt8d8F9NmHHrk3qsDjMG/7utwt2
fbzydElcHTeNa09yTbjgm17lZyk9dVw3Pjo79ccFRW0c18ZOqMMt+5hQP58r
Ji7ovV84o451ZTWfZDa5QsTpsWZarTqe8cbk1Mq4olH1w9MBwqKqhR+WCZtF
bTBgv60OmQo7AzlZV6xJ/e0ZaVZHccFM/IiWKyrKt2/Qa1fH2sUpYZKhKyxU
O68Pd6kjI1l26LOVK771vC889VYd0bT4bb88XKHaOaX0uE8dbZYRGa+8XHFP
vDyzvV8dmUG1jEp+riAJGf+aHldHxGK7vHusK3Kvef3MWlYH85uPh8lprrAL
Tjb8w6sBQxlGS4184vqd55xKhTWwc63Hh3rGFQXZqWb9GhpgkmiNly13xT/t
g7n79DXQfFknVeeKKzZM3zdvtNeAXobAcONNVyi1pO8catLAWJpSFl8/Mf/y
qzzfZg2Ucwp/FXnvihdGTxxVn2pgw4v9IrmDrnB1zd97+z8NRG//4RX1wRVv
5qvpru81YOrPXi74hfDpu+3HZzTAsHm8u+qnKy4ULd0fXq+JG2MJPVpjrnBP
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
/W8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJyFms1uU0cYhkddeZlFFl5k4UYWiiIUkQCOgTQZQtqm/LbQAv3FhbLuLcyl
+FLmUnwJvYS26nm+ah7PEbPg6PP7OzMnEjF8/v7Plx8/Sylt/vnj32d//XXx
33MnDx8Mz4mefA4P3djnuyM+E/HR7+pzePhN9fmu8D35TYXP5O9+8NHDR78v
nHlXT/ysnwvfF35D/nPNgWuhPxhw9oc/efaHj/5QfOM3pYe/I/5EOHz0+B0N
M+fmvFvSw8fffW4Jh4/fsfjH4lsPviMc/Ylw+52If1s4884I/87w5HyivxY4
evzR43dXec6HPxnhM+O3UD/0/By5D3z0p/K3H3kT8fH3/pbS44c/+on4U/Hx
uyf9Uvh95dnfeuap+OjxR48/eQ+EM++Ijx956M+YtSbC8cMf/RfyB59qnoi/
Jxy/8xEcvzPxL+SPnr7kTTWjz9Izo7cfOP3Up8gvZs7nvMXTw9Z/i+8+8PFn
noq/K/6O+ORftvzAvciHT577CN/qB74j/l6fHzh9H8mPmfuwn2brC/NM+F4f
L86/Gp770s9GcGbyr1p+zHPx9/v89OUIPte8Lz55zPw9wHng9JE+fdXqI8+L
Ps5zH/zoa3/3ET/09PtaeeAHmvfFpw8z/e1/rXzlBZ++9r9uceuDTz/nXbf8
Iv/0jfTM5F23/CJ+EX9Lb//Hw9NrLpy+zgOfa+Y8Hrf89GR4HgjHn/lQOHno
6Se/rT7gN8Snz9ORvLlw8pnp+2QEn/f5SXh6Jj/zn7X8Yj4z+3/azqE/7PdL
z5X3vOWH3os85duvyG+rr/OY+b3A/YX7PNIL9XnR4oUZvfPFT98OzyPx6e88
+IfCB78Mzv5etPzQH4h/JD77kZ/7FPUJv0Ff3Uf5Vfz0XYvHzH6VV70f8a0P
/KZw9sPsdbPvXzRX5qN+XtEc/Fsj/V+2ftYbr8Kz8ODTR7j5gfN7rfRVuPXG
nZdeKf9Vy7c+Cc/SF+bjvl8Rv47xR/DQe9EX/KTfp8o/fd/2i/lY80lfn8Fv
K4/fq+Wf5R8z5yd+kf/Weaif+9i/yj/mO+Jzfuprffqh5dvP+uDf7ecZ39q/
/N0noz/WvJDfXelPxOd7F+Y7mk/lx31Jn3U+Rfuzf/C9lsrjexD1qdpf+HHf
6ld0Pj4/86v6FuV7P9an1y0/+3zBuX/f3xif85befbP45XWLF+ntZ35lXvT5
xq1Pb1p+zAvp6f+mnQsz76PO1/nOy5qL/Kv8rQ/ci/29bfPDn+/RvH/47Ff6
6v7CrS9vW34R3/oifZU+5lPxF31++nF4Lvv8wLkv6fMYvujj4cd+lR/4Qjg/
j9JX6bP0Vfz0U+tXhGfwhfhe9Bc/y7+6v/ihZz/MS/FP+/z0c+tXna85+PRh
vqe8Zb9P6Oknv2I/8Yv4VXgVnn5p/UJ/v+9vvv2y8OAvhbMf8bP4gfO9ufSV
2Yv+3p/8q/cj//Rry4/5fr+/8er+4A80c37SZ/GNF+azPt94zF/0+VX8mM/7
/PRb6+c849X7ER78M+FefG8PfqGZ/TGfa+Y8mPme3vuRv/VVeucV73+Yi/M4
r3ctnpVf5F99fu/aPuYHftHXZ+H2qz5P4e5v/yJ/62M+b/lF/nGePi/pq/KK
z0d+aTU8+XcPcC/OE/6gn0nv86w+T/VFX4xzH8rLqxH8Qn3OxR/0K2bOV/os
vfkz8VfyL+Lbr0hfdH4+L+cXnddM+Fq4+1Tha+Xbv0q/cV+f5++t3nznRZ+R
fPzi/Jkftv7FfXif1Sf0WkV+cX/wL5Vn/GHrX5Qf9yl+Vr/VJ/RFuPNX8ivS
r8Uv2p/7rJVnvwoufdy3+Bv5V80b9XFeet/6V/Xz/pyHvkgf75f8I4/7Zr7s
9w+9F/erfPfLwp1f1I+8Iv94H4SHnvsVzhzvh/rYP/jcp/yq+IFrjvdD/I3w
9KHFmYv5l/0862cfWj563mfrZ9Jn6ZPmmfpl6VfCmbfWZauP/1cgfRHu/a2E
r4QX+a2Fr6U3v8J/1M+zn/n2r75f35f4G/lZn/5o9czF+dw3/Ef9fPC4D2bu
W/hM+Vn+7rP5xPuwkn4mfVK++6zUp8jP/CJ/72ct/Ur8LH6V/1pzlZ/zi/w2
4ruP84J/1fdLH1v9xvf9se1TpZ8Jd577zJQX+VfSD/wsvvOin/hF/HiflOc+
oVefeJ/kb374/b/+BhEw3Js=
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 41.}, {0, 171.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"trait 1\"", TraditionalForm], 
       FormBox["\"trait 2\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"evolution of traits vs time\"", TraditionalForm], 
     PlotRange -> {{0, 41.}, {0, 171.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"distr mean\"", "\"distr nose\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127904316*^9, 3.689365242305155*^9, 3.689365308784734*^9, 
   3.689366782447113*^9, 3.689366866553609*^9, {3.6893670284222116`*^9, 
   3.689367056661128*^9}, 3.689367422556012*^9, 3.689367904432624*^9, 
   3.689369750640029*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Generate", " ", "animation", " ", "of", " ", "details", " ", "evolution", 
    " ", "of", " ", "blob"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp003.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mean2mean", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"results", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", "\[CapitalDelta]c1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"results", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "/", "\[CapitalDelta]c2"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noseTravel", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "12", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"mean2mean", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "i"}], "]"}], "]"}], ",", 
           RowBox[{"noseTravel", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "i"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "Red"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "60"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "150"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<distr mean\>\"", ",", "\"\<distr nose\>\""}], "}"}]}],
          ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<trait 1\>\"", ",", "\"\<trait 2\>\""}], "}"}]}], ",", 
         
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"{", "\"\<evolution of traits vs time\>\"", "}"}]}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "mean2mean", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Documents/kgrel2d/plots/simtest_N-10p6_c1-0d01_c2-0d02_U1-2x10pn4_\
U2-1x10pn4_exp003.avi\>\"", ",", "plots"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.68874124061594*^9, 3.688741243420786*^9}, {
   3.688741567568636*^9, 3.688741586272008*^9}, {3.68874168036839*^9, 
   3.688741687528088*^9}, {3.6887417635360403`*^9, 3.68874176807205*^9}, {
   3.688751217148959*^9, 3.688751293810988*^9}, {3.6887514211800957`*^9, 
   3.688751421659536*^9}, {3.6887514553238792`*^9, 3.688751487468504*^9}, {
   3.688752169235358*^9, 3.688752219779504*^9}, {3.688752253187915*^9, 
   3.688752256995316*^9}, {3.688752338011848*^9, 3.688752390107595*^9}, {
   3.688752501708383*^9, 3.6887525047724857`*^9}, {3.6887526717726727`*^9, 
   3.6887526837320747`*^9}, {3.6887527200843353`*^9, 3.688752720603757*^9}, {
   3.688752755419982*^9, 3.688752791587425*^9}, {3.688752870652404*^9, 
   3.6887528793477297`*^9}, {3.689363513314013*^9, 3.6893635498983307`*^9}, {
   3.689363922306107*^9, 3.68936395607584*^9}, {3.689363988274111*^9, 
   3.689364026546067*^9}, {3.6893641498825912`*^9, 3.689364170146286*^9}, {
   3.689364217826824*^9, 3.689364217906637*^9}, 3.689365445878995*^9, 
   3.689367933206925*^9, {3.68936957867632*^9, 3.689369584643423*^9}, {
   3.6893697700916033`*^9, 3.689369771642955*^9}}],

Cell[BoxData["\<\"~/Documents/kgrel2d/plots/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp003.avi\"\>"], "Output",
 CellChangeTimes->{3.689366033626404*^9, 3.6893661030004463`*^9, 
  3.689368051587461*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "evolution", " ", "in", " ", "2", " ", "dimensions", " ", 
    "and", " ", "store", " ", "full", " ", "data"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "20000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fulldata", ",", "verbose", ",", "veryverbose"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "False", ",", "False"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6893642748097477`*^9, 3.689364277369712*^9}, {
  3.689368304557455*^9, 3.689368304682645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "4.708735280542232`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "105.4813220547839`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.00009480351407433339`"}],
  SequenceForm[
  "Trait 1 q = ", 4.708735280542232, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 105.4813220547839, 
   " and rate of adaptation ", 0.00009480351407433339],
  Editable->False]], "Print",
 CellChangeTimes->{3.6893681081874733`*^9, 3.689368308129064*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "3.7383519587043743`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "96.74281185269709`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.0002067337057605115`"}],
  SequenceForm[
  "Trait 2 q = ", 3.7383519587043743`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 96.74281185269709, 
   " and rate of adaptation ", 0.0002067337057605115],
  Editable->False]], "Print",
 CellChangeTimes->{3.6893681081874733`*^9, 3.689368308130048*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "7", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp004.m\>\"", ",", "results"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.689364319722063*^9, 3.689364321585909*^9}, {
  3.689368769379485*^9, 3.6893687857980423`*^9}, {3.689369039035138*^9, 
  3.689369057874571*^9}, {3.689369309617503*^9, 3.689369314922521*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp004.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"results", "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.689369330946369*^9, 3.689369336938356*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "507936.50793650793`", ",", "253968.25396825396`", ",", 
     "126984.12698412698`", ",", "63492.06349206349`", ",", 
     "31746.031746031746`", ",", "15873.015873015873`"}], "}"}], ",", 
   "1.126984126984127`", ",", "1.5396825396825395`", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6893694255445347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Analyze", " ", "Motion", " ", "of", " ", "blob"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp004.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blob", "=", 
     RowBox[{"results", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4", ",", "5"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"blob", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"blob", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "blob", "]"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"blob", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "Red"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", "7"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Large"}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Fitness Classes\>\"", ",", "\"\<Mutant Fitness Class\>\""}], 
           "}"}]}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<trait 1\>\"", ",", "\"\<trait 2\>\""}], "}"}]}], ",", 
         
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Evolution", " ", "of", " ", "blob"}], "}"}]}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "blob", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/plots/simtest_N-10p6_c1-0d01_c2-0d02_U1-2x10pn4_\
U2-1x10pn4_exp004.avi\>\"", ",", "plots"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688753611899971*^9, 3.68875363306802*^9}, {
   3.688753807755365*^9, 3.6887538457313223`*^9}, {3.68875389128337*^9, 
   3.688754009611796*^9}, {3.6887540957638063`*^9, 3.6887541148039513`*^9}, {
   3.688754167252035*^9, 3.688754167347722*^9}, {3.688754214835932*^9, 
   3.6887542677883377`*^9}, {3.6887543039004*^9, 3.688754394754507*^9}, {
   3.6887544373084917`*^9, 3.688754561578891*^9}, {3.688754616975334*^9, 
   3.6887546582210083`*^9}, {3.688755342246117*^9, 3.688755364661318*^9}, {
   3.6887556243565083`*^9, 3.688755624908174*^9}, {3.688756091644719*^9, 
   3.6887561071002703`*^9}, {3.688756152820294*^9, 3.688756328781499*^9}, {
   3.688756373269032*^9, 3.688756374660254*^9}, {3.689363846457808*^9, 
   3.689363848337645*^9}, {3.689364074065825*^9, 3.689364093378536*^9}, {
   3.689364124898225*^9, 3.689364125692884*^9}, {3.68936433859542*^9, 
   3.6893644878190117`*^9}, {3.68936879696751*^9, 3.689368797208914*^9}, 
   3.689369339837929*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\)\[NoBreak] \
called with \[NoBreak]\\!\\(\\*RowBox[{\\\"0\\\"}]\\)\[NoBreak] arguments; 1 \
argument is expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.689368593398335*^9, 3.689368921158945*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Export", "::", "errelem"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The Export element \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"GraphicsList\\\\\\\"\\\"}]\\)\[NoBreak]\
 contains a malformed data structure and could not be exported to \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"AVI\\\\\\\"\\\"}]\\)\[NoBreak] format. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Export\\\", ButtonNote -> \
\\\"Export::errelem\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.689368593398335*^9, 3.689368921213024*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Examine", " ", "Trajectories", " ", "of", " ", "Trait", " ", "Mean", " ", 
    "Fitnesses"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp004.dat\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mean2mean", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"results", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "}"}], ".", 
           RowBox[{
            RowBox[{"results", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", "popsize"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meanratio", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mean2mean", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", 
        RowBox[{
         RowBox[{"mean2mean", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "mean2mean", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"velocityratio", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]c2", "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}]}], 
         ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]c1", "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}]}], 
         ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "mean2mean", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"mean2mean", ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<mean fit trait 2 vs mean fit trait 1\>\"", "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<trait 1 mean fit\>\"", ",", "\"\<trait 2 mean fit\>\""}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"meanratio", ",", "velocityratio"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ratio of mean fitnesses\>\"", ",", 
        "\"\<ratio of theor-velocities\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<(mean-fit-2 / mean-fit-1) vs time\>\"", "}"}]}], ",", 
     
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<time\>\"", ",", "\"\<ratio\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6887582253382483`*^9, 3.688758501716803*^9}, {
  3.6887586427414093`*^9, 3.6887587981814127`*^9}, {3.688759207351345*^9, 
  3.688759219397995*^9}, {3.689364529346159*^9, 3.689364833018622*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Oh3MAgIz694F4X/w6Sff
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 42.54228116186666}, {0, 166.18896011277687`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.688758354494632*^9, 3.6887583877098217`*^9}, {
   3.688758434985393*^9, 3.6887585025357122`*^9}, 3.688758798867324*^9, 
   3.688759222295253*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9mndcje//xzNSQpIiGS36hJYdwgshRdo7HW3N06nTHmef7MiIjPjIHpEt
ZEdFCFFxzJJVGSXSr9/je70//vF4dp3rft+v63WN133uYxAQ4xzcXUlJqUcP
JaX///9//5pmZV6symmu+TGL/QGmfXedEjUSq2Itb/bbr5+JNSCrMklS1/nJ
WAs+wcZNIza2MtZBvvp8hVeWMv7Hw/Dpe2iVJqcXY31sPHxafHapCmNDPK1d
WbFhC/FInB1SVH7zDrExVMYPKbQZ35uxCdy0d93ZmUI8BhMCzcN3bOvH2BSX
3yjc+1YRm6Pq/mT/Ql91xpbI+fxqjUW3/ozHYY6FrvfxZmofj9zkb/Vln6n/
BBzyrruwZiLxRAw+43tjVkFfxpMw1bOX+G0u8WR0V97K6+tLPAX6fbfEe2/t
w9gK8ROcbaatIp6KYcI8j0GdpGcaxmYcyy3sIJ6Oa0b8xKI6Yms493KT9Ioi
ngEfNd+PbXvUGM/EqenjCgL+qz8Lio7EmUdnkz7AJ3N/sYou0y8AokI/F7en
aLD22VB8d9g1dgdjwWx8mJRZaBYwgLXPQVaWYJG7thZrn4NNw9WWTrRgrDQX
z4735OAetc+Fp9n5cpMJg1i7Dfp1m5VQFM1YYAOexqBnShaDWfs8zH/3usDX
gbFgHqzWvtI7uGMIa5+P6DqX/pMm6bL2+VAurdMVzhjB2hcggd+8e5VMn7Uv
wCt3/ZBTroas3Rab+IY9MlUZC2wx9pTnHI1yA9a+EJXDb34uNKH+C5Gue6fv
smo91m6HhlUH7IPqh7J2O3weVyh1VWGsZI8xUQ0j5mrT/dljUZFq/sw9dP+L
UCefb3joNGPBImz2vKzufpnaF0P/5FTjZ7XUvhhHGhVGp7TY9ZQc0LHtk3bH
f9d3QNJpndQDOtS+BGd79zxWW039l6BHgMbpV2fp+o54P3G02dMTjOGIBLd+
fs0H6POOSD84Kn033W+JI0JmB1/UsqfrOyEq9+sLM1fGcEL9U/cVA/3pfpyQ
PfBEfdGgYay/E35yri136Efj54wTg4M+loxlDGe4N8d9+BnKWOCMBQmjKt6s
YFzijANqb+pXu1J/F4yNrrg93of6u2CIbueaxX7U3wVmU8ec6eVP/V1gMP7A
8Mcp1N8VScN/D57ejfkLVyQaOXx+SSxwRc73xyFeSoxLXOGpf/Rr3tbhrL8b
nmSP7fsEjOEGd4Mbnu0HmV6BG6JuG3w915vNhxI3bEv45XtYi+aHOzxqtZUP
ujCGO5as0Ulx96H55I6Yqu0x4wqpvzt6793+tm8b9ffA+ivfdqzqoP4eyLnd
ecWgmOp7oLl077pFPdj9lXjg253knJdadP+esOEbdfQxoPv3hO3Zewfl6owF
nogQrJT7t5B/nuid2izPVjBW8sLRI7EbM28zhhdSgtbYblKj/l44c/bvq8z/
/POCaErMI+NsNp5K3li8+nZ5tzc0/t4Yqjt95CQDtv4E3njkdF9bv53G3xsL
6yw3rqun/j64VJLEtd1M/X2wr1vULfv15J8PLDj5Xyffp/o++GAfo4jII/99
EdPu6H6J5gt8UXr43C1jF5o/vhA+9P/1rz3198We4jB+sA7194Nh+4cfVzWp
vx/MBj57ZHmM7T8CP6jz4j7If9P4+6G6s9/zhrs0/ktRE6VRzT9E478UH1zV
y+2v0fgtheNQl/7durPrlSxFs3V963Ed2t/8oVlWP0iizhj+eNfZ88OV79Tf
HxVzOI8K1lF9f3zouNltsRvV52D1OJ+Brc7MP30OLks5kQO7k58cPPGruH+3
js0vDgcujs6pvAyanxwUXsxZqavGOJ+DO+cKF61KZ+u/hAP/Hq1j2viMFRw0
rU27ocml/WMZxq9r9dfxYqy/DDYBwVV+/+0nXe0uWdui7zDmLMPFxOZBr9/T
/rIMUWO1N8tmU/1luNrfZeDvVbReluHEXWupaxLTo1iGa+ryjoFpNH8DMKKx
pipZQPoDsLfo6V9zCekPgNx5Sv9GMWNOAGznGtqGi2h9BUCl74KwpxzG+QHQ
SfNan+1E6yUA/TQbX9x7TvoD0GxTY/Yzh863QCyb9ysm8hc7//QDEXRi86dQ
q4GsfiAiF95aOHMCY04gJiVv8/l3OmNBIM6M9bePcmWcH4hse8tJ0z0YlwRi
beT+fapejBWB8G41jPT0ZqwUBL6LQd+9noz1g5B83uxBiB3VD8KuWQ0vf9hQ
/SBc99tp/cac6gdBuu3SucGmVD8Ii6aO/O4xluoHIedVhfRSiyarH4TaYrvb
wo+MlYLhP8eiTwaxfjDuwWLt5X5UPxgNew3/6ZRS/WDsfKd5VHaN6gdDvuKO
8Ls5yxf5weCbGJvGChmXBGNDy2rFBwljRTDqjqyvKFtP+SQEQ0Xd/2YfYqwf
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
pSD0x/8B/ldXAA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0TlsBkcZBuAP0qT8CwoXFBuEkIUQWm5zZiAc5l7CZY7AEAg4CZANp7mH
2+WWLqd0uaXLKV1u6XJKl9thqBACCfn5m1/Pvvr06tU89fwrz77w2oh44omI
//z/97c/Hf986h//evU16X8f0mM/iQ/4dfgIvx4P+A34jfhN+Bi/Gb8FvxWP
+G347fgd+J34Xfjd+D34BL8Xvw+/H38AfxB/CD+N02MXHB8mx/ERchzPkOP4
KDmOj5Hj+Dg5jk+Q4zglx/FJchyfIsfxaXIcnyHH8VlyHJ8jx/F5chzTYydc
cMPxBe5xwQ3Hs9zjghuOL3KPC244vsQ9Lrjh+DL3uOCG4yvc44Ibjq9yjwtu
OM64xwU3HF/jHhfccHyde1xww/EN7nHBDcc3uccFNxzPcY8Lbji+xT0uuOH4
Nve44IYjP/aAE8644Iob7ji+Qz9OOOOCK26443iefpxwxgVX3HDH8V36ccIZ
F1xxwx3H9+jHCWdccMUNdxwv0I8TzrjgihvuOL5PP04444Irbrjj+AH9OOGM
C6644Y7jnH6ccMYFV9xwx/Ei/TjhjAuuuOGO4yX6ccIZF1xxwx3Hy/TjhDMu
uOKGO44f0o8TzrjgihvuOH5EP04444Irbrjj+DH9OOGMC6644Y7jFfpxwhkX
XHHDHcf82Ac84BEnPOGMZ1zwgiteccMb7njH8Sr78YBHnPCEM55xwQuueMUN
b7jjHcdP2I8HPOKEJ5zxjAtecMUrbnjDHe84fsp+POARJzzhjGdc8IIrXnHD
G+54x/Ez9uMBjzjhCWc844IXXPGKG95wxzuOn7MfD3jECU844xkXvOCKV9zw
hjvecfyC/XjAI054whnPuOAFV7zihjfc8Y7jl+zHAx5xwhPOeMYFL7jiFTe8
4Y53HBfsxwMeccITznjGBS+44hU3vOGOdxy/Yj8e8IgTnnDGMy54wRWvuOEN
d7zj+DX78YBHnPCEM55xwQuueMUNb7jjHcdv2I8HPOKEJ5zxjAtecMUrbnjD
He84fst+POARJzzhjGdc8IIrXnHDG+54x/E79uMBjzjhCWc844IXXPGKG95w
xzuO37MfD3jECU844xkXvOCKV9zwhjvecfyB/XjAI054whnPuOAFV7zihjfc
8Y6jPPaT+ICP8ICP8YhPcMKneMJnOONzPOMLXPAlXvAVrvgar/gGN3yLN3yH
O77HO37A8UfeHx/wER7wMR7xCU74FE/4DGd8jmd8gQu+xAu+whVf4xXf4IZv
8YbvcMf3eMcPOP7E++MDPsIDPsYjPsEJn+IJn+GMz/GML3DBl3jBV7jia7zi
G9zwLd7wHe74Hu/4AcefeX98wEd4wMd4xCc44VM84TOc8Tme8QUu+BIv+ApX
fI1XfIMbvsUbvsMd3+MdP+D4C++PD/gID/gYj/gEJ3yKJ3yGMz7HM77ABV/i
BV/hiq/xim9ww7d4w3e443u84wccf+X98QEf4QEf4xGf4IRP8YTPcMbneMYX
uOBLvOArXPE1XvENbvgWb/gOd3yPd/yA42+8Pz7gIzzgYzziE5zwKZ7wGc74
HM/4Ahd8iRd8hSu+xiu+wQ3f4g3f4Y7v8Y4fcPyd98cHfIQHfIxHfIITPsUT
PsMZn+MZX+CCL/GCr3DF13jFN7jhW7zhO9zxPd7xA45L3h8f8NH//W8zZqdc

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 771.}, {0, 6.36432436012209}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.688758354494632*^9, 3.6887583877098217`*^9}, {
   3.688758434985393*^9, 3.6887585025357122`*^9}, 3.688758798867324*^9, 
   3.688759222327881*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalDelta]c1", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"\[CapitalDelta]c2", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"U1", "=", 
     RowBox[{"2", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U2", "=", 
     RowBox[{"1", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"popsize", "=", 
     SuperscriptBox["10", "6"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"starttime", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timestep", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxtime", "=", "60000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fulldata", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"verbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"veryverbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Testing", " ", "two", " ", "trait", " ", "evolution"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688764231871097*^9, 3.688764253149859*^9}, {
   3.688764283894946*^9, 3.688764330215361*^9}, {3.688764372895424*^9, 
   3.688764386079885*^9}, {3.688764418599378*^9, 3.688764446622428*^9}, {
   3.6887644901999607`*^9, 3.688764511215309*^9}, {3.688764588271337*^9, 
   3.688764870352583*^9}, 3.68936151208447*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "4.708735280542232`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "105.4813220547839`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.00009480351407433339`"}],
  SequenceForm[
  "Trait 1 q = ", 4.708735280542232, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 105.4813220547839, 
   " and rate of adaptation ", 0.00009480351407433339],
  Editable->False]], "Print",
 CellChangeTimes->{3.688764883583211*^9, 3.688765003577957*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "3.7383519587043743`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "96.74281185269709`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.0002067337057605115`"}],
  SequenceForm[
  "Trait 2 q = ", 3.7383519587043743`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 96.74281185269709, 
   " and rate of adaptation ", 0.0002067337057605115],
  Editable->False]], "Print",
 CellChangeTimes->{3.688764883583211*^9, 3.6887650035786657`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParallelDo", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"results", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"RunSimulationCheckEachMutation2", "[", 
         RowBox[{
         "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
          "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
          ",", "genotypeabundances"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
       "\"\<~/Documents/kgrel2d/data/convtest/convtest_N-10p6_c1-0d01_c2-0d02_\
U1-1x10pn4_U2-2x10pn4_exp\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], ",", 
       "results", ",", "\"\<Data\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<exp \>\"", ",", "i"}], "]"}], ";"}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2", ",", "35"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6887648961988583`*^9, 3.688764989575225*^9}, {
  3.688765573464697*^9, 3.688765607447715*^9}, {3.688765664176187*^9, 
  3.688765679551775*^9}, {3.688825000306798*^9, 3.6888250028571978`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Analyzez", " ", "convergence", " ", "data"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meanratios", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "35"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"results", "=", 
        RowBox[{"Import", "[", 
         RowBox[{
         "\"\<~/Documents/kgrel2d/data/convtest/convtest_N-10p6_c1-0d01_c2-\
0d02_U1-1x10pn4_U2-2x10pn4_exp\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"meanratios", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "35"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"StandardDeviation", "[", "meanratios", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Mean", "[", "meanratios", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StandardDeviation", "[", "meanratios", "]"}], "/", 
    RowBox[{"Mean", "[", "meanratios", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "meanratios", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6888247157721443`*^9, 3.6888247666718807`*^9}, {
  3.688824802887982*^9, 3.688824942744104*^9}, {3.6888249899549294`*^9, 
  3.688824992993059*^9}, {3.688825080370143*^9, 3.688825108360354*^9}, {
  3.688825155889594*^9, 3.688825197224382*^9}}],

Cell[BoxData["0.6475335009938762`"], "Output",
 CellChangeTimes->{
  3.6888249448136663`*^9, 3.688825018955332*^9, {3.6888250842021523`*^9, 
   3.688825111640356*^9}, {3.688825183945795*^9, 3.688825200258183*^9}}],

Cell[BoxData["7.404361842553456`"], "Output",
 CellChangeTimes->{
  3.6888249448136663`*^9, 3.688825018955332*^9, {3.6888250842021523`*^9, 
   3.688825111640356*^9}, {3.688825183945795*^9, 3.688825200259856*^9}}],

Cell[BoxData["0.08745297903628232`"], "Output",
 CellChangeTimes->{
  3.6888249448136663`*^9, 3.688825018955332*^9, {3.6888250842021523`*^9, 
   3.688825111640356*^9}, {3.688825183945795*^9, 3.6888252002610397`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQEf7H9XStx8/lrKASrgkOJ90FthGozP4XDZQkA7
ygTGF3CI3eG4RFRFHsoXcdi1TDLznJgclC/h0DJ/uePDGdJQvoxD+TKbSdl6
MPUKDmkd5Vf2N8PMU3JI1PPUDDoH06/iwP03xPL2ZBhfzWF/xVQ17j+yUL6G
w8ubmzaxrFOA8rUcLt9V2DOhRhLK13H4mcUlJWwOk9dzUI9h/xslB9Nv4GCq
ybPCSgQmb+jw7dZDc+PfML6RQ41zCdvZDTD1xg7Nb7VKmXlgfBOHH/fXTP2y
G6be1IHx0ZwDk4pg9ps5LJm1YpLzFxko39zh/t+/gad6YeotHD4e39PmPk0C
yrd0SLffu/TtCpi8lcPuxmef2VVh+q0dMjoXWbO7weRtHLy39Wx304GFr63D
+jP8ix9xwNxn58DdcLLSeR4svO0dXgU+M0y3h8k7OMwPKRVccQIq3+DgkPDu
WtemSph9jg4PYr7cLmyH8hscHSpnfZO4HCDjAACaD4pv
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 6.029563830585367},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 35.}, {6.146757226249961, 8.490625139541844}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6888249448136663`*^9, 3.688825018955332*^9, {3.6888250842021523`*^9, 
   3.688825111640356*^9}, {3.688825183945795*^9, 3.6888252002816257`*^9}}]
}, Open  ]]
},
WindowSize->{1535, 876},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 6153, 142, 275, "Input"],
Cell[6736, 166, 1801, 42, 239, "Output"],
Cell[8540, 210, 24006, 410, 239, "Output"]
}, Open  ]],
Cell[32561, 623, 8998, 260, 239, "Input"],
Cell[41562, 885, 478, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[42065, 901, 378, 7, 55, "Input"],
Cell[42446, 910, 1974, 53, 32, "Output"],
Cell[44423, 965, 1181, 22, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45641, 992, 9977, 279, 349, "Input"],
Cell[CellGroupData[{
Cell[55643, 1275, 978, 18, 23, "Print"],
Cell[56624, 1295, 853, 17, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[57504, 1316, 1608, 33, 99, "Input"],
Cell[CellGroupData[{
Cell[59137, 1353, 2329, 64, 165, "Input"],
Cell[CellGroupData[{
Cell[61491, 1421, 324, 7, 23, "Print"],
Cell[61818, 1430, 280, 6, 23, "Print"]
}, Open  ]],
Cell[62113, 1439, 8069, 144, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70219, 1588, 9170, 269, 349, "Input"],
Cell[CellGroupData[{
Cell[79414, 1861, 660, 14, 23, "Print"],
Cell[80077, 1877, 786, 15, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[80890, 1896, 1114, 26, 99, "Input"],
Cell[CellGroupData[{
Cell[82029, 1926, 2366, 64, 165, "Input"],
Cell[CellGroupData[{
Cell[84420, 1994, 320, 7, 23, "Print"],
Cell[84743, 2003, 275, 6, 23, "Print"]
}, Open  ]],
Cell[85033, 2012, 10010, 176, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95080, 2193, 9622, 278, 349, "Input"],
Cell[CellGroupData[{
Cell[104727, 2475, 981, 18, 23, "Print"],
Cell[105711, 2495, 982, 18, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[106720, 2517, 1491, 32, 99, "Input"],
Cell[CellGroupData[{
Cell[108236, 2553, 8816, 241, 429, "Input"],
Cell[117055, 2796, 461, 9, 23, "Print"],
Cell[117519, 2807, 16157, 275, 239, "Output"],
Cell[133679, 3084, 41940, 743, 250, "Output"],
Cell[175622, 3829, 61339, 1079, 232, "Output"],
Cell[236964, 4910, 28799, 528, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265800, 5443, 4306, 104, 165, "Input"],
Cell[270109, 5549, 217, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270363, 5557, 9308, 274, 349, "Input"],
Cell[CellGroupData[{
Cell[279696, 5835, 738, 14, 23, "Print"],
Cell[280437, 5851, 739, 14, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[281203, 5869, 1110, 26, 99, "Input"],
Cell[CellGroupData[{
Cell[282338, 5899, 371, 9, 55, "Input"],
Cell[282712, 5910, 865, 25, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283614, 5940, 5730, 150, 253, "Input"],
Cell[289347, 6092, 559, 11, 23, "Message"],
Cell[289909, 6105, 638, 12, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290584, 6122, 4850, 133, 261, "Input"],
Cell[295437, 6257, 16653, 284, 241, "Output"],
Cell[312093, 6543, 13004, 226, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325134, 6774, 3163, 87, 437, "Input"],
Cell[CellGroupData[{
Cell[328322, 6865, 736, 14, 23, "Print"],
Cell[329061, 6881, 739, 14, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[329827, 6899, 1317, 29, 121, "Input"],
Cell[CellGroupData[{
Cell[331169, 6932, 2038, 52, 231, "Input"],
Cell[333210, 6986, 213, 3, 32, "Output"],
Cell[333426, 6991, 212, 3, 32, "Output"],
Cell[333641, 6996, 216, 3, 32, "Output"],
Cell[333860, 7001, 1566, 36, 246, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
