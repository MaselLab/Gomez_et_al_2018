(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    634700,      13904]
NotebookOptionsPosition[    629327,      13734]
NotebookOutlinePosition[    629662,      13749]
CellTagsIndexPosition[    629619,      13746]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Testing", " ", "SystemSolver"}], ",", " ", "SolveDiffEqs"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "popsize", ",", 
       "timestep"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"10", "^", "4"}], ",", "1000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Testing", " ", "system", " ", "solver", " ", "for", " ", "one", " ", 
     "fitness", " ", "class"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"{", 
      RowBox[{"10", "^", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"system", ",", "sol"}], "}"}], "=", 
     RowBox[{"SolveDiffEqs", "[", 
      RowBox[{
      "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
       "genotypeabundances", ",", "genotypes", ",", "timestep"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n1", "[", "t", "]"}], "/.", 
       RowBox[{"sol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "timestep"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<One Fitness Class\>\"", "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Testing", " ", "system", " ", "solver", " ", "for", " ", "three", " ", 
     "fitness", " ", "class"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"10", "^", "4"}], "-", "100", "-", "2000"}], ",", "100", ",", 
       "2000"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"system", ",", "sol"}], "}"}], "=", 
     RowBox[{"SolveDiffEqs", "[", 
      RowBox[{
      "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
       "genotypeabundances", ",", "genotypes", ",", "timestep"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"n1", "[", "t", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"n2", "[", "t", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"n3", "[", "t", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "timestep"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Green", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Three Fitness Classes\>\"", "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.673116177021326*^9, {3.6731262506283484`*^9, 3.6731262862843857`*^9}, {
   3.67319082497758*^9, 3.673190827881064*^9}, {3.673369817430798*^9, 
   3.673369817798792*^9}, {3.673370636607048*^9, 3.673370639086833*^9}, {
   3.673875084876329*^9, 3.673875094436377*^9}, {3.6738753320134993`*^9, 
   3.67387535418959*^9}, {3.673875478229555*^9, 3.6738755316378117`*^9}, {
   3.67387572723071*^9, 3.67387572747853*^9}, {3.67387711551609*^9, 
   3.673877127547649*^9}, {3.673891513192905*^9, 3.6738915138962584`*^9}, {
   3.673891612153204*^9, 3.6738916125368137`*^9}, {3.673894806565002*^9, 
   3.673894808804337*^9}, {3.673900335281618*^9, 3.6739003655206957`*^9}, {
   3.673906789121922*^9, 3.673906791231956*^9}, {3.673907098001443*^9, 
   3.673907102609193*^9}, {3.6739076262353487`*^9, 3.673907627786487*^9}, {
   3.673961208382987*^9, 3.6739612089340363`*^9}, 3.6739879645124283`*^9, {
   3.674301320446027*^9, 3.674301334606099*^9}, 3.674312441383945*^9, {
   3.674312480239259*^9, 3.674312482071232*^9}, {3.674313185438923*^9, 
   3.674313233609013*^9}, 3.674313659839324*^9, {3.674314618543891*^9, 
   3.67431464710362*^9}, {3.674318028991828*^9, 3.674318031639688*^9}, {
   3.6743253495772057`*^9, 3.674325366240168*^9}, {3.6743254528884497`*^9, 
   3.6743254558882217`*^9}, {3.6743256206254377`*^9, 3.674325626960462*^9}, {
   3.674325660048629*^9, 3.674325660216227*^9}, {3.674327687200553*^9, 
   3.67432769173661*^9}, {3.674327780787836*^9, 3.6743277811477337`*^9}, 
   3.674328070705064*^9, {3.674348900689376*^9, 3.6743489009771843`*^9}, {
   3.6743888074271317`*^9, 3.674388807890704*^9}, {3.6743924142403927`*^9, 
   3.674392426616136*^9}, {3.674392550228224*^9, 3.6743925667681837`*^9}, 
   3.674409792551757*^9, {3.674411823871142*^9, 3.674411823982185*^9}, {
   3.674417704740241*^9, 3.67441770746791*^9}, {3.688136265053318*^9, 
   3.6881363206367407`*^9}, {3.688136355476605*^9, 3.688136382884503*^9}, {
   3.688136415044464*^9, 3.688136503788519*^9}, {3.688136651812438*^9, 
   3.6881366520845203`*^9}, {3.688136803020981*^9, 3.6881368239485188`*^9}, 
   3.688136951164887*^9, 3.688137035980901*^9, {3.688137262405142*^9, 
   3.688137263228405*^9}, {3.6885671445534563`*^9, 3.688567145393744*^9}, {
   3.68856733288579*^9, 3.688567375813493*^9}, {3.688567549743102*^9, 
   3.688567640231125*^9}, {3.688567798007579*^9, 3.68856781006532*^9}, {
   3.689363608002809*^9, 3.689363639970355*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/frTHx+3tK92DCDQcdihymaH5ccFyg4w/qrrwY/f
LzCG8yfcavzrUuIC51+e3z57YrIfnO8Wsdu5ViAEzvf8nTTnTkQknN/fqbjv
t1scnG8n6fEw6XwinD/pwM9v5/JS4PyOu2YfpR6mwfkX2c/E2HRkwvl7lr9Z
Y8uUA+e3zGoXOJafB+f7++79JNhZAOfrddSc33C4EM7fdvJ5yi6JYjh/rYlA
S3t6CZxfFlU39cj8Ujj/RduM+JxPZXC+Vt4P6Ra9CjhfLIZlIltrJZxfWHy2
3+dqFZw/z/VOAxN/DZxfIjddSzm5Fs6X2jT92OYFdXC+fn7oG/Yb9XB++cz4
1MdTGuD8/RHbz1YZNcL5MdKpk9zvIvgbij5Kf2tpgvNzly+YF6PYDOfX3V9a
++MUgv/jy9lQn8wWOF9z/pVPjSytcP56H8M3b9Yg+POub7jH79UG5z9MbdPN
+ILg916sK62Y3A7nf7gY2pSl3wHnr7ja9HriDQT/5LZLvoVlnXC+3ewKnjbF
Ljg/W+Rvf81JBJ8hewmPdlo3nP/qyMKnfAI9cL7tn4PbV61D8N1PHPDT8OqF
85dNF3W6/QnBz3Xp1XOb0AfnLxF4K6j8AsG/dcfn63/7fjgfAHgGHMs=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    RowBox[{"{", "\"One Fitness Class\"", "}"}], TraditionalForm],
  PlotRange->{{0, 1000}, {0., 20000.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.688567147093124*^9, 3.688567538925179*^9, {3.688567594030456*^9, 
   3.688567610649428*^9}, 3.6885676416265917`*^9, 3.688691033890149*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJwV13k01V0XB3BRhpKplKl4IhXiyVRk+CqUIUOImyljmWchyb3XdA0XGaJk
aJCkRFJKhvuTqChRSiiKFJVMD5He3/vXWZ+1zj5r7XX23medf1wDDnuws7Gx
Sa5gY/v/Oj61ZGroOatDt3XMY2OjoLOUW1a/pFs3aekmG7c0BT280RTRkk+6
+nV5YdqGFPQ2qk1zlEzrqg5MBKmkUUDJF8JCMQd+i18csdx0FGKc1NHp4nUg
+Mz8GYb2iNK6r/GrWBrjXKnbQxocIXhf8ta8tgw8Iy49Lv/iiDKVxC1s72WQ
edTz5kZBJ7yWO7KGX1gWpW5tFmfdnfCv6Ey/AmM7vgvcKRbkc8aXWaXYE0E7
4ee42fye2jGU91p9+lmsAp/NVrzVZS6QOldtwjengooLzMavLBfkHhGsUTBR
hXti1RmDARfQXnfGec2q4u1797deQq6gdBvJfjJSh0EP/Yl3jCu4X+h6vZna
g2eDd6NDHd3g0Sr/s15fBxdtBmaG93igLz7Z9n2+Dtzer/SdtvWAhcHXxoUf
OtBZdLy286QHtFpKM9TzdSG7LV5eqtYDq4cERN+GA7RRzTp2dU8MDaY8sHym
h8Lwtx1j2seR0Uf9ox+qj8+lRbp5AV64+mtBib1AH/bleTyvMr3wgDvYtZHQ
hy0+P1Cr8cJnddcnGusM4Pp0KfbUghf2ZO3LVKw2wPp3/HarErwxZMKxVWTS
EAImoiF7rvlA+VGc6biPEWqP89pbr/HHgZ6lmLIsI8gFra6SUvGHw3holcdD
I4RvcUmUsPdHgqjHho+rjXHwDuF/+YY/+sIMPvZcN4Zt6JjJtFkAaIqcoQ1f
TGBvFaDpah6I7qLEC5luZpBZ5uzVrg7CBofduonJZriiWif8pi0IdiJfhqOr
zLBp1+41SR+CMJhhKHfirxkaC16f1FgbjG/UVXU6F8yhNvl4rMcrGCuq9cbD
vCywMluoj317CESyG7mlSywhtNXEbfh+KDSDz/VdrLGEXdyLlA+vQmFvEVAh
0mYJulSW98JEKAp5JS34flriYeTvCvo/YZCJjzm3oHUYtddn/5tJCYNSuLbs
y7eHUSwua33MMxyGdg/3nxawxoBJ1woe5Qi8mtvUXLjVGp8igiKsD0fAKSdW
p0nTGtmGX088Do5A+CsDDQ4Pazg9uq4hUhOBUtOXiow6a9S/cdkRvycSXHoj
ojmuNhi2/fsy72AU2nbwT1bUHME3s+K+1IRoWLcF+XW2H8FPt5Kp1hvR+OjZ
8+3n4BFU57wulOuKxvzl/BFlHlt0653RCJA4je2bZd7fd7TF2MVVwr9qTiNJ
SKO1hdMOhmwaOjPfY2C06FrQb0dB942exYCmWNBmv4rk+FKQ2OWzgdITi/qf
gTmHYilATf/GI2OxUPwcw2y4RkGYfOPKVAEqhDrOxxbPUXDQenRxzIWKvsJX
7u7ZR/HBj4cjhJsG3337dk68sEfdm82z0h50XNVqv37lkz3W1Vqcu3yKjkF1
C1nH/+wROL++dc9ZOizknSQ7NzvAasXBP5cb6VBbHyV4288BYVuyNM+Ix2F5
pGo2ZI0j5hW3S1v3xiGd8U/DoqET6DHqe146J0BZX2X0qIMTKi3vSWicSsCb
ZX2+B0Gk+XnkHuUmYHPoCaeIAifIvhlZ2tCZgAqnyuWZX04QP2+wa51OIp6q
aOv+KHAG0jJE9kongSNA4Vhg5DGwXd3lc5s9GTqiB4dcX7jg+WLgFm1RJt5/
KMz8+M4F/dWRyrp7mYgondVz+uwCp8uBD5wcmbijcvkSZcEFHg7PHeZKmNhu
tuxmIe0KLrlcMYZCOtbRa0a1T7oie/2hhkvSGRibkJoQkXSDPW3xxS2jTJxt
Wpjr9HfHr7uxN38QWeC8OyybF+GO391HHOx7sxB1/dkRF5o7bq7e//D1tyy4
nr1YO53jDqdjW5jTgtnY5a4XLvLIHW+y7Fjdx7Lxkosx67LGA/XfmO+3rcjB
WnORmZlrHlhaHTO3zTQXSQPqv8SGPGHkYR5dviYfXVzPHbSSvODx1XA+51ER
6q9NVGiz+yJ1Kjdx0vcy4s4nCrQG+OOoZJuv0f5rMD/0aEqQEYh2pzK9Xw9v
QDEp+sVtIgj2QRTV1by3Udv+xf2BSAguZd/8uzKkGjdVBeISj4dC+8fDSzlt
NQg/GpPTUhQGOVGrHpFPtRhLyHP2nQpH6YrFzubVdZDznxePU4xAaPKxDrEv
D8h5sTKTMz4S64+XfIl6WI+gkI5009dR6G+VHXWxbkChQX8sO380GmJSo49d
aUTo5nNy0m6nwR5wtS4lsAli1eda7xTH4JRzkkv+zyYoBdhMcL09A4sX9PP+
R5txMt/Z41N2LDqelY6W1DcjdJ6NoJyLxUuLsejJR80Itr0k9TI/FhbtW1R0
GpvhKzzyvr4wFlxzbit6m5txLNP7cG5ZLCrmDiovtzbDiBGma1QfizXJSubS
Xc0Qj0wRrfwUC7+c8vpnn5vRaHevI0qZil+scZ1KHhae8j9lk1WjYuGDqfjQ
ahZ6WvtVunZTcXJ6+zohXhbGVNnPb9OmwpiZYxvEx4KQ4CHPngNU3Ng4tW/r
OhY824eXdzpS0aLtLekmwQKfJt+/Q4lU6KWUvdFUZMFB3OPsgQEq/DYfLIkw
Z6HONMV09AMVb/pvCQRZsLAhpoozfpiK2iCxxycsWej6+CeK9YWK6HPjyzZW
LBiW5rppT1HxjP6N2GbLwq5dbaoqXDQkjr9aLnNigfOAfO/mXTS4s9ckbvVj
4XbwL/G5OBoW8juuSCWxQFdauns8kQbJpgC1j6SPTHBavGPQUFLVrVXEYGHJ
QyKunklDWuT+KvEUFg5SDkzQ8mjQcPPS5GOy8EH3Yj1/BQ3+CZ/E+rLI/NYa
Oe7opqGwnBLCX8SC37XiQod/6KiP8PvBXsOCWb0EH4cMHaG7Z0xuk1bsyjt9
XZYO9eBbUo53WfjxO8NhTp6OQxUndt2tZSHQjCqWoU5HIce73051LATPuuQS
JnS07/xDy29gIXy/NFMunA4eWXbem20sxHy4enr+KR12vI7uru/J+zrD2RHU
QcfepRO8X0jLSR2XGH9Bh/gZX0uffhbeHNv+cKCHDuvdgXeCB1jYOVw+zxqk
Q9jg7WD0Bxb6P1eGpE3REdnizH/mEwt7v9V5bRGLg/+N1ze1xlmYn+mwMfWK
w8jXi0I3Flgo4d+nUOcTh2CV+t4Nv1kwlqtll/WPg4Ki3CEa6QvOhZV/g+Og
rNNjZLfIgs5Tf5470eQc3U7JYPvDQlwR/yPRjDhomOvS9rEREDC2lPlSGwdx
PDmZxklgR1HPFHVlPM7nlQubCBH4KPigUJorHnP9fgoVpHPjiowf88Rj/PLV
Gd51BNi9vS9x88ej4N3x8x2k+1TZDqeLxsO/ZlTPRJhA8lP5qgLFeAjqc6nt
ESEwMUsLuGcXD5vDhgf6NhGoNN01MVERj7AZwwCT7WS88eJJl8p4WOozHHJI
cxo95nhTFQ9hjmzBD6SdDCjijbXxuKF1vTtoBwFeHapxZlM8ODUo9dlyBLyV
usrUeuJxyNhy/0sFArJCQR4xi/EIPSWiK7mLQGHv7UF+4wTE5Ky12KpBoHfn
hG6daQIKfCTjjpMWiNtW4mqegKu+ltTrpGn/FrrdtU7AKvsnvQqaBDwZKWNH
yXdIl9K98O9eAkp7Paeuhibg+JzfHiVtAk2F4pxaRQmYrohpX6lHYMgjYeeJ
mQSsmfgutekggYwDpf6f5xKw30rG1py0zo7WymMLCciVNvWkki6YWKVMWU7A
Wqkx/hHSR0Li1Y25E6EykZJVbkTgeWycroJEIuzcV4QrmhC4d4FmObk/ESfT
NgWKmRFI64oJi8hKhNbDe3sYVgSYO6u1x3IS4R20r66KdAZjZJVdXiLWbH4u
1kc6W880d/fFRLzS0qTKWRM4XyV6b640ERKx/IPtpEsza+ZDHyQizTdnnP0I
gQbLb6eChsj4+4emnewITHbZ0LyVkiAZKe9NOBD4G/9bkl85Ce/KY258Ic2n
WfTojmoSVHxLOtc4ElC4NDa/pJEEm591D6xIHw8+FZCun4R/xEYUhkkPCpU4
1FCSEMdry1xwIvO1mlBfpiehrGfnhJALgbLXtPHMt0mozLvGM+tOnifM68Xz
Pgktib6xAh4EqqxzRmMHkkDhezokT/pB97WhgOEksq4z3F1JP+963ntoIgke
ixt9O0lPdmxo4WFjwNLPNPOSJ4E9reUF1G0MxHCJXt57gkB77atDQeEMUC+V
qqn6EDhq1lG8KZIBu4zFSlPSEyNPpttPMfDp3HlhD9ICwo/yt1AZOJS6eCmH
tF3ItZHuFAa+quxomyU9qhR9Wr2Egckb8ibVvgRWXt96c/EZA4MB0mUS/mQ9
XIjgTfgnGafjZNUeBBKQvpkwulUmGfN2T692kOZuzG56LJuMk43gHCLdNXw7
dJVCMuq4+nK5ggi4y33tj1NPRttXpXkr0ow6yk26STJS//3Z+pV0T6+mGTUs
GZwWlj94Qgj4rP+THt2ejFY/QwHJMAKtVT+Nfj5LhuxGjfadpKXMhzlcO5Px
S7MuXIt0D+PJyQPdyWBeiK+kkNb5m+ksNEDu330wP4u0wDdZpbLJZNTLrLFZ
FU6gttGis3tjCnZv+VL2kTSbzxVeec8UUNK3MyIiCJw4xl3w6kQKXonLVMST
fmHjKx/lk4Kabp6Ws6QLoWrcHpiC2TN1rypIa29oSTx+KgXFJ2/5fiQd1fyJ
/UpGCkomXp83iCQwu1F6QeJhCn7czdzMHUXgW0vJCJ9AKgoCeYoCThF4YvDN
miGUirLrVamRpK+0KrdwCKciNS8+mE7auY24NC+aCqfr7bLnSPc8G3Eelk7F
ekNf5QbSja929N3dnYqoJuv3q6PJ/vlY1engnIphk00XC0lrLzXfK7+VChM5
e4mq0wT8/9t0S6QqFftKIkXrSBdORV5JuJOK2kIvgWbSy2O7Ml3vp+KFV9f4
S9INr0u8xVipWB42pEySRiV1U/LrVPQHDgspxhDY56pH91pKhcXz51JXSR9o
azLbbpwG9beVBbQzBOLEmWLPTNNw7YxfE4M0y99+1M88Df38CoMZpLWE507f
sU7DtoFGriLSyq7yN3Wc0xDU0bHuIenNSzlrbELT8Dm2f90U6TklnzZqYRp0
Nzq+to8l58E54X3vp9JQbHXYSZJKgBL+5LvFbBqyngW1yJDmtYnMb/0vDSfc
bWTlSAcLDUxWLaXBVjJ8QJW0btqVoiROJnLbIkWNSb+lqfxRE2NihbzXsxDS
q/0t72foMSHeLLOzhbSffpqiYQYTdXlKZyk0Ap37yoRXZTGxuLE+3on0v3rE
EpHDhM1/U6FupGe0F57qXWAipsLf0I901G6P49qlTEw9X1UbSzpJTrtYtZ6J
lU9+PS0lfUXgu6D0GBOmqbIjP0lz8nMvDH1jgvJUyGaG9Im10h+LvzNx3kGi
eZ60/GrKrc3TTPx9l522gk6gmuOxsdgyE9oNEfNCpBvnCuiC69MR9Pc/ETXS
UrP3vF9uSAetwMhUgzRt+pVlumg6ToV/P6VN2nCSW2qtZDpUqve8NCD9/Gto
PbdcOih/1A8dIa04ln75CfmPcJYKdTtKOmO0PDlBKR1j0xLhTqStPn20W6mW
ju9iDRmepGuGFnWJ3ekovlqf5016w8cN22ia6dhnrnLRn3TE4C4+Pe10+Kts
LQwm3ddvOvtXNx1NfjkXwkn/D8ShcmI=
     "]]}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    RowBox[{"{", "\"Three Fitness Classes\"", "}"}], TraditionalForm],
  PlotRange->{{0, 1000}, {0., 9990.9266230379}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.688567147093124*^9, 3.688567538925179*^9, {3.688567594030456*^9, 
   3.688567610649428*^9}, 3.6885676416265917`*^9, 3.6886910341432123`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Testing", " ", "module", " ", "that", " ", "checks", " ", "for", " ", 
     "new", " ", "mutations"}], ",", " ", "NextMutation"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "100"}], "}"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6885680869932117`*^9, 3.688568107676817*^9}, 
   3.688568396224392*^9, {3.688570127232911*^9, 3.68857015876475*^9}, {
   3.688571131370401*^9, 3.688571169190495*^9}, {3.688571221773478*^9, 
   3.688571272085524*^9}, {3.688571418094035*^9, 3.688571431511201*^9}, {
   3.68857146723342*^9, 3.6885715000956173`*^9}, {3.688571553787676*^9, 
   3.688571578591317*^9}, {3.688571641391821*^9, 3.688571665747957*^9}, {
   3.688572468620905*^9, 3.688572581113586*^9}, {3.688572741271303*^9, 
   3.6885727500421953`*^9}, {3.6893621522663593`*^9, 3.689362155323229*^9}, {
   3.6893636584731092`*^9, 3.6893637340260353`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"system", ",", "sol"}], "}"}], "=", 
   RowBox[{"SolveDiffEqs", "[", 
    RowBox[{
    "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
     "genotypeabundances", ",", "genotypes", ",", "timestep"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.688571283008575*^9, 3.688571414185316*^9}, {
  3.688574277029724*^9, 3.6885742802935257`*^9}, {3.688691106785205*^9, 
  3.688691110146936*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"getNextMutants", "[", "genotypes", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextMutation", "[", 
  RowBox[{
  "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", 
   ",", "U2", ",", "sol", ",", "genotypes", ",", "starttime", ",", 
   "timestep"}], "]"}]}], "Input",
 CellChangeTimes->{{3.688691484052844*^9, 3.688691496476296*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"6", ",", "1"}], "}"}], "}"}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "2"}], "}"}]}], "}"}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "2"}], "}"}]}], "}"}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2"}], "}"}], "}"}], ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6885742953249397`*^9, 3.688574879641499*^9, 3.688687990115136*^9, 
   3.688688048681122*^9, {3.6886881379712067`*^9, 3.6886881650325327`*^9}, 
   3.688688199749318*^9, 3.688688342469342*^9, {3.688688535533622*^9, 
   3.688688555594432*^9}, 3.688688639984653*^9, 3.6886886801226788`*^9, 
   3.688688747968503*^9, 3.6886891912751207`*^9, 3.6886892430878*^9, 
   3.6886892897085533`*^9, 3.6886893290713253`*^9, 3.688689388388866*^9, 
   3.688689593211829*^9, 3.688689661035387*^9, 3.688689742022944*^9, 
   3.688690001384369*^9, 3.6886900638831787`*^9, 3.688690225335659*^9, 
   3.68869063470923*^9, 3.6886908257823563`*^9, 3.688690868799096*^9, {
   3.688690919710621*^9, 3.688690931291325*^9}, 3.688690971830204*^9, 
   3.688691133689797*^9, {3.688691215148739*^9, 3.688691265197378*^9}, 
   3.688691317111124*^9, 3.688691444527104*^9, 3.688691500396583*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"30.94007186481715`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], "}"}], ",", "True", ",", 
   "0.039300574533808606`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6885742953249397`*^9, 3.688574879641499*^9, 3.688687990115136*^9, 
   3.688688048681122*^9, {3.6886881379712067`*^9, 3.6886881650325327`*^9}, 
   3.688688199749318*^9, 3.688688342469342*^9, {3.688688535533622*^9, 
   3.688688555594432*^9}, 3.688688639984653*^9, 3.6886886801226788`*^9, 
   3.688688747968503*^9, 3.6886891912751207`*^9, 3.6886892430878*^9, 
   3.6886892897085533`*^9, 3.6886893290713253`*^9, 3.688689388388866*^9, 
   3.688689593211829*^9, 3.688689661035387*^9, 3.688689742022944*^9, 
   3.688690001384369*^9, 3.6886900638831787`*^9, 3.688690225335659*^9, 
   3.68869063470923*^9, 3.6886908257823563`*^9, 3.688690868799096*^9, {
   3.688690919710621*^9, 3.688690931291325*^9}, 3.688690971830204*^9, 
   3.688691133689797*^9, {3.688691215148739*^9, 3.688691265197378*^9}, 
   3.688691317111124*^9, 3.688691444527104*^9, 3.6886915004355803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "Evolution", " ", "in", " ", "1", " ", "dimension", " ", 
    "for", " ", "first", " ", "trait"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"0", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "50000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fulldata", ",", "verbose", ",", "veryverbose", ",", "exactqv"}], "}"}],
      "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "False", ",", "False", ",", "True"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize", ",", "exactqv"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688695558225275*^9, 3.688695577769321*^9}, {
   3.6886976542927437`*^9, 3.688697703019405*^9}, {3.6886977463208647`*^9, 
   3.688697752537838*^9}, 3.688698185549271*^9, {3.68869821919487*^9, 
   3.688698223223608*^9}, {3.6886986620524282`*^9, 3.6886986629004*^9}, {
   3.6886988603750963`*^9, 3.6886988664805202`*^9}, 3.688698904555194*^9, {
   3.688699337369549*^9, 3.688699342189859*^9}, {3.688699460908698*^9, 
   3.6886994643065567`*^9}, {3.688699585083333*^9, 3.688699591745851*^9}, {
   3.6886999821022263`*^9, 3.688700108974204*^9}, {3.688700161987878*^9, 
   3.688700213709936*^9}, 3.688701092035573*^9, {3.688706294970908*^9, 
   3.688706295860649*^9}, {3.688706362192438*^9, 3.688706363363892*^9}, {
   3.688706394895247*^9, 3.68870639920033*^9}, 3.6887078089313726`*^9, {
   3.689361436747138*^9, 3.68936144590728*^9}, {3.6893617538262377`*^9, 
   3.689361937297886*^9}, {3.6893621616660337`*^9, 3.689362163651622*^9}, {
   3.689362350506291*^9, 3.689362365490233*^9}, {3.68943922549607*^9, 
   3.689439246335281*^9}, {3.689439544831192*^9, 3.689439545345488*^9}, {
   3.689439864781389*^9, 3.689439893403941*^9}, {3.68944115054305*^9, 
   3.689441170445846*^9}, {3.6894413018703547`*^9, 3.6894413035335417`*^9}, {
   3.689441662995769*^9, 3.689441663659277*^9}, {3.689441708964651*^9, 
   3.6894417091735897`*^9}, {3.689441785347884*^9, 3.6894417854585953`*^9}, {
   3.689441816667884*^9, 3.689441816759532*^9}, 3.6894423473370237`*^9, {
   3.68944276885594*^9, 3.689442781637012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "6.1316454519007735`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "76.23330649195812`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.00013117625956647838`"}],
  SequenceForm[
  "Trait 1 q = ", 6.1316454519007735`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 76.23330649195812, 
   " and rate of adaptation ", 0.00013117625956647838`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706308885817*^9, {3.688706373720022*^9, 3.688706400606756*^9}, 
   3.6887064838358917`*^9, 3.688707058890171*^9, 3.68870781352206*^9, 
   3.6887081428506947`*^9, 3.688708211212734*^9, 3.689364900448118*^9, {
   3.689364992686941*^9, 3.6893650141488*^9}, 3.6893695994232492`*^9, 
   3.6894384216835938`*^9, 3.6894392144114733`*^9, 3.6894392482776203`*^9, 
   3.689439408231144*^9, {3.689439533170169*^9, 3.689439546447611*^9}, {
   3.6894398679496813`*^9, 3.689439894092272*^9}, {3.689440463232304*^9, 
   3.6894404791637373`*^9}, {3.689441153646431*^9, 3.689441170826785*^9}, 
   3.689441304963233*^9, 3.689441664628498*^9, 3.689441709837647*^9, {
   3.68944179439715*^9, 3.689441817332264*^9}, 3.689442317148967*^9, 
   3.689442347963339*^9, {3.689442770656332*^9, 3.6894427823349543`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\" No Evolution Regime \"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0"}],
  SequenceForm[
  "Trait 2 q = ", 0, " in ", " No Evolution Regime ", 
   " with expected time scale ", 0, " and rate of adaptation ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706308885817*^9, {3.688706373720022*^9, 3.688706400606756*^9}, 
   3.6887064838358917`*^9, 3.688707058890171*^9, 3.68870781352206*^9, 
   3.6887081428506947`*^9, 3.688708211212734*^9, 3.689364900448118*^9, {
   3.689364992686941*^9, 3.6893650141488*^9}, 3.6893695994232492`*^9, 
   3.6894384216835938`*^9, 3.6894392144114733`*^9, 3.6894392482776203`*^9, 
   3.689439408231144*^9, {3.689439533170169*^9, 3.689439546447611*^9}, {
   3.6894398679496813`*^9, 3.689439894092272*^9}, {3.689440463232304*^9, 
   3.6894404791637373`*^9}, {3.689441153646431*^9, 3.689441170826785*^9}, 
   3.689441304963233*^9, 3.689441664628498*^9, 3.689441709837647*^9, {
   3.68944179439715*^9, 3.689441817332264*^9}, 3.689442317148967*^9, 
   3.689442347963339*^9, {3.689442770656332*^9, 3.6894427823361797`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "7", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-0x10pn4_exp001.m\>\"", ",", "results"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.688697705911489*^9, 3.6886977385901012`*^9}, {
   3.688697851586619*^9, 3.688697881514435*^9}, 3.688699542613991*^9, 
   3.6886996145602417`*^9, {3.688701974370201*^9, 3.6887019797698917`*^9}, {
   3.688706327590456*^9, 3.6887063285022173`*^9}, {3.688706468965032*^9, 
   3.688706478057048*^9}, {3.688707040023732*^9, 3.688707053374549*^9}, {
   3.688707990485836*^9, 3.6887080244590893`*^9}, {3.6887081595099154`*^9, 
   3.688708174075613*^9}, {3.689361633370254*^9, 3.689361662274227*^9}, {
   3.689361981385914*^9, 3.689362020777807*^9}, 3.689362061731192*^9, {
   3.689362102969953*^9, 3.6893621119619417`*^9}, 3.689365058890818*^9, {
   3.689369504882784*^9, 3.689369508802414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "Results", " ", "of", " ", "Simulation"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-0x10pn4_exp001.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meansubload1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean substitutional load = \>\"", ",", "meansubload1"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean q = \>\"", ",", 
      RowBox[{"meansubload1", "/", "\[CapitalDelta]c1"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndLoads", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"timesAndLoads", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Substitutional Load\>\""}], "}"}]}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Substitutional Load vs Time\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.689362387785572*^9, 3.6893624275221453`*^9}, {
   3.689362960161792*^9, 3.6893629607470207`*^9}, 3.6893631365700912`*^9, {
   3.689365268051827*^9, 3.689365270826549*^9}, {3.689369514387765*^9, 
   3.689369515606209*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean substitutional load = \"\>", "\[InvisibleSpace]", 
   "0.05516167419209927`"}],
  SequenceForm["mean substitutional load = ", 0.05516167419209927],
  Editable->False]], "Print",
 CellChangeTimes->{3.689365063882965*^9, 3.6893652714035683`*^9, 
  3.6893696182603283`*^9, 3.689439280636346*^9, 3.6894394217736387`*^9, 
  3.689441189272087*^9, 3.689441679557816*^9, 3.6894417262462*^9, 
  3.689442362282688*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean q = \"\>", "\[InvisibleSpace]", "5.516167419209927`"}],
  SequenceForm["mean q = ", 5.516167419209927],
  Editable->False]], "Print",
 CellChangeTimes->{3.689365063882965*^9, 3.6893652714035683`*^9, 
  3.6893696182603283`*^9, 3.689439280636346*^9, 3.6894394217736387`*^9, 
  3.689441189272087*^9, 3.689441679557816*^9, 3.6894417262462*^9, 
  3.689442362283293*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1V3k8lF0bHksLyVqKiqFSSqWFRNx3eiuiopJoIVJv3ixJFMrQokLSbstU
tpl5ZkERKZMlyhKRNYw12pCiIn3nffnmn/ldv+u6r+s8z3POfc7RcPLY7iJO
o9EOitFo//7//4eBCzid4ffgmaFubQznOzCO5TPoD5KgY8Wh0XAMRCHzs9iF
kAR4d3ud/chfl1Dkv0ltwjwWnN6ptuleUjgyIxcVRTyjYMwsAh2DqtYsYXAg
syjsU7PZVRQKT/x5YMqHmZ9u+vOGr6OjaVmH9zAbwv7Rt1Z5fxNF+cVZ2r1s
WMcy6jSrvoP0I+e1rOW5oH4+rn92WDTSu5VSRy34oNOpVf5JMhbp+UrMYE3+
eF48MmzKz02OToEf9UZxI1bxyHzjdSspjgv+oTky848zkZ4tpBXd50HHx907
2H/uIe3Kdce2oxS8mBJ4cj/zPuL8sBUhv3hwUjLRZHr7AxSZXKoKjeACLpwa
tFA+EYWvWMp/oil4F3lyhfqXJBTZrJ87PI01lu+ZjLTY3orG3GRIuGFfvn9+
CtKbvYI363PgZ4D/70clKcgs/mET3MsD3eNBtsrBLGSerjwlkk8FFWeDwrqn
bKxI9q0rniiAt7GfrOdFUEgLvba0flMKbF52PdTgGhfR2eahWxgbxP57Xj6K
JhT5Sg0nw8nJFTZUPB/x3aO6JhMKOp4cVn5ZI0DH8x0T5UJSwCrPS3zHSCqK
HkOiXXMy0CdsTrJ/nobMtYJlslps8Khp3NQQko6ON6fGm1Ns+G9OXExHWmeF
RASHDYOvC74aaT9EYSP6u11ig02JzxmFzoeIqv5nXm3lgGvP8Y0hzpko3DXF
/bBv0tj4PAkOsKqSsU6CwDDpSe2Gj5FxWid7ShcLXAw3vVdvINgyOFbTgQeL
2JzmDTuz0PHTiPXZ6QKQlXbV370iG+m+vszJ21ggVxm/b8KPbBQaGny3kOCM
+e9+gozCaHq5Dgv+sXK8LSkkODBpsNmQgu7p/MpW1xzEvTanIuMoCPDrKOs0
f4r0xODlssEsMKraCfkDBDt0J5dlciBjAtPq97Nn6Hi6eM7wDQ5U1QXWnl+Z
izSLD4Xmx7nj7zsXGeu/0nvncKFsytuVG3NyUaT9QX6NOB9a1PXmfh3IRcH2
e1FR5qlwa+c2hQgTIWLdbnfdWgFIhaSF6kUJkbbi9lr372ywLbZtidR+jvSL
Fi4fxNlgGGReSvd9jo4PBgce/xpfPzeeo1DJdsHugxxwvO2orCWXh/RlCVf0
TZNhT+HVbPUzeYhGYh9C37AgNNU9o+VrHgqXuRiPrqQgXjtglKeRj472/ulT
dbkgocJV/uyfj4wsbamqO+Pv72I+MpNVnuvPIOvT5Lc3dYPonxj8Dk3nQ3pd
Qb5eYz4KbVXFX74WgOE2xqLnygVIU2Ta1A3wQcvP0ObUgQKkK2W65f5mgzd9
KFcxjuCPE9OcPnLBUOm35+XqAqyYLF3U7yqAwt9hWr1KhcjoVW/wUxeM5QcU
Ir20OMtucwI0RU8SmT0g+OndyMV6yWARvjPBjfYCMbnAfv5vFgzUKW2Onf0C
mbPEv+a94EHhhWC3jYdfoGd3jEX1PQH4cpUd0l69QKH797OrdrBBwoljkTGx
COmmWyRLMzjgZ9Ty16TDRei4dxat7AA1Pj+LUPQ9VCqsmgNsZy8jzfIiFPbN
atsUx4JtG6b/1SxfjIzI+d27V3Mg6Ny1malmxejoZfXQLZwH9uyUwcS4YhTG
7JDpKODBpjTViPl/iP4QGPi0sUCkxzYedHqJjg4RpdfNx9/3wZdIP4QFpsgB
xo0fBbeCXyJqq33ecoUHxqZv/vbIJfzK+y/b2/lQnztAq5zwChlVM+4fVxRA
xM3+23JHCe7Rjh99zIb1LXJJbOoVOm503OB6k4ImGVUjlngJihR8fMx4HFh7
cUHNgZUlyBR8d+i+wRtfLyUo3HNmdPILCuT/klyw8h+ihyCBk4kA+vqOTWZk
laDjLwe//mAu5Kr3S+eIlZJ+UaETqkzBg6IviW4HSxFztcV1f5H5u+nchXs9
pciInfbLlfSf/+arZRkyLiW8/pabAIMa4rut7MvQcfvNmcYJLMhrudoak1+G
oonO6xdNosDdpyzks2I5Mqea4mdLNrRm8e5GOZcjw4W7rL6E+H/cP72YW44i
pT0rxb150D/aJxgdIfo7WQsnSvDG+/1rpIcqnKafTgI1I7+bwaEEl97zfJaa
AkmHpIeyf71GUb/z222ubHAO6PxTJVGBIvmQ7ZnGfEjIsduur1GB9N7IHGnT
VAiJO7mxVKsCGc7X3NZcSofmq3+M326uQFrOhtKQcAH8+fcXRfgSoyH+mXug
ILZuq+4jwv9p07aQSQTX4u2r83sqEM1rf5mfZkFAls6MK9MqkWYp8GiR4oKR
zqQ6a51KZHiFNnHJ/Pn79BKpkHWEr1gxUP6cD4UnnO1t91Yi88rshL288bzr
lSiUVKRdKrkPIQ0qX9YlkPozwX5BPxMh6Jf3yGBNJWLDvMoDGixQSZ5QeEPy
DQova4XOEqfg+HDddnfjN4jCr6obp7LAcmj24yEXgr/47WSSfvOff/gbZATX
x9r9ToYcP1VNlxSCOd6yH5TYcLTcq9qzjegNKw66HGXB9xPt7b4qVSjU99kT
GsAGxbmfR8/PqUIar6xG34AP30aWzorZSPCsL8a1j/hg7hUk1eBehagsZbae
rK//8kKqkHFj+MyM5ESwi/n4avAG4RcEph30YcG3YW2LuHzC72O09SpxIG7a
rcrDtcTPPONklhwPkjz7rkn0kPwency+CAFM13x8Q6hWjTTKI1+8kAurddkF
F52rEWW7TvUbpozlBVWjsPU9q9siCTamBq5yiiT6vuH97ZvZ4DnxTW0Mi/AS
HekvWVzwcvbeu+Y14T9vuKv0hgc65jMcv9dXo+MUc/NMmVQYrruRwu2tRsaz
SVsrdVNhSYKSgYbcW0Sxn8uzfHmwpE6NmbmPYFWaZJRlytj8DHiLDFXFvtfJ
SRDWtYfx9823KMwOy2nYwoYS8ci8lXUE77WsVnnDhjWm8iEbaTWk/7QqZGpQ
YCjhlJ+kWYM4KcKxrooCjVAqQtuyBmnn1CeWD7OgZOjg1PlehN/CXef5aby/
+JB6zav1W+9x4Ojea03HKKJ//DX1J58DKhmei3JqCD5ow5Pfw4ECF/987e9E
f2hryTZ7LmgFrHNX+VWD9CGNRL0RAWTdZB45O6MWsfPA4cC9qZBk9L5nklYt
MkQSak4L0sAL0/d9M6tF2pkHIaGz+ZC4/IeHx9FaFNZdeODexx4/DxE+evHt
EhM2KHhueWjKJLgnw/9rJQtuR7cukhUSfGHxD+EaLlSEDRdNf0fq9Twvna7i
w0TTy8uHhgmuDFYareND6nLTl5M06xDrP+SFzKLA9ZI8v2UzwdYXp8Yrjs+v
I3VIs8r6LE1PgeuuugsHQ+qQ8aK4RQRsOC4t43LgHtGHti6LaaJg4db1isOV
hC9v8B+Zz4Obq8s6FHvrUMgflO7g8GDuvJ9uYqr1iLxViksG2SDfxllCX0Hw
u3PTNiVx4bzNZ8XiPfXkebtWdDXyxvKd65GxIdnM7SUXXs97l3E4kOgjRUND
3zmQrjHNZHlKPdKWxCqFSLEht37VshkVBKv05Ox7yIXZZhNL5g8QXKn2QCWT
B4xdOomxCg1IS5edGeDABe2QfdRi7QZkeNy8FyUYz9tH+BcXDD8FJ8MyTYaB
pAvhF5Qv0e7igN32zcwlNwleF7v+jiQFl9WGClqFBNPEhqTYbJD2OsRe09CA
QhPPhksMHvgdWXnHYYD4hfw+/+g52W+mbx9eKtOItMbZMjYOAsi845P7Tb0R
hQu0Xzy+JYCq9sp8o1WNyHQsfFKfkgpNd5WXT9tB9DKvbLb3j/cv20byfTLP
secKIL7LS63Qk9Rfjmv8R0hB6IwdqgYPid7B/qt5fwqUG2y2+KuC6H/O2Ht/
gA3TtOaazB1qRMbas4s/faFAHONiTBe8Q0ZL84Y/fhRMqnCCDN13KGySOpHR
y4cuu6DRzk3vkK4wy13KeTzf+h3pzzqewTv4YGqmoPXl4DvEZR7KbyVSoTJG
vVAjnuA916UjvJLBf0Z3kVwVwZdNJB8Ws2COs/Vm6w8kz3OHbvhxHtR36zZG
zmlCoe7mczvcuLBRi75xzYYmxJdrG+sUuGN5FoQ/+YXFn0CBkbTHxZd+BGta
x8rLsqB30ZFnzPgmZFyefnLIkwN6sREhhk9Jffniz5zbPDg4U2rp5A7C7zmy
47cYDyDh1arhX6T+qJq/MIsLzUdWOBxRaUaaZLPPxz4uDMctnjFs0ozCNwlf
k89yx9bbxmZkUJ9Fp0c4oNqdZ2F+gPDfjvuZruWA7RFfq6XxBEc477eaS863
jgVNBx8QfeU8vxP1fNDe7X2m/Wkz+V6TR/oUU0Fii2jLt3aSd2H2D7O6/9/n
WpCRU3/gk9gDuHJ489NA0xYUXipdJUlLAQNO/anmMILfn/Z6SqVAyZQip9oq
gsN35am1JkPMdAWjw59bkJa3wKFKiwPap07kbZogQmF0d619EQ/U1s/O1Jsm
QpqtaqN71Pj5cI6I7D90u+3zKZibrbWznS5ChqSel8sWHkwQl1zcrkv4LgPh
lR8U7PI/32nzF+HXuPg3lHBhy5byTU/sCPYPmzVA5rtEpHuMnTfRZxrHW5P7
kXDX+7nH/EneOtlFduV8EMuMutBzmeiPNBm8Xscfu/9EE/2Wc7yj+ixon7Fq
Ut1dwiv/0nu6moJnfUYB4mlk/HaR1V3kfnSJnjlv0VPiF1phcPsnFwLjGixy
yol+2uvOv0v4sExFtmVakwjpqz5dDJggAEcH8fygL8TfpCrcLYKCvQUWUekS
rSicO3Jf2ooDEv/mz2hF7Km04wWngP7U43uWqhLswf8Wq8wFC70N24KXtiJN
bap3Yy4FOsPzDC0tSb3z8Cf9BnJelv6639aO6Pvnd73Np8DHb0FptCvRhyea
0e/wIPvq9Oo/wa3IMEuYpFnPgSa3lfmu4UTfPrqT30iNPf8N4nfFTWyUfK/P
fFq7KZfUx0VNnbOLguVFPyO8Mok+kF+4+AMPvLJ3lz8pIrxiz62zpH8Wxmcb
aJe3oqis7Nv5JgE0FxaHqHcQ3tlOY081DzJmZaj1/yL1f6rD8sn+s3X9Vnlr
2TYUuj3xFfNijz2/AsFvsnbs57Og+olY3F79NqTFBHY4ybPgABUj+3wrwekR
WkHfWTDx0InUQ0eIvk7+Q9Z1NtyOldl26AzB9sMrGl2pMb8rbYhPAzzXU8nw
gpo0TYLZhozQ+2e2bST3R2Pe8xuphI8etJCM5sDV3cNhNnmkflZXsPo8LgS1
aaY8rCd6n9wDH6woKD2X/xN/EbypKKv0MgtWzFliFTOpHfFUzfXRNu7Y+5tC
sE317H1BXPh28PLIM4V2Mt+mnFhzWQAVxszYXuV2FCWL8TP102BrtJTopHY7
MoTCyhceAuCc73iStrodhaU1Ko2fSL+roZ3QOUD8JPZH1uikQP+RDWlRboS/
33vXO50DD7iqyoLThN9W5nfgzvh5/yLxs4w4ZveQAg+RZkpjKMk7E51ksEsA
4RrBnTPjSP2WeQrvPlAgrV9oUCcg+quJ++2FHKhpq/d1KiXjFWqZTCb30eRv
eTPo9e3oOFigvktKAHLqh2h23aTeQWaHRAJ/LG9CBzL8mNbOaQmwcu7WqRsm
dqDwAFZ73CLnlYzBpsCZHYj2W39emELuHy8OLcyeS/T7ZP9EneTDP7tmZdeu
7UCa2NsLG8l5Jyjds87JheB37/J1TcbvF8HEj/fRVqUxAY71aE5YEkLq13j0
b8sh51vFpKKcuwQPKy3VyeGAoGyvsdwTojfc1bT0LgtyXHVamktJ/swoQcxp
Crom6/bde0/07BGXTylsiBrQW2L4neTF4k81x/H9dZToM/TFv5D1sz7vsvzA
1E4URh0r+yFFwW17WuSp2Z1IKzJUDjlBgVO94jyONuFXzZmlRPrHsfqfTh1A
8Eu9TJ9LZL01ztz2w7oTGVsN3vOz2JB+Z15t/aFORJan98WlFNiZz4/I8CZ+
tisisurH8/2J/vkR57Q+CqY2ibWeCSb61T7zNnP4EH4w++XMcKLfkvCsjHyP
1nO/DK9Gk7wd/eqJ28j+3Xp0enpiJ9JLeq/99VEAxi1e8jpPCR8x9XmULxt+
9/D2rfpC/NPY2QOKyTD6b94P4vfmzGzbrEQIeMCwkpTqQobs32GLyfezVDnt
0jyzC2kPC+bImnLh0skiN296FzJT7+xjHhLA7bLseQ3aXYhRy5mmkanws1Y8
e44B4e9WL9tFzsuWg3oyPVZdZP9k0g7vYoFcgW3ZdBfiZ1XoPvkgB5Q4cuGM
46T+aM+iP4+4Y+M58a/f+Q18Yy5kdckxNc+R+lXL1+z25ZP750P3nGtkfN8u
DPCVBGD1JX49PYn43fzSszaeA/Wrw43u5BC+/MRZ1xscWHivPc7vA/HL6JDL
oSeO+X8l/L2Yzodkvto6uUnby7xHxseob+5TWGD83NM3T+c90noFrxjAglUO
/ywWGr1HlBnpfrSM9IcEqbfUTqIfev5VNYiC8LC2Fo0jBBuZ5bqWUmP+HgTX
bCor38CBr9eoyZzzxC/2p6XwKhvMX2jLMK7/y6fU913hgEfQwKN4FsEntc/6
7eRCjUyXT+Yrknd+Mo5eTwFec8Pu8vcE6959GJ/Pgt//+n8ifkXbnKabsUDJ
23F9z2eCtRtm3zXmgV57VUupWDfSDrVv8ZETQIt+nuoc2W5kVNhbXb3Gh9mm
FwxSNAi/8luaooANT+ozqkT6hFcP3ukUS0GUM6/7iSXhr9dUSqexoV37mPrr
PYTXn7u924UDw/+dtwnP2BcVaJYM/wOZS8NQ
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Substitutional Load\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Substitutional Load vs Time\"", TraditionalForm],
  PlotRange->{{0, 49999.99999999996}, {0, 0.07631262707799458}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.689365063962816*^9, 3.689365271439526*^9, 
  3.689369618309936*^9, 3.68943928070325*^9, 3.689439421821747*^9, 
  3.689441189305902*^9, 3.689441679607223*^9, 3.6894417262927237`*^9, 
  3.689442362316777*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "Evolution", " ", "in", " ", "1", " ", "dimension", " ", 
    "for", " ", "second", " ", "trait"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"0", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "50000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fulldata", ",", "verbose", ",", "veryverbose", ",", "exactqv"}], "}"}],
      "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "False", ",", "False", ",", "True"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize", ",", "exactqv"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688707875533177*^9, 3.688707891207817*^9}, 
   3.6893614551487303`*^9, {3.6893622768661118`*^9, 3.689362328107135*^9}, {
   3.689362372346081*^9, 3.689362373179264*^9}, {3.689433938241619*^9, 
   3.6894339734483967`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\" No Evolution Regime \"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0"}],
  SequenceForm[
  "Trait 1 q = ", 0, " in ", " No Evolution Regime ", 
   " with expected time scale ", 0, " and rate of adaptation ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.688707898052257*^9, 3.6887082459985228`*^9, 
  3.689365091307961*^9, 3.689369624710877*^9, 3.689433978696611*^9, 
  3.689434238159536*^9, 3.6894345069926043`*^9, 3.689442380182383*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "4.7114321304534466`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "71.37834103274726`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.0002801970417163985`"}],
  SequenceForm[
  "Trait 2 q = ", 4.7114321304534466`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 71.37834103274726, 
   " and rate of adaptation ", 0.0002801970417163985],
  Editable->False]], "Print",
 CellChangeTimes->{3.688707898052257*^9, 3.6887082459985228`*^9, 
  3.689365091307961*^9, 3.689369624710877*^9, 3.689433978696611*^9, 
  3.689434238159536*^9, 3.6894345069926043`*^9, 3.6894423801834087`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "7", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
0x10pn4_U2-1x10pn4_exp002.m\>\"", ",", "results"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.688708075250152*^9, 3.6887080944918413`*^9}, {
  3.6887081873013563`*^9, 3.6887081920608463`*^9}, {3.689362470817972*^9, 
  3.689362536737473*^9}, {3.689369531035686*^9, 3.689369534930915*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "Results", " ", "of", " ", "Simulation"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
0x10pn4_U2-1x10pn4_exp002.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meansubload2", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean substitutional load = \>\"", ",", "meansubload2"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean q = \>\"", ",", 
      RowBox[{"meansubload2", "/", "\[CapitalDelta]c2"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndLoads", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"timesAndLoads", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Substitutional Load\>\""}], "}"}]}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Substitutional Load vs Time\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.689362644994102*^9, 3.689362654906098*^9}, {
   3.68936285575425*^9, 3.689362856194236*^9}, {3.689362954609708*^9, 
   3.689362955139308*^9}, 3.68936312921129*^9, {3.689365276011771*^9, 
   3.689365278474298*^9}, {3.68936953830833*^9, 3.689369539730855*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean substitutional load = \"\>", "\[InvisibleSpace]", 
   "0.07982278189337134`"}],
  SequenceForm["mean substitutional load = ", 0.07982278189337134],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.689365117186619*^9, 3.689365279631941*^9, 3.689369647908626*^9, {
   3.689442403985321*^9, 3.689442415900317*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean q = \"\>", "\[InvisibleSpace]", "3.991139094668567`"}],
  SequenceForm["mean q = ", 3.991139094668567],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.689365117186619*^9, 3.689365279631941*^9, 3.689369647908626*^9, {
   3.689442403985321*^9, 3.689442415901436*^9}}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Substitutional Load\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Substitutional Load vs Time\"", TraditionalForm],
  PlotRange->{{0, 50000.}, {0, 0.10971023971879212`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6893651172228203`*^9, 3.6893652796700487`*^9, 3.689369647946554*^9, {
   3.689442404043273*^9, 3.689442415938428*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "evolution", " ", "in", " ", "2", " ", "dimensions", " ", 
    "and", " ", "store", " ", "only", " ", "summary", " ", "data"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "20000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fulldata", ",", "verbose", ",", "veryverbose", ",", "exactqv"}], "}"}],
      "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "False", ",", "False", ",", "True"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize", ",", "exactqv"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688706416860038*^9, 3.688706427095549*^9}, {
   3.688707260061904*^9, 3.6887072765813293`*^9}, {3.688707489173719*^9, 
   3.688707625099484*^9}, {3.688707779784658*^9, 3.688707783529849*^9}, 
   3.6893614644684067`*^9, {3.689362610674225*^9, 3.6893626289131813`*^9}, {
   3.689362730546171*^9, 3.689362757722989*^9}, 3.689362788915221*^9, {
   3.689364283857853*^9, 3.6893642873462553`*^9}, {3.689437855253817*^9, 
   3.689437857165689*^9}, {3.689442428872293*^9, 3.6894424477831497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "6.1316454519007735`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "76.23330649195812`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.00013117625956647838`"}],
  SequenceForm[
  "Trait 1 q = ", 6.1316454519007735`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 76.23330649195812, 
   " and rate of adaptation ", 0.00013117625956647838`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706514208481*^9, 3.688707088858027*^9, 3.6887078246012163`*^9, {
   3.688708284918737*^9, 3.688708297894167*^9}, 3.688739537902643*^9, 
   3.6887515120228767`*^9, 3.689365150275324*^9, 3.6893669339904947`*^9, 
   3.6893673159580393`*^9, 3.689367552762413*^9, 3.689369653995016*^9, 
   3.6894378667610283`*^9, 3.689437898672626*^9, {3.689442441579421*^9, 
   3.689442448468411*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "4.7114321304534466`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "71.37834103274726`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.0002801970417163985`"}],
  SequenceForm[
  "Trait 2 q = ", 4.7114321304534466`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 71.37834103274726, 
   " and rate of adaptation ", 0.0002801970417163985],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.688706514208481*^9, 3.688707088858027*^9, 3.6887078246012163`*^9, {
   3.688708284918737*^9, 3.688708297894167*^9}, 3.688739537902643*^9, 
   3.6887515120228767`*^9, 3.689365150275324*^9, 3.6893669339904947`*^9, 
   3.6893673159580393`*^9, 3.689367552762413*^9, 3.689369653995016*^9, 
   3.6894378667610283`*^9, 3.689437898672626*^9, {3.689442441579421*^9, 
   3.689442448469481*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "7", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp003.m\>\"", ",", "results"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.688706457306293*^9, 3.688706463986483*^9}, {
   3.688706573486517*^9, 3.688706646883993*^9}, {3.688706687264188*^9, 
   3.688706757336728*^9}, 3.688707012267789*^9, {3.688708106608053*^9, 
   3.688708124675424*^9}, {3.688751531707631*^9, 3.688751581171226*^9}, {
   3.68875173576383*^9, 3.6887517483953114`*^9}, {3.6887518687800903`*^9, 
   3.6887519014915733`*^9}, {3.6887520188917027`*^9, 
   3.6887520255954113`*^9}, {3.689362798633952*^9, 3.689362817843029*^9}, {
   3.689362892234837*^9, 3.689362900849856*^9}, {3.6893695489001427`*^9, 
   3.6893695537466297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "Results", " ", "of", " ", "Simulation"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp003.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meansubload", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndLoads", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndMean1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndMean2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndVar1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndVar2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesAndCov", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mean2mean", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"results", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", "\[CapitalDelta]c1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"results", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "/", "\[CapitalDelta]c2"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noseTravel", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "12", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<mean substitution load = \>\"", ",", "meansubload"}], "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"timesAndLoads", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Substitutional Load\>\""}], "}"}]}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Substitutional Load vs Time\>\""}]}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"timesAndMean1", ",", "timesAndMean2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<mean trait 1\>\"", ",", "\"\<mean trait 2\>\""}], "}"}]}],
      ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<mean fitness\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<mean fitness vs Time\>\""}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"timesAndVar1", ",", "timesAndVar2", ",", "timesAndCov"}], 
      "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<variance trait 1\>\"", ",", "\"\<variance trait 2\>\"", ",", 
        "\"\<covariance\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Variances\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Variances vs Time\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "timesAndCov", "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Black", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<variance trait 1\>\"", ",", "\"\<variance trait 2\>\"", ",", 
        "\"\<covariance\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Variances\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Variances vs Time\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mean2mean", ",", "noseTravel"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<distr mean\>\"", ",", "\"\<distr nose\>\""}], "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<trait 1\>\"", ",", "\"\<trait 2\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<evolution of traits vs time\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.688708451049461*^9, 3.6887086300771112`*^9}, {
  3.688708703200172*^9, 3.688708745911834*^9}, {3.688740484840589*^9, 
  3.688740523919965*^9}, {3.688740622104692*^9, 3.6887406970010777`*^9}, {
  3.688740794072215*^9, 3.688740802560251*^9}, {3.6887411375934963`*^9, 
  3.688741222992558*^9}, {3.688741696666604*^9, 3.6887416989377317`*^9}, {
  3.688741732417933*^9, 3.6887417360820217`*^9}, {3.689362822378406*^9, 
  3.689362851274207*^9}, {3.689362916706655*^9, 3.689362946793866*^9}, {
  3.689363041426571*^9, 3.689363115668157*^9}, {3.68936318781952*^9, 
  3.689363493679721*^9}, {3.68936528790909*^9, 3.68936530818753*^9}, {
  3.689367023414147*^9, 3.689367053200871*^9}, {3.689367418173017*^9, 
  3.689367419284339*^9}, {3.689367798141247*^9, 3.689367808976677*^9}, {
  3.6893695593020678`*^9, 3.689369570757266*^9}, {3.6894319059560003`*^9, 
  3.6894319224896917`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean substitution load = \"\>", "\[InvisibleSpace]", 
   "0.07795443798380125`"}],
  SequenceForm["mean substitution load = ", 0.07795443798380125],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.689365242268652*^9, 3.6893653087392693`*^9, 3.689366782401513*^9, 
   3.689366866514913*^9, {3.68936702838268*^9, 3.689367056626916*^9}, 
   3.689367422514751*^9, 3.689367904396324*^9, 3.6893697503541727`*^9, 
   3.689431929613267*^9, 3.6894320132493753`*^9, 3.689442568983924*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
HCgu3qo8EIHP03r/aexxDugkTdPanID+/DlH2OfZoCpx+HhgEtbruNWb+4AL
s8X70m1zUL9CFGsreEDdX+HpyML61z03167F/k/lqtFNAeaPOTiucIoLNT8Y
Sf1lGF+yIX5GNg8OW9+MfFaD8VsXlKh0caHFI/ulzluMNy+Sn8TmgaIPxfem
6N/zBU9M3sgDdYexNRM9qNd+3Pf3CBdenFFV8RhGnhH2rOMDD5IlzqTt+4b1
3KTmVuvmQ6L+GgvvX/g8Us33D+QI4M8VXkb4X/RHhej9ieTDRjPD5OdT6wn9
zJeNVivzITmoZPFXZIqRx0PVZfng8dbkupEscvCFSv14vO/Tps2MU0SulFF+
flsA8yK2jL7ZjfGdB6QjXvCBtbHc/IMF6nOvu/vOwfP1s/0Uh0P1hOoq88Vo
JReeB89eY+OMXMLo3recB0XrLxhJ+yJ3SX679YwLY4pOhcWJ9YQMBT74GMcE
xktiUE6vJ6K3iV8NjvEgbcMhxsdk1OlTHqQQHgzHOf5MTqknQqU9srPn8qA0
+8VGF149od2VDm4fYoNr3r67vch043ieST8bdGZM7lfowfUd3bNQ9TwTcrpu
Hdk4gPl0xPaH+LFhPcgk836iftAiSyWdBVtoIhvluc8JLdhmydVc7IdPHj6h
s/Y5oQRQE70e5kDrK53r59ahvrFwXex+Joj/93vbcyIMkHtjlMqAKvbckrSt
yKf5w9/PMuCYXVth0M7nhFzRX5MWxYKCXUMWojMY39b9y60/DzQYer8jz6Pf
1HP8vT0LttpleW4MRP9T895TeB6XPox5dBNZ+HZjXl0eE1w/+M7rjMf4YkFW
PfbjJnF3V67JQv1FuaFBDhOWrcnTCUSmNBxnH9LnQO2+PxMTucgfbLe7/WZD
39im5q5K9Etato/hfCj0eHk66QPWG2H55uqz4OFPh2LtEeQtp0/FpjFATTbX
weAH1uOs32L0iQWU9i8rBsQaCDG49mZRBhu+Whz2LZZrIMINlHV+q5hgoPz9
1NKlDYTWf8B/tj4DaJWDqQ8VUGeIvUs9xoL1zzWt3FUacF41POQ9lwkyI9V6
t1ejn+O+lheE/YDPglNjG/7Fx+Tua8yDYdvu1336yLwKpYWNudC8UtL71GbM
d/EW5TnOx7LSpTJCQ1zPNTWn3HtseHJsW5jaUdTvbjovboyft9X1ZgYyufo2
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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Substitutional Load\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotLabel->FormBox["\"Substitutional Load vs Time\"", TraditionalForm],
  PlotRange->{{0, 20000.000000000004`}, {0, 0.11073484584497595`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127904316*^9, 3.689365242305155*^9, 3.689365308784734*^9, 
   3.689366782447113*^9, 3.689366866553609*^9, {3.6893670284222116`*^9, 
   3.689367056661128*^9}, 3.689367422556012*^9, 3.689367904432624*^9, 
   3.6893697503897142`*^9, 3.689431929813932*^9, 3.689432013406114*^9, 
   3.689442569026327*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1: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
VMOy/9SHRS2eeJ+qq/iqGv6Y3J4ssqxFE1uD/PHhajA50C6tc7kW+ef39qdN
VkP49BOTIz61uMk80/DYn2r4sUjDrSKe6C9JOa20tgZEtfbPO5XUoqOFUuie
3TVgPx20LLqjFm13RWXftquBrosvUjMGazFCf/vW6pAa4HMUKfF+UYvW62LV
pMNr4K8ek5szX4vbi9uXJQvVQmEzt9CEpw7361+U0ZerBe1lDud4NtWhz3vF
QIvmWrCx4Tv1XbEOk+IifR//qoX1e/d29+2sw7eK1Xb2S+sg+9ZZpauH6nCd
e+9wqUUdXPv2JbTTtQ7/Kn/+bvy6Dn7+PVdTGF6HJ/jWRd01qIcgtzxn1ag6
3DB4orzOqh5+7vPk90uoQ+slX7999auHUvrGktjMOtQb7Mp+WlQPHml9qdeK
69DNcfjn6HA9uIzLPZaprsPpcwY2AfP1wB9+mPe3VD2G7ogwrbpZD8k27Y/P
b63Hta9XDy81rQeRaqt9KxTrscS2bOUV1XoIplvMqlvVIyX/mZ/0gzpw3xhh
Lutdj8K9JncqL9dBcsD5/cr59fiYLzbWzLYOqvxrhw0L6nFRc7XpdcIbmyot
w2vq0b/NWGHGrg6ecbbLUBvrccgv1HL0fB20hNMy7v6px+nKt48dPerAt+DS
J6+VDbg9WPzHl5t10NYfnecr04Cq+QUrrtyqAxqlSoGt0YAHz4nP8noR+RM6
mvCIeKbwezBXo32tDm5t6zYz8G/A6TvTwqvN6wBbyVIPExqwSvBiFtWkDkQ7
l4nu/NuAu+TeT4u/qgMPERfNWsVG/OaWc4DsWA+NvckTC4QDVUhpFpfqge+/
zzuNKLA6vT83rR5KDjouqT7YiNZ/q5W5BfWgIqT2ccnlRrxRQLWv5m+AZ6tM
7H24jRjLUz5lVtcA/kylkr1/G3F2XY4ffGsAhS1UgUsrmtDM30qXd00jnBuf
LKTsasJvgiaPhR40goKuOcdldxOuH7oteDq5EU6skTqUTfiI6mBKQEojvLkX
XsFRa0JqpOVQSF4jWFn9Ul11oAn9i5JHT79uhJS/+rVZJk04FLrFnivTBDWl
NvEzFk2YL7R/f7NqEyw9Od1z3aUJyd37vzi6NgF5umNU8HYT8vC/tufENMGh
f5YuqfeacFyrOc/uWRMk3p9a5RvVhDlUOf5xahP4zjz5y4hvwgIBo5d3XzdB
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
7UTEu7RSyuhjO3TK6QZNurThSoOKKfXpdpB2PxN+824bhjsbiHwi8nEofj4l
JLINLTIGNwxKM+AO78Q3+8w2FLLoUDiszwDqRH6e4NM27KrWMHI4xACjtfIn
3xJes7qA78YRBpxSYWi/eka0V0q6M04y4E3WTyvxljaU06/TyslnwCVD9YYB
ahu687rz/qphEOfljxc92tuw3XSDCl87A3azj3hbfmlDs4XIMMGdHUAf/VnS
8KsNq6SdU+/t74BBpUPjZotoWJ5V+KBNtwNGchZ+Gy6m4RLjc0fND3TA6JCr
bctuGiocsT79ULUDfI+em5hQo+Gua34HR4h4XzNr16ho01DgWX6QmkIH3F4p
PniMcARNmXaMcPSCZ02CJQ3Z/idOHBPugNWlL6IMbWmYgzMlESs7/u98SsSX
32P25x8Dhga7E1feoqHj9rgXEr8Z4J46rZB3h4ZbNLUmrX4y4GuIjn9NAA0n
1TbP35llACNtvsE4ioZrP2odfT7DAK1Hb0pV4mk4VZylTZ5mgNecdtGRDBpa
cFlLzxPt3o/NKvXJNNQZ1nZfNccAoTPmBvaNxPgn7pu//8UA1ufvJzRaaRhz
r3RfFTH+Jlvdnb3tNLQu0n9xe54BxTyTBsadNOzbpikfTPjzv7cVmpM0bLWU
We5LuNLN2SFjMR1XLlE7GENYoMxWEnjp6CNa9vA/HlsT3ee3jI73Xrb01BOu
Pi0zpiBGx5kF/19DPB3wwvaobKMEHUmdCRqwtAM4nxUdMuToOOs9Ob1/XQfc
XC64OHEXHb9ebxSO2dcBpFlthWldOpZ2zF48xyD2Vznaue8wHRnne8Opkp1w
X/KaUYUDHYfOXJ/h9WKC58CZjYq+dIyNYXWeqmHC6NRWWbP7dCzTSxdS6mbC
KX5xc2YuHcfsLHrtPzDBR11b7305HW9w9lbljjJhK9ebc66Gjn7/LFYzB5lw
pX0tx7iVjnWqH4Rc2pjwiMd3n+oHOrbLbvqzKIoJv7Netkj8paNz3j49s0Am
mB7xiNBa1Y6lG4Ti2u4ywXiEksS/ox3LOrQXokKYoLxgIlF7sB1ZuvbPVeKY
EPU5oQoN2nHuw9pjFx8R413mYegatWOW49R37RTm/86v9u2YqckVGs9jgvrr
gxEW19uRduLp+a5SIj5zutHCux0fZ3O6UsuYIEnJv+nq145qi99M/iTa3Vcd
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
7/v+HrSJkBTwIfz/AHNqoE4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1: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
6I8AyX/P+4nrvzgtsk70/wG6TkQn
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 20000.000000000004`}, {0, 3.38474508308381}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"mean fitness\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"mean fitness vs Time\"", TraditionalForm], 
     PlotRange -> {{0, 20000.000000000004`}, {0, 3.38474508308381}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"mean trait 1\"", "\"mean trait 2\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127904316*^9, 3.689365242305155*^9, 3.689365308784734*^9, 
   3.689366782447113*^9, 3.689366866553609*^9, {3.6893670284222116`*^9, 
   3.689367056661128*^9}, 3.689367422556012*^9, 3.689367904432624*^9, 
   3.6893697503897142`*^9, 3.689431929813932*^9, 3.689432013406114*^9, 
   3.689442569119934*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1: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
A+fluVvUfDT4/wEoclod
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        PointBox[CompressedData["
1:eJw12XVYVM37MHA6RRGQEAkBBRFUBAv07I1igxJKKaBIiEgKIgZIqYSEoEiJ
gDRIN8yhO3YXUErpDumOd7/P73r3j93rc82emTkz99mZe/agoZW6MQ0VFVUf
5e1/n///ZSTTaOLZ/Rf9eCY1RbfcT2h78jUlXbsXWSrLPnl6hwZCc+x5kqz6
ULRZqvdjXxbwscnHL3T3IS9/c93rdsdgo8dnurxgBJXLmXF3iBoC+5tVdUHF
GfQlqZOhzPIpcI3E8B5Z6ETyea03M/rtQMjA4eE9dhz1luZCO/NzMGN99Ulj
JhudHVXOidJ8AZ5oOf1xayTGRCIGFm44QrHZGf2Vn9VYxHXBXyzfXwKLUl10
RwgRE/xjNP009zU0rTwXPjwzhNHvEssqtXGC55XfU+8KzGF7CIfIRGcnGNLq
CatTn8NiNvtW+GTegoJQm7yc0SKWYDzcec/WBZLryIU6D3owy4lik6s7LsD1
I7RpVZmIBvUklmOZXMH8o+/+Oc9WJM4wyf/wqSs8zKzniJiaRM/c0SuilDsY
aq227uLiwPtYYqX2aLrDKf1nH1o/cOIzvDu440kPcCVx9cWnc+Gfz532+3fZ
A6RSNLV1RLnwV2l1T2l9PoDJNQeNX4RmZLmZqSnh4QkyYWJcD+mLUf/oRRoj
b09gdUuJr4wvQjwdhqs0c95Ap6F3aFKlHP03eeAHYg9j5KYEfqNADybMSM8P
9qXn9hv1/0YZUzoR+dT+sH5CUnePZg/KNBu8p5jgD/ftba4ZrfehO0lzyZuE
APAnqjWqXf2L2Jn2rrmEBsCMxAI5iKMDVQYeOiBa9wkOf3jlGX3uNZq9k4Z6
5z5Bik4zJnEzEvOcYOhitw0Emt62I4LC5diG+hGu2ZJA0D7b1M/2rh6Ls2IP
vXwmCG7P0M/qPSJiBx9Uv5Q2CgI1MfG9q4r1WIUf+6BUfhDQV4c3nkurQFWn
e0du+32G6OgjXqe2mPCbdCE3zul/AR/77oz+KBb8BOeZYWLhF5AatdZi+0qL
8/XU/ogs+QLDIXS+9x7Q4i+fDg68wr6CLD/LDeZzHahDt4b9nNZXiJjN0SE8
bkc5V2u662sp5dbh/JsCtWizGNv2PBcC5y39tsUH8tGtlPCHnO9DYEw5b+t+
XgJ6a2AfLNEfCncVZvboeLuggWN37aylwoDTw1/gqnAICpvr2G9kFwb+dWfl
8gTdsV+f130yNsKgsMGmWIxMwqTPKyLHe+FwPInK50TfMBbtPB+u6RAOw4ri
F7v+TWBNWHispsw3uJVuaHi7ZxPjKU2lIZp9A/GHMhdYLi9ie+WHSvttvwHT
heRB1b55bJ+baZ6l7zdIM1Z96fBiGvvvGYZI2Ov9vKfBoRW9Dy3p38mLhKST
pS9lmEbQk0+Vq7kFkRAndW+aS2QEKdMupTI3RIJF2sTPWLlRxBi0dMxS7Ttk
NoD3aPYkiuSeCWg3/w6R/gXB42KTSF85T4kr7zsc4ekQ7Xw3ik50uFvTXI8C
+bc/B4SSycjUqpwt0SoK6C9+fn2/FyHVnUt+u+yjQCn+048DAflIhe0nvVpc
FLTKjwZ/MszHnBI9plX/RcFnVxo9jv4ErHOdII/ti4bryZqmWGA9Gg1hXOiL
iQZHXc8af4dFZHqBqje1Jhpcl3V8aw4tI/kD+00CO6PhGPdmUwlaRtrW/f8u
icYAtRAbM/ZvDT1hlFHVlokB5wi13Cv8G+iM9N++aucYGLxaqC5+mg7XyQzw
8R2Mgf0R0wprg2x4agXVijH+A2q/XtYu5l5E4bqTbz+P/QCam68/uOz7hwoq
YiVSdsWCrPnVFFvtcXTM9NWHzJuxUPH1wPq9ugGUy3tEfupLLIw8xgtoT/9B
yzHfLXtrY+Fy0G5+FvMudPvqmuMB2jgYufbkmJJQJ0rsCR7U3R8HUkN7tZ4K
dyJel9iYN9fi4DEtH+eqShc64lP7Ilk9Drj1f9CodXShv1wP/nw1iQPR4v0j
Q5Y96LRkKsufp3Fgaczws13oD7IpjmM6T46Di5he3uUnc4hNR8ZEmC4eLtQl
zhMSttBdww+9KpzxcNAf44nKo8JnePa+uXUqHiSF9krQNtPitP+LH+t4+Jac
3Bb5mRZ/XKW2ITEZD0bMB+Vcziwgt9Fz8+KCCdBwQ/4OndgE0m7AX9+4lABm
u0+tGnwbRGfGL9/78ykBfLrjRPQT2tGFvFfzrv0JIKI4c3dZgYjoUro2XEUT
gYuprI1OtQ0tvDFv2HssEUT0BEsCfNvROrfdl3KbRHgJ/l8S8nvRCcvW/OfE
RFAtGQ4pZxhDhxVHXNl7EoH+Z1hQDf84ukyluLl5PgnwB+LPFubmkW2g4m8r
LAmGaDmbbDkXkJxQ4wcezSQQPZSQOfFuCY0GFieMPEmCwPd9ch1Cq4glliAj
HJcEozrUxfT7qPHXvoKPzOqSQHjun3QfGz1+dKMmVKM/CXpqs4MeczPh7Re9
q9JNk2H7zGYN7QFOfGrE26fNPBl6aSPowiU48fl0QTelpxSHflF2PcKJdw8Y
e7DaJwPb6xHP4mOc+IZC5N2PFD97UqxBRzGPTfaJgvFkiJvWZjQzpsEVug/7
PmRJgdrDKbOZDnPo1FWFL1yqKXBoXP7KRFMbtuzxOSewLQUuYSNT1871Y7du
tSUWU3yPkd3qlEI/lrjZPHjtRSr85T8RNCA7i9nU3GUxLUiFrbQbCYufxjCV
cd9Umv5UKCVBwe+GHszqx7VzL8/+hO2oa8Xv71hjHC0n8l6zpwFN3Z613N1v
0P/9nqRBSq6DM4OsJmI0Kzh651oawItPaXpfz2F557IF1PXTwFziJa+hki6W
+v5qdoRLGoToxsRo/HiIGd1GwOyRBqe7BNdPyZhgpzUDP2bsS4dSBmGtX2HF
aHQx8LAOXzokZNe1LB8tRbz7ubLyjqVD0M6meEpwM9roj/skhaWDEs0Ep7jS
L1T+buuTytV0OE+tfjqDuhuZndF7J+iRDq9l+cN2p0+jsYar3Gze6aDnnz0u
4TaDSpuXHsh/TAdyXWmQJJpBj6dspePr06Hcj6lgq6UKrbhvEvLn0uG0w97y
VDtqQmRc556AoxkwOGv/6UQ3PeE+rW2etVoGWLC31Kgq/8Oq+HcFZzlmgJlb
67e7MiTsS+1++kL3DGgTM1GXVqnDIheKBs17MiBd1efefr0wTLenX/7vUAYo
5s5YvbUIxuYfu3UW/suA5JRr5YyBH7GfLAQpT85MWPSRyWnkCse2ucoUBfgy
ofvesniTfDzmt9729aNlJpT/OezscJ6doGZCE1Nmnwm8DbZjTXEcBEF2nuTk
l5ngv2VwgmuBk+A+cPycyptMaNnMEd/lxEXYHzbCdjyeUk78iimKsRL6qPgn
CH8zwenDBzar1l7sxOHcKNsZSvva1T/hdj22onvsyneuLNgU8xU1ukNGDsNN
W+PHsyBnY+P4y2uj6JedscjfU1nAdNT1/aueCbTGLu/03jgLzlyxbDc+tYrq
Eob+NL/LAr3+ppJemyVE/7/4+ZAFdgFPTDTOLaFLzcGxfdlZcHxl5fiXujF0
yGzaHsvPguFTsXMiqaNo3GD86fRAFtzwrXjRrt6NvkV5hsQPZ0ELyevWRbsu
lNcLv2f3ZYPDqRPStRG/EdXbuX/ZhGy4IKCvcCF0CnEbsBa+1cgGBeN8a7mM
JaTy11rOPywbAmdcch3eUePHuDOFulKzQdulNNSnlAovOLX97cbfbDDQEp02
3LeBjvx4WujTnw27ex9lGMeuI6YDOnpDY9kwAtXZaulrqIi5/rLVTDbUcVjt
mdhcRcaWRLbp2zlwqGS53/ruOlI1u2wDj3JAM93M0u8vFe5neld2wjgHyrxZ
Pus8o8YvRfeJ/XqeA9bLzhydVPR43Mij5A6WXGBPrsh/0DKMSsQnyLtEcoHN
RPbo7ek/KHFP8svNc7ngeZOlTqujDUnVCyzVXqXY7VlbCi8JZSfbjG9Z5cKS
2XXH79OVSObFI0Gb97nw1oxXSpClDAW/LRkF/1y4x1Z3Xp63FDHW9zBV47mQ
o5WlOI+XoPZMx5mcrlyY2DYKyo3H0QT12o/anVxgZRX3SfbLQrd9+a684sqD
p3Qzqu3XQjAvfXYuW6E8iJCQSAoaLcBcck8HWJzOA2m36HYxjVaM/nXTtsqN
PMgyHfr+fLUPo/tvPcmD6/c6XITH5rGD+nRqHakURxAjNlqpCUl0am87sij1
NbtyXxukJug+UAk9WJMH+vZqAj1LVAT7dz0/C9rzgMTZcld6ZBuDob8bn3ry
YFVR3iL61BbG1PCweUEsH5ofqTz//PE3VsmZFSYtng9GSbc9qUrbsCEbN/2O
I/mgmtChNGRIeV6xj51ml/KhaP7x84cZBUjPdqvZ7UY+GFwr3Du9Wo6q3MUY
8gzzYcODY7sGL0C8pXR9F+3zwVBp5eFP90rspNFt3VHHfFDiOfc0V4OIDVWc
XmyJyYfiI4dvezQvY/nZX1/tqcyH8cGzgeo31rHhnyYbx//lg9nF4a4I6Tn0
92kIo61EATDWqyQEGHLjalTvwoahADQan3LIVvLgEwf29Y4pFkDPUJQ6ew4P
/tlSdbXXogD0djYcBAN24x7+0S0j6QWQnSvCeDJtClkc3BC1yS8AfoFb3/s7
R1FDY09mhUAhPLRTZLtln48Ej0yFLEkVgk2IdJIlTzwi6d947W5TCJ2fUvgq
r0xgi8xV2swuhTCjO9p3ImEBYzsi+zmmvhDE9E4+4w6nJshEjL4f+lUIbRnn
Dk547GDEsYdf9DsKIfBWu0U79Q5mephTJWW9EByGedefHJjHsPLEGFmhItDZ
NCT1uvRjjxtYPcspJndr4nZ3+rGOBqOTSQpFkLlxkInxSCvG8L/40C6CgpOn
Evo2irEtjVfTaTpFsGddMsPRqBDTuFgnhD0pguZt6gtDP+2R11y0xrXXRVA7
Tov7suFoifqcTe6XIshtr34kotOIuM4rbJhlFIHmc+YB5ZcpyGjOg8GvoQik
SlcucukPYs3GXRFRnUUgs/Bpv/nfeYzRlCPDsasI3rIs6Cq+WsC2LzW1JWwU
gUKW5/iAER0htawtVYOqGMTzdj70ytETLjCYPKASLoabb/wtvsvQEfT1GdUX
pYqh3CyfMN5JTeA7darl1/FioDkjSfteg5oQ91JP2upKMaQ4Osh94dnErBf+
fWi0LAahVjoWu/oNbHX7QWGqVzGEs8zwWpluYR42SU9P+hbDR4X9obfEtrDV
M/ZMzsHFAN31G9afNrDMWoGMwJhioDrlJ5KovYLZRf6KsE4vhmOzy8vdFv8w
i1HxbyIFxWBsOty8KdiPMXldpVsXLAGbdK4o10gRPEy/7pvhoRJgP/m8wvug
CM5RoHuGVaoEwplmH1WdPIi/q9VePqtbAuZ0Tt60Z9hwWwEfLVHHEqDBnXvC
bm6gMBdDhWPJJTCuNM8gLDuI8t8W/VVJKYE/e2N4nvwdQAKleTpehSVwNorr
RY5xL4onHxGpwkugZOkGa9DfP6jcqybKdasESH3Vn8mP+5FTyuPJF7sQaDL0
6jugIVT92y/JSQSBd6uNhe2FSVRTkS9JOofg8qpDRojvHLJmvx4cQtlTGGmd
uDJ2fxG9PNyiqfwWQd4NjUCrsUkEldmCn4IRsLOQ9nn2/kZcjQxcx7cR8Gsu
nBRbXMLsOCzki6RwYK6SlEh6v4Th7WFjmxSLMZzlaHJawhj/2+/gcLghesnG
bh7LUDKlLVDC4ZiptHNywhwmw356gvYJDq/sGexmDMax+N0aRq/bcPBr12V3
lh/E3jZJZ5zaxsG3kN98XLEHkxSrYnnMWgo5uoX3OOp+YQ9Gp1MrTpTCbdor
tLMSHZikohbZQrYUFCqf0Xd5d2K3OAWvxFHM7jVe9DOvExt088olny6FiMwD
RapR3Ziu7trJ3RdLod3ytYjAvgEsfPtyUaxGKeh/kdJSZpnACjP1v8xrl0LH
oYXQgetTGP3tudZnFpTrTS7VA88clj3X0Mf2qhT4tEJqjsouYFd2dCwi3EpB
9nS7rLzxMvbVe2a3k28pGK7mB1spbGNO89Hb9V9K4f4Dc/E4J1pCRkRVuEN0
KdhVZNTv+s1MuBRLG6SMl4K7v12i/hN6gscBoY8V5aXAxrc0ayBAS3DNCvXV
rSmFRoIOvz4zFWGELcjJoa0UmNhvGfNenMOoqp1uaS+XQitjbET0118YXdXa
nPNaKczQFqREW3dgGrVPc05TlYHvynLQM50+DPOx21PIUQa896Zs0u9uYv6J
TVmsomXAr06v6ZOxl2BjNHyU+VYZrD7/5LP/+Qwm6ZweGnS7DERyPi7pn5zE
er+LKmrrl0F0ALX7xHgblkpjHXHHoAwkC268ubrSim39tZmMNS4DDTHqaIeA
Fkz1WJfkhFsZBNxR76D9WI/9lx8FlYHx2RmJ6G95mEIKdRR/chl8fSKela7Q
jIY2jwSIEsuAjd+Rl+DbjSJXOw91/C2DCoaIIKWG3+jJ2wtxoQNlwKJ8xoLB
/xeyaora94yhHPROOFnpBdciDetcThXucggS3179cLoGZctXMdaIlcOh/LSP
HdEtyGQhzmtZohwMDr4eSn5FRjY3lxpvKpUDn+sZ0V0H59Dnc8TxSop7a856
qb6fQ4UTibfElcthDSvFf3evIu0egrCTRjkwejVZldFS4wmSInb39cvBVaPN
1qubCTe6f7J43KIcJCTPbxv2sOOZC1pf7rwoh9+b2yRpnb3476vXVQ66l0OF
njXuHbsbXz0xsvWO4gTxgm9nbHbj2Gn5wS7vcngUl/41SJcFNxc4+qPWrxxi
JWfn5rmY8Mrv+j7RgeUQYMTCQ5qmx3UIEzRB4eUw45HgfD2EGg/r/xdSXVgO
oksep74+X0W+t/WDpfFyYL889lBn3xraWok0pWouh4NPTK+b2e4gkYfBSSco
NpdTbCH67SAXASedsxSH1iWnfv+4g7S9tvfVdpbDOe3PTCJLdLjBSHWBZS+l
3P7OAubEhGfnGJTUT5TDg3ZXEYcJdrypTSJMdKkcJqXi/vC+4cZP/63yMV2m
jEcQzef2Czx4hO0Zsb5VyvzcurOYUMaLC0SkJjCwVcC08UQ5YVYEvx0txmDK
XQFfK7zO7H19CPd417jccLACvEQ1hU0fieNmJbEDSocqgC28+Tl9ojg+atqY
THW8AkqzBBQvZYvjBUeGXmTJVMCgxOjLVl9xPE2sfurH2QpgWunfc2LzML5y
lDsjyKACllTquJknRXGnksHclw8rwHOJ9cvhFlH8aJK57apRBVzhC6ElhYni
orYvTK+bVADRnv7Q8Q+iuIT584uLlhXw0CKj4wKNKK7mpFlr+ZrSn7Tru2uP
ivxf/v+hAvxHcWpZu4P4YTYXvzb/CqC9mbnwckwY/7DzWu5cSAW81PgTSTYS
xlekWzl+xFZA8euedyY6Qrjcyk6ITUIF/IvrXo9kFcLXVNVkRil+/K7x420G
IbyBXeUfZFRA14OMwzInBPGJOVGnzw0VcCdVqVXenx9f6H9n5d5UAd/Wqrob
9PnxzNxwjRhiBbwTeBV0kY0fv3vP6pNedwXEXWmUnN+/Hw+JR3KVUxVQZZZd
RXLiw4kVVN1mM5T6wpi0brvy4XR+3/1rKF62/pTl5saHv9F2FKbfVwlnTuVI
PIg+gEfppul07a+Em/WPTt+WF8B3XdcR5+anlFNjmZMEAZyQM1cYLlQJa4Ln
gxJTBXBqXZsje0QrIde+/elDakFci07sSdKRSrghI+SYli2IP8rhaeOWrAQP
x2NVqmWCOGZNH2WuXAl87+2+4O5C+OaaI1P6o0r4Kt1OI23LgTsregWXO1dS
lvd+FsuUNXQ1W9Es/2Ml/PTugzzvKZQjtGRUGVYJrgamt/Su/0WJx6Q3yeGV
wNJneVenpAeduNCdHlZYCVdrMxda7uMY4bjK/X0llcB5On8jiK0GSwkI6Flp
qgRT13fYn7+jmJ+myAr0V4J98Z7suQM7WJrLTuvoYiXwmr6RkjdnIphVdGcV
LlfCttqbr+dDmAiGdSKsghuV0OESe9LiPhPhMPWyYad4FUx+KSgXcyaiLb/Z
G2lSVdCy0F+qJNaPNM0i5vRlquD9V2/sbOgYYn77MGBergpi/r2umQ2bRjyl
PP7a56sg8GjHl4BzC8jt/f5buheroOPmUcnLisso6ZTy6bPaVQBXHl9huESF
5whOYJqPq8BPqk3K4hI9ftDnFudTuypwnxkiDgYz4//lF6+roP5nj2RpAysO
qupMfG+rwPztDXNzt1348T/OBrkfquAnve1O5OVduEv1JtYeUgXVsewsMlx0
+MeBW4PH0qtA3DLn0Vr/BDpca0H6hqqAyv/hjXv+vxHG+mKGAa8C6jvjinX7
f6PDITa7JieqQMPD3cBQbAE127zJOUtTDXt435iU8W2h7cMWwmOM1UBzca74
cugmSp7ZQz8iVA1XfgmRf2/PIyVVdl2Ok9VQHf6TMct2BB04k2JhdbEafOfF
aifm2tDgr6IfpZerwdBz+c/gWSKK1mTy/KtWDcK6hYfLeX2wmuO1b+PMquFb
cPp7c/VWrFFc0WPaohp+5HutD50mYUK297wcXKshMLshun+qEV35shH+/mM1
7KhuxX6b7kJv6MYWjGKqof+A2n7v21lY1VhyEtuPalj3vn50O7wIU90ncXuI
4lVaX2tmpQpMXab+wp94Sn/YTNdZUSs2GLuqy1NeDXy6eKOH0DL2WOUs6qiq
hpUQN4vXS0sY04EJY7u6amCPT53Nol7CZEnXHHX+VcOXddYU52O/UG3fagZa
q4abenZuhufHUKf0lVFN6hoI+VVj4LA0i3oTNtdVaGpA7fie/VHBc6ivx9Kg
XLYGMmMsvneep8Wdrj8YGztdA8shXZyyMrT4bEwRp8yFGqDiNOkrm6HBX+3i
6bxBMZei4YuuSRrcb9O+MFinBrJ6/lT1v91BezK7fFUMKNcn2+1TDtpC/5ef
1kDQUqnRAPUK6uls+brrZQ3sDahw9I+dR7YRc5JJb2ogHb29qb57Ds2+x94W
utRAlKab8t7PM6g+cgOp+dZA91ignJvSEDofMpgp84VSH/HSIXuZP+jFyoW0
a1E1MOk1G4epEJHjN828y9k1kB3n+tiGVIHY72kpG+E1UMvgWqR0pBURpxZv
nausgZxwWcaOhx1I2EDxeHtdDbyazbl5O/0PSqeaVlZrrIFE7ZlIxeBeNLUz
lCs/XQPYycjn1arDKM/mqUkUTS1QS9JWsYUOI5YsgwMEulqYNmdy99EYRv2c
fr+cGWrBTyvc7RhpCBXcEemX5K4F/2qzgXN9v1GXwXVRnL8WSEvZZje6KxF5
SsokSrwW1qQ5+3YEhjEHZjaarydqIULO52Sixzb2efmC5JxiLdwwY7t49fF+
Qu0xv6e/rtaCHRpkertLmOB9wFo116QW6Fnf8YYy0hLsO+4JSDnVwkO+95qD
P9uxvplDopretZAdcXpzZ/seUmfi0WpKrAXNiuFAM5d19PrshUsjObXg8+zN
B5EXDPihNkfyg8JacJaSkmTby4yb1+0jq1XWAncn71rYflY8hMrpzMnxWqje
z5H4tW4Rrcd2l/Nv14Kj9OEwubBBdPeanc/53XXg1dhw+Cr6hdR6K0KZjtbB
Ib1N0Se1ODq2qcFfpFQHJ+PYSiIO5SHfqeB8UK4DY6tl1h8Hy5D5E6p6RdU6
UI4L/eG+vxr9l78a1cHEZGWjJfsgOjug5KP9rA5m9iinveBbRGpNc7i2Yx18
03Cokl5dRQcqkh0snetgf98fckjIFrLdfYPqyfs6+B7R02XPSY0PeX9nEv1S
B525/DHepdR4uQbt3pHkOnCxjLy1qbuO5M0zDV7k1UF9tUeeztoiSq8zORlV
UQcf225EDLPNorXrXINlzXUgevV6ZZjiKNL+VjSz3lYHibqOoys2/ej50eps
nvk6OJevyiXwaxa7UEjDqbxcBx3nHzl5FS9j45+usntT3HnnuHCTwAr2VC5W
FvbWg1TYeZffknsIojfux84frYfqEX7zm7PsBPELkslnT9XDu52B2dEnuwjW
N+pcJK7UA5XwouemDDXBpOHF7pvO9XCxN5ooqjKPTVRFvxJxr4cuiT9XjVnm
sWTLzmGBD/XQ8jL4bUHBHLbG/JC5N78ezo0r7g14MYGdonmklVZcT9lvMx4h
WU9gyktXo+TL6mEmlZH14sMJLG3AKvRqUz24BozHnX48jl0+HS99eLkejJjS
DIzZf2MjMtc0oylW4MAdrQp+YUH9fbushBtAGmO3mzrgi/3Q6Fx6L94AcWoC
9G5VjogvOSWfW6UB9g2387T7f0bM/51PNEADd86Ea4c3itoz0MZ7rwE4LQrr
RW66UPbTcns/2zdAZoADyyHcH9uMEVrYed4A79zd5awcP2GJEjs3OwMb4N5Y
xj9vqyzscUVez5vQBmAVbxbz1izELPzHnFozGkCrlo30vqAB8/WVfdKZ1QCW
MWeURsMaMaEFGakTpQ0wYKpdkcBdjblFas/8rmiAku/PrZ8xl2B1pYWKY20N
EPDO1PiYyhDyunlFvvJ3Axj0Kr6+f2YSCQFdx5meBnixFqpxsWUBMT7Htanm
GuBDU558OGU9jPxM1XN/swGWo67tURfkxE3Gpo+7MTZC9eP81UfOPPgPkaJB
fdZGsH3kHMY9z4vbMg4v/qG401+NukeYDyeEJQQx7G2EmCbZVjtOfjxlD6g/
PtAIYQFlMRlBQrjKM5f+TJFGOG8yHsfEfRD/xzR4yV2iEY5sRnYLE0Twmiwm
5bvqjbBdTuhs/C2Ku1BfO8au0wg9f6KdvLZFcI9HY/0cuo1w8CSNdEiHCL5G
lf+pWY/il/pK766K4LiEdrbci0aoufzbR/0xH35EpSEl8UsjcNiW1D+2pMH5
iuXLPn1vhNHRDWM662XUvqtAlz+mEdh0QzDTjAXEdEjP+2xtI1Tq13x2nhxG
JRny8gEtjaAsmqhhyDWOEvOnawoonm5OaP4uPo52aCt6Gwcb4Val0r/8H/Mo
Ru7NLXnWJnA6th4p/IQBJy4d2+e8uwnujglzr+gx4XE8vJDH3QSaJed62U/u
xq/2aywZ8zYB7XM3hXi/PXh3rhb/LfEmMO15X6K2hwc3H4s7fuZ0E2yhv5Jz
MkI4y//iT7kJJmsk+T+8FMHNRbN2bqo0QZ3YT2Wt5yI4z8mqlf3qTbAc/FPc
9YIIzhTaufn6ThPoR4oqhbKK4JdEok6/udsEice3PKvmD+Lxpcbhqg+awKbv
7WD3O2Gch82QxdiuCTiC0wK/x+/HZSMkx7o+NEH/YdP0A05cOIdakCmvZxNI
3rHa3WXOhd8Mfrv43LsJ1B4uhQbmc+IIXRSd8WsCxt6lE2RjDvxUJMOJ82FN
MLgr35r/wG5cgkX/sXtkEwjbGJZaRLLiu5km4rRTm8Ccbyr2nxYd/uButaVR
ZhNMq9zT2jxJgycddlX6mE/p7wHHfR94qfD65fTI6QrKeLRqm4enbCB9zY/+
jfVNkD/M+tf/3TrqsEhpPdXdBKunRVZ2nV9FwrZUjh/7mqBx+H7XmvoykjLY
kN4eawLlM+98T/bNIpK9xGGL+SbI+VX8755dJ4pisY+9s9gE2523Ax7wNaEI
BWk1m1XK/c7JDLEdqsa2XHITfXea4ExuSal24DR2VkUxqoWuGaY3MIOItWUs
yqOM/x/FJi9CPCVEVzCL7qvvlbib4dUNqPkhtoE5xjKwhgg3Q9Ej8Yt8Jycx
Tj9srUu5GcLGb+rpbG1jmWerVAfUmkGHptl7WYCOIDqpS2ug1wzm7aW8OM8u
Qovnbmktk2bYyosel/jARiiRe6nE7tgMwmg5KaCPnrAhbFyEIpqhyZxphFHu
H5beCheqvjeDN4Nw2f4DU1jsGb304ahm8Jiy5jpJO4nNhxitRMU0A+Otutds
WuNYeQrprGkupb0/JAdW2V+YWdqdr+MUX3BmqZN6246dYqaZFhprBubZgyf+
Keaj1KGAh2dnmqG00D2Bs6YCyRG4onJXmoHv9eZjVU0iwt72aYlytICY+dja
O6NetG2l/+TUyRaoohq9tfRuEHW2n3rvINsC1+KDA3qTBxHTf+dtLcAX+Flk
r+8wqs3iKIu92AJedoeeqe8ZQY90eoo8brSA4Wq60WzOKCq8OafWZ98CGQb8
3JyhU+hYuvy6/4sWqC3f1aigM4Uu6iRbnnVvgVLfV86bKxOoPP5LwkeKDz57
KBQ8NYHMBhw5B0NbQNDq3pfBZ2PoashXcenkFogN8Hrk/mwUHZROO+VOsZx7
Trjg01HUcGdre/tnC2wYc/J1Co+iiY1zv4ZqWuCOZ03p1Pk+VGrRahc50ALU
ihJnvrkXYPErBkhmoQWaXpfvf9DYgUly/zS4sNwCA84dHpWcXRhV79ShGXoi
3Dc4IDFVWI/9U9N3RDxEAPt21rOcC+iC6NIzAQEiODEMX1au3EZva2Z/xAsR
gSH5l4CdDQ0u13Jc4+lhIjx8FFI2eIUF51qok/90lAj8Eqa1H/R24+m2vM82
zhCBK3/B/2s7Gz6vPfp7QoEIP/tLHU+SWPFf4mw2z84T4UAk6c7ye1acm72c
q1SRCAr8EU3yw0w4/uiSj6QhEcJDr4gPtNLihRrvf6VTzGRYBhzltHhH1buZ
FTMifPBR97vtToPTMx5/LfOECAR330TDFzT4lYqmV/nmRLC+r1Z9SJYGX5JK
9q+1I4Kwlt7gUAwVrorbH3O3J8JSydXEdy5UeFubSM15VyJsXsx7ZCa7jgxP
UDkteBAhqVH7fGL/MmK1vH5r1pMIt2UWbxVFzyOb7W/JU0FEqN/XNU7D243c
a1rLaj4T4ftuOxdfvg50UkDl4mQwEQ63XyapKZH+7//HUCJwCqiG6MnUoJtf
Wyo+xxDB5Nzt8w+94zDs93HWN4lEcDhO0s+xT8Wc72bqjaYRgSymUpThEY/i
XlhwVWcTIaJU6eyTQCISC7wqr5lLBBEm9uVb1b+R4Yxf2pV8IvwQybCTftGP
nu1pPzVDMT8e/JExdRA1e5L+fSin3P9fXUWrA7Q4UXjRUpJMhFJ2JlZ2V0ac
ueu758E+yngd2sQEivpQB+Pbz16zRNDuk4mcVohFrY+ZK9g2KfN1KJ63JCsL
3URaQwrbRGD+Nvq0UaoAGdnON2A0JHjQgbZcZSuQIqoO/MlMApLYz9MpI2Rk
Zrye8YCFBBUcHN57VlvRjuk6dz8nCVpYXUziW/rR98Wde5JCJHhi70DQjxhE
SYXX2vYIk4DWq9vt0e8BpJBzefSWKAmoSoR1lMp7ELvLpRk1SRLc+ZP8bdmt
EtPein8lc4IEWpsvqOOYZ7EvoeOLGmdIcFh+n3B0Gg1B4W7SnjWK64KryEs5
tATa1/L/vmMkSN+9UPYzbheB7XxDX/5FignKxmyMuwmaP1rPn75OAhvriAsu
o3SEb9cYjtdT3LAh5/DLgZaQsUFv+PQuCQQiZHflHF1F2l8OuYg+IsHFPz/W
36SuoxZfuQCHpyTQz1IfHv49iuYkFOfl35DA/Gx8+x/vUuTHxh9zzYkETiEb
t/c9KUG9hC99in4kuPn1PbdKkzvGXpi46EXxi7ZnHpinJ/Zf/ASRIPmo7dVQ
2VjshD19nHQwCcof3Nspk8rAmLt688bCSeC9e8Tadncp1i8vJMaUSILnc6/P
J7P+wjp1L6MVilnfm+UdrvuNNT5Qn8xJIkGZRYFV+f5OTNczyOpDEQksUfP9
ruQVbJxgesithATC7jMhshPrmO/a+aqRCkp9Obz3RqapCXEz7i992kiw/nTe
eurKGnbk6F0t1w4S1HuyrTj9XMDqVUoS8sZIcHTDvWtrcRQz/3NPae8kCfSI
BhplfmMY9efJE8lLJMiknf/ZlDaM7eXQCiGuUuZr9ilz4FgflrSj2zDNTgZ1
dJj74dw0skjln5eUIsP9Lvsf9Fx/kdKuvTJbx8gQebxQaeVPF/ph/33JSYYM
InPIXt+jAy3XPXzXipGhfHFZMOlBGzJxMFBlUyeDn3D+fUGxPrRW9UipTpMM
Eu13vv/lHUCcncpe7wzIsP04WvwjzTDy3HRcCX5AhuvurkZS6sMotThmNNWE
DBcPGoZzjo6gwP7uULMnZNB3WGu7v0SZX949RIIFGbK0FL8RmMfR1km34H22
ZOjON1F0rZhEJ0xDi2IcyDDO6pP8OHsWERUGmNPdyNAr8/a1FT01Pto69GXh
HRl2mRnGkdbp8TEQ8lT+QIaDA7wXL75kwreTA8blvMmQvmYumzyy+//Om3zJ
oClxvjqFjxO/tttPLsCfDNMtD8ws8rnxvSNqvXaBZIhhzU9djdiPaxEOasuE
kcE4P6gizEwI5znEdFwnnAx9/V3XXHmF8Ju8vqwX4sjQyuSXvuO8D5eO7t02
oZie7ZcTza19+En6qgnTRDKs5RsJWC3uxSOf304zyCND+PG8vpvPqfEPV338
3xeS4Wnwmys3XbfR48lMq0tFZKhr/REu57qFllyqIl3KySDj+dXPKXwOPT14
gcmniQz7HET2RfG2YfPhCqJxJDKsr8Szx39sw54MNWp3kskg8O6v8XQtEev4
PBWp2UOGI1Wpwddnm5HbpwZNrJ8Mt70ComhUyCigd7pJe5AMM3VjDc3TJCRj
E8jVMkqG11//Nl2ifP/cc8G3d+fJIBa4d+Fvainq/FY68meRDGpdg/sbiwuR
lCSv241VMnDUHv38qT0DvWXfa7C0QQaUPOkjPf0dXbhWEGRB2wqH9ltyEr8F
Yh87HpzlZ2kF5zePS7UCotAUb31KHF8rqEXdc9EU70eLi7kixQdaYdPtdfyl
44PIueNXSYlUK+yVWJ4pfTOBBtb4q57ItoJteVLqx2fT6HBHopKqQiuMTL/h
PnbxHxo2vs3/i+KFeRLPQYoFBbwMxC+2QofWbQMPmEHKu2c+5F9pBV51fLPX
dAol8ruWKVxrBcnlvucVaZPI++GK+nONVhjeY6hS6DeGJH/YbrVQbJtYlnj4
xxj68PF2WsRdSnuVmIfvx3GUf+PoNZYHraCnz5w0aLaC1FXzA84/aoV0u0+x
6OQWmovWiaw2aoWz1budkzmo8KCWQ4s8j1shv+eewsfjtLhPwt/vu81aIWAk
Jot+Fx3end3ufcahFWa8kgzy8plx+6/KPH0UT/oKs5YkMuNv3vi0Fb2njJcA
oyjPAB1O/d95fys8nage1Kynw/8fi2o5PA==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 20000.000000000004`}, {-0.00018084832168643698`, 
       0.00043565470339303875`}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Variances\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"Variances vs Time\"", TraditionalForm], 
     PlotRange -> {{0, 20000.000000000004`}, {-0.00018084832168643698`, 
       0.00043565470339303875`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"variance trait 1\"", "\"variance trait 2\"", "\"covariance\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127904316*^9, 3.689365242305155*^9, 3.689365308784734*^9, 
   3.689366782447113*^9, 3.689366866553609*^9, {3.6893670284222116`*^9, 
   3.689367056661128*^9}, 3.689367422556012*^9, 3.689367904432624*^9, 
   3.6893697503897142`*^9, 3.689431929813932*^9, 3.689432013406114*^9, 
   3.6894425692102118`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        PointBox[CompressedData["
1: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
oyjPAB1O/d95fys8nage1Kynw/8fi2o5PA==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 20000.000000000004`}, {-0.00011774126470451316`, 
       0.00012244284557237954`}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time\"", TraditionalForm], 
       FormBox["\"Variances\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"Variances vs Time\"", TraditionalForm], 
     PlotRange -> {{0, 20000.000000000004`}, {-0.00011774126470451316`, 
       0.00012244284557237954`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"variance trait 1\"", "\"variance trait 2\"", "\"covariance\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "]"}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127904316*^9, 3.689365242305155*^9, 3.689365308784734*^9, 
   3.689366782447113*^9, 3.689366866553609*^9, {3.6893670284222116`*^9, 
   3.689367056661128*^9}, 3.689367422556012*^9, 3.689367904432624*^9, 
   3.6893697503897142`*^9, 3.689431929813932*^9, 3.689432013406114*^9, 
   3.689442569271428*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1: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
OeOFchmz330lpDh52abLOWPDpPPdzT+UoHjGQ3K/sTOmss4y8/Mrw/P+irvt
TmeMM9pVUwWV8b6svI0S7ozh2H9v6KLKKI2c2+oc5YxrTQeE4qyVMeLJeDos
3RlflOKTH91VxrH6zw/lrjiDhV4w2z+igk8/Uutq15xxxctUbXRcBZXHhuI4
GV3wMsVcLnpVBep7dHz/rneBWghFxHVNBVlKZ5/Vcbrg5w0TFhVmVcw9dJf+
zOOC3uU89+BNqliSijd4r+QC7d79TUpSqnhQX79nytgFQh8Srt3TUkU9/yjH
jKcLYoNeVDhZqKJi9lpmZpQLdtrXq/C6qKLuZa3qnYMuEO+zERfyUEWn5dSF
/lgXyI4er7QpUEWmtz7D8yQXeF/fJ6LQrIp1Pz/e7EwhfGZBbtu0KiQNV7TE
j7hA4ovhb3NGNag77NEeIzz4ttZ+LEoNlQvzyyo5LrC0j5bVj1bD94fdpzcS
Xv3LNV2QqwbFWoMZ5gIXVNyjmu6tUMMS61fL7YUu6PeNc3/XpoaCxYYNUldc
kLWyHPBzUA11rY3iM40uqHcOi2j8pYaf4nNLp5+7YPRFSgAHozoU/igH7Bl0
wcDz3PKLhJttnj1bIjxysywhfoM6uo+s1Pt8d8F9NmHHrk3qsDjMG/7utwt2
fbzydElcHTeNa09yTbjgm17lZyk9dVw3Pjo79ccFRW0c18ZOqMMt+5hQP58r
Ji7ovV84o451ZTWfZDa5QsTpsWZarTqe8cbk1Mq4olH1w9MBwqKqhR+WCZtF
bTBgv60OmQo7AzlZV6xJ/e0ZaVZHccFM/IiWKyrKt2/Qa1fH2sUpYZKhKyxU
O68Pd6kjI1l26LOVK771vC889VYd0bT4bb88XKHaOaX0uE8dbZYRGa+8XHFP
vDyzvV8dmUG1jEp+riAJGf+aHldHxGK7vHusK3Kvef3MWlYH85uPh8lprrAL
Tjb8w6sBQxlGS4184vqd55xKhTWwc63Hh3rGFQXZqWb9GhpgkmiNly13xT/t
g7n79DXQfFknVeeKKzZM3zdvtNeAXobAcONNVyi1pO8catLAWJpSFl8/Mf/y
qzzfZg2Ucwp/FXnvihdGTxxVn2pgw4v9IrmDrnB1zd97+z8NRG//4RX1wRVv
5qvpru81YOrPXi74hfDpu+3HZzTAsHm8u+qnKy4ULd0fXq+JG2MJPVpjrnBP
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
/W8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJyFms1uU0cYhkddeZlFFl5k4UYWiiIUkQCOgTQZQtqm/LbQAv3FhbLuLcyl
+FLmUnwJvYS26nm+ah7PEbPg6PP7OzMnEjF8/v7Plx8/Sylt/vnj32d//XXx
33MnDx8Mz4mefA4P3djnuyM+E/HR7+pzePhN9fmu8D35TYXP5O9+8NHDR78v
nHlXT/ysnwvfF35D/nPNgWuhPxhw9oc/efaHj/5QfOM3pYe/I/5EOHz0+B0N
M+fmvFvSw8fffW4Jh4/fsfjH4lsPviMc/Ylw+52If1s4884I/87w5HyivxY4
evzR43dXec6HPxnhM+O3UD/0/By5D3z0p/K3H3kT8fH3/pbS44c/+on4U/Hx
uyf9Uvh95dnfeuap+OjxR48/eQ+EM++Ijx956M+YtSbC8cMf/RfyB59qnoi/
Jxy/8xEcvzPxL+SPnr7kTTWjz9Izo7cfOP3Up8gvZs7nvMXTw9Z/i+8+8PFn
noq/K/6O+ORftvzAvciHT577CN/qB74j/l6fHzh9H8mPmfuwn2brC/NM+F4f
L86/Gp770s9GcGbyr1p+zHPx9/v89OUIPte8Lz55zPw9wHng9JE+fdXqI8+L
Ps5zH/zoa3/3ET/09PtaeeAHmvfFpw8z/e1/rXzlBZ++9r9uceuDTz/nXbf8
Iv/0jfTM5F23/CJ+EX9Lb//Hw9NrLpy+zgOfa+Y8Hrf89GR4HgjHn/lQOHno
6Se/rT7gN8Snz9ORvLlw8pnp+2QEn/f5SXh6Jj/zn7X8Yj4z+3/azqE/7PdL
z5X3vOWH3os85duvyG+rr/OY+b3A/YX7PNIL9XnR4oUZvfPFT98OzyPx6e88
+IfCB78Mzv5etPzQH4h/JD77kZ/7FPUJv0Ff3Uf5Vfz0XYvHzH6VV70f8a0P
/KZw9sPsdbPvXzRX5qN+XtEc/Fsj/V+2ftYbr8Kz8ODTR7j5gfN7rfRVuPXG
nZdeKf9Vy7c+Cc/SF+bjvl8Rv47xR/DQe9EX/KTfp8o/fd/2i/lY80lfn8Fv
K4/fq+Wf5R8z5yd+kf/Weaif+9i/yj/mO+Jzfuprffqh5dvP+uDf7ecZ39q/
/N0noz/WvJDfXelPxOd7F+Y7mk/lx31Jn3U+Rfuzf/C9lsrjexD1qdpf+HHf
6ld0Pj4/86v6FuV7P9an1y0/+3zBuX/f3xif85befbP45XWLF+ntZ35lXvT5
xq1Pb1p+zAvp6f+mnQsz76PO1/nOy5qL/Kv8rQ/ci/29bfPDn+/RvH/47Ff6
6v7CrS9vW34R3/oifZU+5lPxF31++nF4Lvv8wLkv6fMYvujj4cd+lR/4Qjg/
j9JX6bP0Vfz0U+tXhGfwhfhe9Bc/y7+6v/ihZz/MS/FP+/z0c+tXna85+PRh
vqe8Zb9P6Oknv2I/8Yv4VXgVnn5p/UJ/v+9vvv2y8OAvhbMf8bP4gfO9ufSV
2Yv+3p/8q/cj//Rry4/5fr+/8er+4A80c37SZ/GNF+azPt94zF/0+VX8mM/7
/PRb6+c849X7ER78M+FefG8PfqGZ/TGfa+Y8mPme3vuRv/VVeucV73+Yi/M4
r3ctnpVf5F99fu/aPuYHftHXZ+H2qz5P4e5v/yJ/62M+b/lF/nGePi/pq/KK
z0d+aTU8+XcPcC/OE/6gn0nv86w+T/VFX4xzH8rLqxH8Qn3OxR/0K2bOV/os
vfkz8VfyL+Lbr0hfdH4+L+cXnddM+Fq4+1Tha+Xbv0q/cV+f5++t3nznRZ+R
fPzi/Jkftv7FfXif1Sf0WkV+cX/wL5Vn/GHrX5Qf9yl+Vr/VJ/RFuPNX8ivS
r8Uv2p/7rJVnvwoufdy3+Bv5V80b9XFeet/6V/Xz/pyHvkgf75f8I4/7Zr7s
9w+9F/erfPfLwp1f1I+8Iv94H4SHnvsVzhzvh/rYP/jcp/yq+IFrjvdD/I3w
9KHFmYv5l/0862cfWj563mfrZ9Jn6ZPmmfpl6VfCmbfWZauP/1cgfRHu/a2E
r4QX+a2Fr6U3v8J/1M+zn/n2r75f35f4G/lZn/5o9czF+dw3/Ef9fPC4D2bu
W/hM+Vn+7rP5xPuwkn4mfVK++6zUp8jP/CJ/72ct/Ur8LH6V/1pzlZ/zi/w2
4ruP84J/1fdLH1v9xvf9se1TpZ8Jd577zJQX+VfSD/wsvvOin/hF/HiflOc+
oVefeJ/kb374/b/+BhEw3Js=
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 41.}, {0, 171.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"trait 1\"", TraditionalForm], 
       FormBox["\"trait 2\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"evolution of traits vs time\"", TraditionalForm], 
     PlotRange -> {{0, 41.}, {0, 171.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"distr mean\"", "\"distr nose\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6887085267358913`*^9, 3.6887085335012913`*^9}, {
   3.6887086137511883`*^9, 3.68870863136831*^9}, 3.6887087471350813`*^9, 
   3.688739737267041*^9, 3.688739769219655*^9, 3.688740319562656*^9, 
   3.688740525719129*^9, 3.688741112330809*^9, 3.6887412245482388`*^9, 
   3.688741543973647*^9, 3.688741700329323*^9, 3.6887417367608633`*^9, 
   3.688752127904316*^9, 3.689365242305155*^9, 3.689365308784734*^9, 
   3.689366782447113*^9, 3.689366866553609*^9, {3.6893670284222116`*^9, 
   3.689367056661128*^9}, 3.689367422556012*^9, 3.689367904432624*^9, 
   3.6893697503897142`*^9, 3.689431929813932*^9, 3.689432013406114*^9, 
   3.689442569340822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Generate", " ", "animation", " ", "of", " ", "details", " ", "evolution", 
    " ", "of", " ", "blob"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp003.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mean2mean", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"results", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", "\[CapitalDelta]c1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"results", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "/", "\[CapitalDelta]c2"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noseTravel", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"results", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "12", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"mean2mean", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "i"}], "]"}], "]"}], ",", 
           RowBox[{"noseTravel", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "i"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "Red"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "60"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "150"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<distr mean\>\"", ",", "\"\<distr nose\>\""}], "}"}]}],
          ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<trait 1\>\"", ",", "\"\<trait 2\>\""}], "}"}]}], ",", 
         
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"{", "\"\<evolution of traits vs time\>\"", "}"}]}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "mean2mean", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Documents/kgrel2d/plots/simtest_N-10p6_c1-0d01_c2-0d02_U1-2x10pn4_\
U2-1x10pn4_exp003.avi\>\"", ",", "plots"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.68874124061594*^9, 3.688741243420786*^9}, {
   3.688741567568636*^9, 3.688741586272008*^9}, {3.68874168036839*^9, 
   3.688741687528088*^9}, {3.6887417635360403`*^9, 3.68874176807205*^9}, {
   3.688751217148959*^9, 3.688751293810988*^9}, {3.6887514211800957`*^9, 
   3.688751421659536*^9}, {3.6887514553238792`*^9, 3.688751487468504*^9}, {
   3.688752169235358*^9, 3.688752219779504*^9}, {3.688752253187915*^9, 
   3.688752256995316*^9}, {3.688752338011848*^9, 3.688752390107595*^9}, {
   3.688752501708383*^9, 3.6887525047724857`*^9}, {3.6887526717726727`*^9, 
   3.6887526837320747`*^9}, {3.6887527200843353`*^9, 3.688752720603757*^9}, {
   3.688752755419982*^9, 3.688752791587425*^9}, {3.688752870652404*^9, 
   3.6887528793477297`*^9}, {3.689363513314013*^9, 3.6893635498983307`*^9}, {
   3.689363922306107*^9, 3.68936395607584*^9}, {3.689363988274111*^9, 
   3.689364026546067*^9}, {3.6893641498825912`*^9, 3.689364170146286*^9}, {
   3.689364217826824*^9, 3.689364217906637*^9}, 3.689365445878995*^9, 
   3.689367933206925*^9, {3.68936957867632*^9, 3.689369584643423*^9}, {
   3.6893697700916033`*^9, 3.689369771642955*^9}}],

Cell[BoxData["\<\"~/Documents/kgrel2d/plots/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp003.avi\"\>"], "Output",
 CellChangeTimes->{3.689366033626404*^9, 3.6893661030004463`*^9, 
  3.689368051587461*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "evolution", " ", "in", " ", "2", " ", "dimensions", " ", 
    "and", " ", "store", " ", "full", " ", "data"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "20000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fulldata", ",", "verbose", ",", "veryverbose"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "False", ",", "False"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6893642748097477`*^9, 3.689364277369712*^9}, {
  3.689368304557455*^9, 3.689368304682645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "4.708735280542232`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "105.4813220547839`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.00009480351407433339`"}],
  SequenceForm[
  "Trait 1 q = ", 4.708735280542232, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 105.4813220547839, 
   " and rate of adaptation ", 0.00009480351407433339],
  Editable->False]], "Print",
 CellChangeTimes->{3.6893681081874733`*^9, 3.689368308129064*^9, 
  3.6894248476745358`*^9, 3.689426192701605*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "3.7383519587043743`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "96.74281185269709`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.0002067337057605115`"}],
  SequenceForm[
  "Trait 2 q = ", 3.7383519587043743`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 96.74281185269709, 
   " and rate of adaptation ", 0.0002067337057605115],
  Editable->False]], "Print",
 CellChangeTimes->{3.6893681081874733`*^9, 3.689368308129064*^9, 
  3.6894248476745358`*^9, 3.6894261927024107`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "7", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp004.m\>\"", ",", "results"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.689364319722063*^9, 3.689364321585909*^9}, {
  3.689368769379485*^9, 3.6893687857980423`*^9}, {3.689369039035138*^9, 
  3.689369057874571*^9}, {3.689369309617503*^9, 3.689369314922521*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Analyze", " ", "Motion", " ", "of", " ", "blob"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp004.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blob", "=", 
     RowBox[{"results", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4", ",", "5"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"blob", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"blob", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "blob", "]"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"blob", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "Red"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", "7"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Large"}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Fitness Classes\>\"", ",", "\"\<Mutant Fitness Class\>\""}], 
           "}"}]}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<trait 1\>\"", ",", "\"\<trait 2\>\""}], "}"}]}], ",", 
         
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Evolution of blob\>\""}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "blob", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/plots/simtest_N-10p6_c1-0d01_c2-0d02_U1-2x10pn4_\
U2-1x10pn4_exp004.avi\>\"", ",", "plots"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688753611899971*^9, 3.68875363306802*^9}, {
   3.688753807755365*^9, 3.6887538457313223`*^9}, {3.68875389128337*^9, 
   3.688754009611796*^9}, {3.6887540957638063`*^9, 3.6887541148039513`*^9}, {
   3.688754167252035*^9, 3.688754167347722*^9}, {3.688754214835932*^9, 
   3.6887542677883377`*^9}, {3.6887543039004*^9, 3.688754394754507*^9}, {
   3.6887544373084917`*^9, 3.688754561578891*^9}, {3.688754616975334*^9, 
   3.6887546582210083`*^9}, {3.688755342246117*^9, 3.688755364661318*^9}, {
   3.6887556243565083`*^9, 3.688755624908174*^9}, {3.688756091644719*^9, 
   3.6887561071002703`*^9}, {3.688756152820294*^9, 3.688756328781499*^9}, {
   3.688756373269032*^9, 3.688756374660254*^9}, {3.689363846457808*^9, 
   3.689363848337645*^9}, {3.689364074065825*^9, 3.689364093378536*^9}, {
   3.689364124898225*^9, 3.689364125692884*^9}, {3.68936433859542*^9, 
   3.6893644878190117`*^9}, {3.68936879696751*^9, 3.689368797208914*^9}, 
   3.689369339837929*^9, {3.689424930025755*^9, 3.68942493419941*^9}, {
   3.6894259915000067`*^9, 3.689425995706009*^9}, {3.689426149217504*^9, 
   3.689426149833063*^9}, {3.689426305308445*^9, 3.689426345747137*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "evolution", " ", "in", " ", "2", " ", "dimensions", " ", 
    "and", " ", "store", " ", "full", " ", "data", " ", "with", " ", "equal", 
    " ", "trait", " ", "parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.01", ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "20000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fulldata", ",", "verbose", ",", "veryverbose"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "False", ",", "False"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6893642748097477`*^9, 3.689364277369712*^9}, {
  3.689368304557455*^9, 3.689368304682645*^9}, {3.6894265261265297`*^9, 
  3.6894265424389153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "3.9999999999999996`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "153.50567286626975`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.00006514417228548775`"}],
  SequenceForm[
  "Trait 1 q = ", 3.9999999999999996`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 153.50567286626975`, 
   " and rate of adaptation ", 0.00006514417228548775],
  Editable->False]], "Print",
 CellChangeTimes->{3.6893681081874733`*^9, 3.689368308129064*^9, 
  3.6894248476745358`*^9, 3.689426192701605*^9, 3.68942656552505*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "3.9999999999999996`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "153.50567286626975`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.00006514417228548775`"}],
  SequenceForm[
  "Trait 2 q = ", 3.9999999999999996`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 153.50567286626975`, 
   " and rate of adaptation ", 0.00006514417228548775],
  Editable->False]], "Print",
 CellChangeTimes->{3.6893681081874733`*^9, 3.689368308129064*^9, 
  3.6894248476745358`*^9, 3.689426192701605*^9, 3.689426565526135*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "7", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d01_U1-\
1x10pn4_U2-1x10pn4_exp005.m\>\"", ",", "results"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.689364319722063*^9, 3.689364321585909*^9}, {
  3.689368769379485*^9, 3.6893687857980423`*^9}, {3.689369039035138*^9, 
  3.689369057874571*^9}, {3.689369309617503*^9, 3.689369314922521*^9}, {
  3.689426578334482*^9, 3.68942658321425*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Analyze", " ", "Motion", " ", "of", " ", "blob"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d01_U1-\
1x10pn4_U2-1x10pn4_exp005.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blob", "=", 
     RowBox[{"results", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4", ",", "5"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"blob", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"blob", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"blob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "blob", "]"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"blob", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"blob", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "Red"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", "7"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Large"}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Fitness Classes\>\"", ",", "\"\<Mutant Fitness Class\>\""}], 
           "}"}]}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<trait 1\>\"", ",", "\"\<trait 2\>\""}], "}"}]}], ",", 
         
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Evolution of blob\>\""}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "blob", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/plots/simtest_N-10p6_c1-0d01_c2-0d01_U1-1x10pn4_\
U2-1x10pn4_exp005.avi\>\"", ",", "plots"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688753611899971*^9, 3.68875363306802*^9}, {
   3.688753807755365*^9, 3.6887538457313223`*^9}, {3.68875389128337*^9, 
   3.688754009611796*^9}, {3.6887540957638063`*^9, 3.6887541148039513`*^9}, {
   3.688754167252035*^9, 3.688754167347722*^9}, {3.688754214835932*^9, 
   3.6887542677883377`*^9}, {3.6887543039004*^9, 3.688754394754507*^9}, {
   3.6887544373084917`*^9, 3.688754561578891*^9}, {3.688754616975334*^9, 
   3.6887546582210083`*^9}, {3.688755342246117*^9, 3.688755364661318*^9}, {
   3.6887556243565083`*^9, 3.688755624908174*^9}, {3.688756091644719*^9, 
   3.6887561071002703`*^9}, {3.688756152820294*^9, 3.688756328781499*^9}, {
   3.688756373269032*^9, 3.688756374660254*^9}, {3.689363846457808*^9, 
   3.689363848337645*^9}, {3.689364074065825*^9, 3.689364093378536*^9}, {
   3.689364124898225*^9, 3.689364125692884*^9}, {3.68936433859542*^9, 
   3.6893644878190117`*^9}, {3.68936879696751*^9, 3.689368797208914*^9}, 
   3.689369339837929*^9, {3.689424930025755*^9, 3.68942493419941*^9}, {
   3.6894259915000067`*^9, 3.689425995706009*^9}, {3.689426149217504*^9, 
   3.689426149833063*^9}, {3.689426305308445*^9, 3.689426345747137*^9}, {
   3.689426555343767*^9, 3.689426573159438*^9}, {3.689426693086137*^9, 
   3.6894266997342043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Examine", " ", "Trajectories", " ", "of", " ", "Trait", " ", "Mean", " ", 
    "Fitnesses"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "20000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d02_U1-\
2x10pn4_U2-1x10pn4_exp004.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mean2mean", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"results", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "}"}], ".", 
           RowBox[{
            RowBox[{"results", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", "popsize"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meanratio", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mean2mean", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", 
        RowBox[{
         RowBox[{"mean2mean", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "mean2mean", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"velocityratio", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]c2", "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}]}], 
         ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]c1", "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}]}], 
         ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "mean2mean", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"mean2mean", ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<mean fit trait 2 vs mean fit trait 1\>\"", "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<trait 1 mean fit\>\"", ",", "\"\<trait 2 mean fit\>\""}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"meanratio", ",", "velocityratio"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ratio of mean fitnesses\>\"", ",", 
        "\"\<ratio of theor-velocities\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<(mean-fit-2 / mean-fit-1) vs time\>\"", "}"}]}], ",", 
     
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<time\>\"", ",", "\"\<ratio\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Total Fitness Increase = \>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mean2mean", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[CapitalDelta]c1"}], " ", "+", 
      RowBox[{
       RowBox[{
        RowBox[{"mean2mean", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[CapitalDelta]c2"}]}], " ", ",", 
     " ", "\"\< and predicted increase by theoretical sum of rate of \
increases is \>\"", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[CapitalDelta]c2", "2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}], "/", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}]}], 
        "+", 
        RowBox[{
         SuperscriptBox["\[CapitalDelta]c1", "2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}], "/", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}]}]}],
        ")"}], "maxtime"}]}], " ", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Trait 1 Fitness Increase = \>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"mean2mean", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[CapitalDelta]c1"}], " ", ",", " ", 
     "\"\< and predicted increase by theoretical rate of increase is \>\"", 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[CapitalDelta]c1", "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}], "/", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}]}], 
       ")"}], "maxtime"}]}], " ", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Trait 2 Fitness Increase = \>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"mean2mean", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[CapitalDelta]c2"}], " ", ",", " ", 
     "\"\< and predicted increase by theoretical rate of increase is \>\"", 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[CapitalDelta]c2", "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}], "/", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}]}], 
       ")"}], "maxtime"}]}], " ", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6887582253382483`*^9, 3.688758501716803*^9}, {
   3.6887586427414093`*^9, 3.6887587981814127`*^9}, {3.688759207351345*^9, 
   3.688759219397995*^9}, {3.689364529346159*^9, 3.689364833018622*^9}, 
   3.689425925507498*^9, {3.6894268529670467`*^9, 3.6894268532618647`*^9}, {
   3.689427658202717*^9, 3.6894277958802423`*^9}, {3.689427834816782*^9, 
   3.689427923976491*^9}, {3.689428101497057*^9, 3.689428141507327*^9}, {
   3.6894282977271137`*^9, 3.689428395812796*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
/wN7sPoY
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"trait 1 mean fit\"", TraditionalForm], 
    FormBox["\"trait 2 mean fit\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotLabel->FormBox[
    RowBox[{"{", "\"mean fit trait 2 vs mean fit trait 1\"", "}"}], 
    TraditionalForm],
  PlotRange->{{0, 36.52175113481855}, {0, 169.23725415419045`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.688758354494632*^9, 3.6887583877098217`*^9}, {
   3.688758434985393*^9, 3.6887585025357122`*^9}, 3.688758798867324*^9, 
   3.688759222295253*^9, {3.689425915261757*^9, 3.689425926280485*^9}, 
   3.689427797853755*^9, 3.689428144382455*^9, 3.689428407835722*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
nSfujsEDP47C00GkPxYqWUt6qn6OZfpjob/wo7UJsWIsIu63qm/uZqwTi8DE
vpnq7xgjFsZav/keTxnbxEJxg1tRwxPG7rGYGDTm6KVfjDmxUDITFiTOJf2x
iD+Vc/cLPc/M/nrKIdOy6HkXxmLmPo+YWRmkPxYS4ncSxq4n/bFY+Pn45+m7
SX8shr3N3qy3h/THQhpty+sKSX8sPtcNNtMgf8XisM9O6q9wJfkfh76xFTpF
VuR/HCrE255kzCf/47D3DG/v8sukPw6vh6Wo3Kkl/XG4bGli0XSB9MfBd3+n
7nhiThwWPS6YEkjMjYP36GdT5tP+zDiUPLFRj2hiXBiH1DWncua9YVweh9vX
ykdKDCD9cVC6Yb340ATSH4cy3V1Z05VJfxxO3uNoRi4g/XGIkuz8GB5F+uOx
cpBnkeou0h+P49Ou3p28n/THw3n7wOTZxDrxGB4ScqX0NPV/PJ4jUX3EE+r/
eDQnajVqvKX+j4fEh3QP7aGU/3h0KTevvD2O8h8P486RSz9KU/7jsX+0odV8
Gcp/PFTnHBmjTlwej4SFGfu+jqf5F48D6+brBxE3xcNlww4tKeKOeHz4PqMq
jrg7HiZzdqxbOIrmXwJmtDnlVo+k+ZeAvEWSTkOIFRPwS+/8/CXDaP4lIKNN
X29kB+lPwPLnrpX/Wkl/ApQ52+uD7pL+BEx9/7Ww9DDlPwED8sOm6B6h/k9A
aAB/Ttkx6v8E7BEblmVTTv2fAEObEe7N36n/E8A5Pm/NuD/kfwKGS74YHChB
+hOwQrpr/1bijgT8De6YsIDma3cCJD3NM5/OI/2JcBwZ8KfDnvQnYsBspzwl
D9KfCPud41fu9SH9ibDuk1vGC6T5n4iBSpofE+Jo/ificsSVmP1cmv+JWPbF
NLJqI/mfiFcLo8q1DpP/iQh+KOLuuEz+J6KlZblj423yPxFHTDf8aHhE/iei
bILs07wO8j8R20vjbJcMpfNPIiwa+3wtZOn8019fKaslcRKdfxIhkku4Kz+Z
zj9JsLWasTBYlc4/SXBXMH43aDqdf5LwcP/T3uqpdP5JQlzXqWHTJ9L5JwnL
XXTs3eh9bpMEp9EX0o7nkf4klHa5iVm9IP+TsCDwaF7KJfI/CXrymQa/q8n/
JByYtjIs6iz5n4T7djdCPt8m/5OguDsrdFcb+Z+E7paoBRLfKP9J+P1Sasw8
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
MpX873++y36VBmaT/+mI05a329XP/wcsrr2N
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd0TlsBVcZBeAfqpSvoHBBMUEIWQihYTdrbiCA2Yewmf0SEjAkIRNWs192
l1O6vKXLKV3e0uWULm/pcjoMFSAQkr9XvKfv/To6OrpPPvfKsy+8NiL6v7/+
8/vfz/5U/OPJv//z1dek//2RHvsJfMCvw0f49XjAb8BvxG/Cx/jN+C34rXjE
b8Nvx+/A78Tvwu/G78En+L34ffj9+AP4g/hD+CmcHrvgeJo7jg9zx/ER7jie
4Y7jo9xxfIw7jo9zx3HKHccnuOP4JHccn+KO49PccXyGO47PcsfxOe44psdO
uOCG4/PkccENx7PkccENxxfI44Ibji+SxwU3HF8ijwtuOL5MHhfccHyFPC64
4TgjjwtuOL5KHhfccHyNPC644fg6eVxww/EN8rjghuOb5HHBDce3yOOCG45v
k8cFNxz5sQeccMYFV9xwx/Ed+nHCGRdcccMdx3P044QzLrjihjuO79KPE864
4Iob7jiepx8nnHHBFTfccbxAP04444Irbrjj+B79OOGMC6644Y7j+/TjhDMu
uOKGO45z+nHCGRdcccMdxw/oxwlnXHDFDXccP6QfJ5xxwRU33HG8SD9OOOOC
K26443iJfpxwxgVX3HDH8TL9OOGMC6644Y7jR/TjhDMuuOKGO45X6McJZ1xw
xQ13HPNjH/CAR5zwhDOeccELrnjFDW+44x3Hq+zHAx5xwhPOeMYFL7jiFTe8
4Y53HD9mPx7wiBOecMYzLnjBFa+44Q13vOP4CfvxgEec8IQznnHBC654xQ1v
uOMdx0/Zjwc84oQnnPGMC15wxStueMMd7zh+xn484BEnPOGMZ1zwgiteccMb
7njH8XP24wGPOOEJZzzjghdc8Yob3nDHO45fsB8PeMQJTzjjGRe84IpX3PCG
O95xXLAfD3jECU844xkXvOCKV9zwhjvecfyS/XjAI054whnPuOAFV7zihjfc
8Y7jV+zHAx5xwhPOeMYFL7jiFTe84Y53HL9mPx7wiBOecMYzLnjBFa+44Q13
vOP4DfvxgEec8IQznnHBC654xQ1vuOMdx2/Zjwc84oQnnPGMC15wxStueMMd
7zh+x3484BEnPOGMZ1zwgiteccMb7njH8Xv24wGPOOEJZzzjghdc8Yob3nDH
O47y2E/gAz7CAz7GIz7BCZ/iCZ/hjM/xjC9wwZd4wVe44mu84hvc8C3e8B3u
+B7v+AHHH3h/fMBHeMDHeMQnOOFTPOEznPE5nvEFLvgSL/gKV3yNV3yDG77F
G77DHd/jHT/g+CPvjw/4CA/4GI/4BCd8iid8hjM+xzO+wAVf4gVf4Yqv8Ypv
cMO3eMN3uON7vOMHHH/i/fEBH+EBH+MRn+CET/GEz3DG53jGF7jgS7zgK1zx
NV7xDW74Fm/4Dnd8j3f8gOPPvD8+4CM84GM84hOc8Cme8BnO+BzP+AIXfIkX
fIUrvsYrvsEN3+IN3+GO7/GOH3D8hffHB3yEB3yMR3yCEz7FEz7DGZ/jGV/g
gi/xgq9wxdd4xTe44Vu84Tvc8T3e8QOOv/L++ICP8ICP8YhPcMKneMJnOONz
POMLXPAlXvAVrvgar/gGN3yLN3yHO77HO37A8bf/+18P0vpp
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0., 736.}, {0, 9.80958403932437}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"time\"", TraditionalForm], 
       FormBox["\"ratio\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> FormBox[
       RowBox[{"{", "\"(mean-fit-2 / mean-fit-1) vs time\"", "}"}], 
       TraditionalForm], PlotRange -> {{0., 736.}, {0, 9.80958403932437}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"ratio of mean fitnesses\"", "\"ratio of theor-velocities\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.688758354494632*^9, 3.6887583877098217`*^9}, {
   3.688758434985393*^9, 3.6887585025357122`*^9}, 3.688758798867324*^9, 
   3.688759222295253*^9, {3.689425915261757*^9, 3.689425926280485*^9}, 
   3.689427797853755*^9, 3.689428144382455*^9, 3.6894284079025784`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Fitness Increase = \"\>", "\[InvisibleSpace]", 
   "3.7491545392172014`", 
   "\[InvisibleSpace]", "\<\" and predicted increase by theoretical sum of \
rate of increases is \"\>", "\[InvisibleSpace]", "6.030744396696898`"}],
  SequenceForm[
  "Total Fitness Increase = ", 3.7491545392172014`, 
   " and predicted increase by theoretical sum of rate of increases is ", 
   6.030744396696898],
  Editable->False]], "Print",
 CellChangeTimes->{3.689427797921892*^9, 3.6894281444526863`*^9, 
  3.689428407904036*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 Fitness Increase = \"\>", "\[InvisibleSpace]", 
   "0.3644094561333924`", 
   "\[InvisibleSpace]", "\<\" and predicted increase by theoretical rate of \
increase is \"\>", "\[InvisibleSpace]", "1.8960702814866677`"}],
  SequenceForm[
  "Trait 1 Fitness Increase = ", 0.3644094561333924, 
   " and predicted increase by theoretical rate of increase is ", 
   1.8960702814866677`],
  Editable->False]], "Print",
 CellChangeTimes->{3.689427797921892*^9, 3.6894281444526863`*^9, 
  3.689428407904755*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 Fitness Increase = \"\>", "\[InvisibleSpace]", 
   "3.3847450830838093`", 
   "\[InvisibleSpace]", "\<\" and predicted increase by theoretical rate of \
increase is \"\>", "\[InvisibleSpace]", "4.13467411521023`"}],
  SequenceForm[
  "Trait 2 Fitness Increase = ", 3.3847450830838093`, 
   " and predicted increase by theoretical rate of increase is ", 
   4.13467411521023],
  Editable->False]], "Print",
 CellChangeTimes->{3.689427797921892*^9, 3.6894281444526863`*^9, 
  3.689428407905231*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Examine", " ", "Trajectories", " ", "of", " ", "Trait", " ", "Mean", " ", 
    "Fitnesses"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.01", ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "20000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d01_U1-\
1x10pn4_U2-1x10pn4_exp005.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mean2mean", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"results", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "}"}], ".", 
           RowBox[{
            RowBox[{"results", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", "popsize"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meanratio", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mean2mean", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", 
        RowBox[{
         RowBox[{"mean2mean", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "mean2mean", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"velocityratio", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]c2", "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}]}], 
         ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]c1", "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}]}], 
         ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "mean2mean", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"mean2mean", ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<mean fit trait 2 vs mean fit trait 1\>\"", "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<trait 1 mean fit\>\"", ",", "\"\<trait 2 mean fit\>\""}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"meanratio", ",", "velocityratio"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ratio of mean fitnesses\>\"", ",", 
        "\"\<ratio of theor-velocities\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"{", "\"\<(mean-fit-2 / mean-fit-1) vs time\>\"", "}"}]}], ",", 
     
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<time\>\"", ",", "\"\<ratio\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Total Fitness Increase = \>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mean2mean", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[CapitalDelta]c1"}], " ", "+", 
      RowBox[{
       RowBox[{
        RowBox[{"mean2mean", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[CapitalDelta]c2"}]}], " ", ",", 
     " ", "\"\< and predicted increase by theoretical sum of rate of \
increases is \>\"", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[CapitalDelta]c2", "2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}], "/", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}]}], 
        "+", 
        RowBox[{
         SuperscriptBox["\[CapitalDelta]c1", "2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}], "/", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}]}]}],
        ")"}], "maxtime"}]}], " ", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Trait 1 Fitness Increase = \>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"mean2mean", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[CapitalDelta]c1"}], " ", ",", " ", 
     "\"\< and predicted increase by theoretical rate of increase is \>\"", 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[CapitalDelta]c1", "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}], "/", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "^", "2"}]}]}], 
       ")"}], "maxtime"}]}], " ", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Trait 2 Fitness Increase = \>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"mean2mean", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[CapitalDelta]c2"}], " ", ",", " ", 
     "\"\< and predicted increase by theoretical rate of increase is \>\"", 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[CapitalDelta]c2", "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"popsize", " ", "\[CapitalDelta]c2"}], "]"}]}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}]}], ")"}], "/", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalDelta]c2", "/", "U2"}], "]"}], "^", "2"}]}]}], 
       ")"}], "maxtime"}]}], " ", "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6887582253382483`*^9, 3.688758501716803*^9}, {
   3.6887586427414093`*^9, 3.6887587981814127`*^9}, {3.688759207351345*^9, 
   3.688759219397995*^9}, {3.689364529346159*^9, 3.689364833018622*^9}, 
   3.689425925507498*^9, {3.6894268529670467`*^9, 3.6894268532618647`*^9}, {
   3.689426910972733*^9, 3.689426916701551*^9}, {3.689426949958798*^9, 
   3.6894269520937643`*^9}, {3.68942813479959*^9, 3.6894281350478373`*^9}, {
   3.6894281921182737`*^9, 3.689428192512931*^9}, 3.6894284041719923`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
fe3c1Si8m/fjbYM7pL+V1vR5r8b/AMc8J6c=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"trait 1 mean fit\"", TraditionalForm], 
    FormBox["\"trait 2 mean fit\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotLabel->FormBox[
    RowBox[{"{", "\"mean fit trait 2 vs mean fit trait 1\"", "}"}], 
    TraditionalForm],
  PlotRange->{{0, 63.561247183809655`}, {0, 77.38859502311998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.688758354494632*^9, 3.6887583877098217`*^9}, {
   3.688758434985393*^9, 3.6887585025357122`*^9}, 3.688758798867324*^9, 
   3.688759222295253*^9, {3.689425915261757*^9, 3.689425926280485*^9}, 
   3.689426919257182*^9, 3.6894269540814657`*^9, 3.689428194102005*^9, 
   3.689428433928238*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
+bRIxmwrwjzDOXqDdtH5FKHl8JwlUg2zpwjRtVWHNQZ0X4ig9ebJ8L69mYUi
TJwjUY0YQPeHCB97ZV9rs2HOEWGdgWGT0p7uExE673duTJ/GXCJC3jALrx4B
dL+0P2/SMD9NMHONCFO8hDqyo3TfiFA5anvJk0/Mre3WHfRxwx+6f8RYsydZ
oW38huUXw6Vvzz6jzZn5YkwQ8xcIXJhtxbj1Yk5iqzczxODOSoK6BDJ7itH1
fve7oWHMAnH7/deyraucWShGdqCkrDeZE6PZ7bLy23zmHDHeR7gd+0UuEMPI
z3qjThZziRhNm7eePkDrajGGP2lu1KP1GjEqX43Ks1nGrBHj7VLffNVK5tb2
548MPxK5lZmXjFyPnkXa2yh/Mnhps65+3Ev5k+F6501Gm0ELy5+MrnG2QTnd
mZGMFzMtQ/WHMXsmo6OfwX47B2ZBMg4M2tI0MIBZmAzn0CYdqZiZS8bgKofI
DBlzTjLsIvc6WSiYC5KxTaR7onE1c0kynhwfGjKwhFmdjGn8xu4lF5hrkmF4
+tr1nGpmTTKmXrR0vVfH3JqM96PkC+a/ZualIKVw15acFmajFHx/dFz7F5mf
gh2+Zief1FL+FDi8Mvy8mvZHCkY+Xl9TvZfyp8DvYNuikWRBChKu9ImbzaP8
KXA7fdZZ9Zvmn4KxFQ3CgY00/xS8NR76++8bNP8U7HvU3ZJ3nuafAuVM3VP7
TtD8U5CUYCUacJzmn4Knmmddux6j+adA67Dr0pelNP8U/C0+5baJzEtF+fJb
kT/Kaf6puL/xu/jSNZp/KgpWm4te36X3PxVj1stWODfR+5+Kpoysxpkf6P1P
xdotyh93QflTEatVoM7zp/ypcLxbvysoiOafiurNUToXi2n+qQi7OKXXf6dp
/qlImpI7Ze8Zmn8qOg6JrpFZv2X5U3Em++yvV07MNalY9aqnvSiFWZOK3x8a
Q4LnM7em4t8ft6q8NzLzJDBT69YsLGU2kkBn0bW4ivPMfAkqMxa0DqlmtpVg
85bQxeInzJDA+5H+zqxWZk8JnPhf36a+ZxZIYBJ6Jc7wM7NQgjP9i+/qjWD/
3spJ4CHdIN84hjlHgpraJ5VlXswFEjQm3i1sDWAukWBt83O3qCJmtQRXwid1
tChmrpFgodRJ981hZo0ENx9sWu81pJXll+Cd7xmX5cOZeWkQR8yaxs9kNkpD
rN2t9TbzmflpGO21qCJwKbNtGop3D38xZTUz0pDVtLc2bh+zZxrKqo880D3M
LEhD6cojndqOMwvT4GCt89eEU8xcGhyvZcGzkjknDZLUdJ2cOuaCNJw0cHkg
vctckobQueeHJd1nVqchc8+jkVJyTRom5wQva33ArEnDEZHbxAcNlD8Njdv2
7TRrpvxS2GSKs4JfUX4pxH4PjPd/oPxSzLHTPr7sG+WXopvqxIay35RfCvOF
S9aVdnzP8rd/femWJXf0mQVS3D4lnvW0G7NQihmBg17lmzFzUnTsZ/ijjpwj
hbPnubC1PZkLpCguGvwhl1wixbDB41+c6MuslkJ3a8sPniVzjRT9fdy7u9sw
a6SorL3UsIrcKoWjo1+x7TBmngz/HfXr8c2W2UiGjFF7IpaPYebLsGzzSRs9
J2ZbGfjn1+hHuTBDhsJbfqnxcyi/DH8M1sQGrKP8Mtzu/2/+pQrKL0Oc/R+z
1lOUX4a6+X9Jg89TfhkM2qaNDb5M+WWQDCmcInhG+dvdZVTusbeUX4ZvdXNv
3SDXyFCied/rFlkjw3HBJNOljZRfhuhRA819HlP+dPSUhDx0IRulw77b2gy/
B5Q/HbL7z+dwNZQ/HT9sBi1aRUY6FluuX1VE9kyHSaNJ4Ipayp+OO8NyxItv
Uf50qOqXlTbfofztvvx+964Wyp+OCQdGC+a+o/ztn/9m+23VJ8qfDp+lq490
+0n50xE28G7d9b8+sPzp2F2l/DWuD7MmHSGFUdq3BjC3piPmz6AO/gOZeXL8
NS22YdYQZiM5vs8P+TRpKDNfjusBzq7DHJht5YiYY5vZ6sgMOa7e2130fiyz
pxwJet+/NbgwC+QQxGZHbSEL5fhikutW4MTMyWF56ULmD6rPkeOXi2vHc/8w
F8jb758etf8YMpfI8drNu+uh95Rfjufjdh559ormL8cf3jKvyS9o/nLkjQx5
lVFI85fj60g7q+CVNP8MdFIe/m+DhOafgXzHXButUJp/Bhp49fPvkG0zIDnV
su10LM0/Axt1I/9ciKP5Z0Dbv8zGLYHmnwE3V3Fop2Safwa8KxxeyHJp/hm4
/TzkfuUmmn8GYsesONhymOafgcPTPq8d/4Tmn4FCubfgWgfWD3UGTndaNyqx
L80/A0vbPHxOWNP8M5A816XIyp3m357XZJHhzSk0fwWGV5QcsQml+Ssw5FD+
P0nJNH8FXsb3PPcoi+avQHOLh36PBTR/BSx4gc1Gi2j+CtQbhlwto3WBAuPd
T9Z5zaf5K3DEVsfJTEHzV+CdltFbx3SavwKlC9eVDJDS/BV41attV04azV8B
93Up8oEJlF+B3+E+l/KDKb8CGc9bTxuSNQoYHDV92j+A8isQvRmRsWSeEt0c
3Z4EBFJ+JVqPWtdeiKb8SsTsda21iaP8Ssw3neD7lAwlfmomJAyNp/xKtK3Z
1nkQWaDENYukdYpYyq+E/lBjuxsxlF+J5iv3x1yl/XKUyBnQM7OM1guUOHVs
1Ug51ZcoYenXsMEykfIr4fXgmaW5mPIrcWJMRNwo6pdGCb1hPd6uyqf8Ssye
LL+aXkj5Vejs2tsvajflV2FUy+W7gr2UX4XlnQaKVx+i/Co8ONApP7qU8qvQ
e/eGLwOOUn4VasLHBe4qo/wqPKl22h1JFqpgpL8yqPcxyq+Czsji4fupPkeF
T+a/jwUdpvwqFJv65h8spvwqvNau8pi2h/KrcPZAtsRgE+VXwXq7xsIym/Kr
EK117fWMCMqvwoirswJM6H3ncfi0IEOknsjckYNml8eNfhbUDw4OA+c5GdP5
MuOw5LzJmL50H/E5NM0QeKi1mK05/O06YYnLL7ovOFTUpT0sJ4/mIHv1Iu3A
b7o/OATITEsPkt053F+wokSbPs+Tw0iJ6uRoqvfjUFCfbtqVLODQclOerkff
D2I4LHvwU6voD903HBwnHOuvRfeFlINPmWjV0I7Ufw4mLcdtOWPmxRwijn/U
N+9B8+CQMGbn/ogZzBs4dHte+SRrFs2Hw4ALXrXVs5n3csDQowE/ySUcVnPv
HoWSyzlMX9Q3zHsmzY/D2Uv3KzqRL3Ewntj3i/lkmieH4qXmz1zJ9zhsDKx3
zyJrOEh39Kw558nczMH0/etjnen8t3J4UPR7g/YK5q8cLtwZ1VRP7xMvE5Z8
V6Ou92n+mXC0Mr1+/SHNPxOjrQrej9Zh/1/CLBNb06wfb+3KzM9E/vZBh1b0
YLbOxLt1YUoTO2bbTIwod4rOGsk8OhMtT0Tj/eOZkYmnzeFFU1OZ3TNxwvyb
vUDO7JmJhnP5tqaZzH6ZWP/5S+mnpcyCTFi/kj2uWMIck4lpLhtOxy5gFmbi
SoDGxLD98/4HsLtclw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxdzTsMIEUdBvB/qK7cguIKioUQcyGELCh4AsKAPA7lsZ6CBwiOKHDyXJDH
yXPoLLe0nNJyS8spLbe0nJJyS0swFmR/U8w/v3z58t362vtXX78pIu76/vvf
/f87Hj7fSGdfwAO+GV/Et+AR34Zvxz/Cl/Ad+E58F57w3fge/GP8E3wvvg//
FF/GP8P34wfwg/jn+CH8ME5nFxyPkON4lBzHL8hxPEaO43FyHE+Q43iSHMcV
chxPkeP4JTmOX5HjeJocxzPkOJ4lx/EcOY757IQLbjh+TR8X3HBcpY8Lbjh+
Qx8X3HD8lj4uuOF4nj4uuOF4gT4uuOH4HX1ccMNxjT4uuOF4kT4uuOF4iT4u
uOF4mT4uuOH4PX1ccMPxCn1ccMPxKn1ccMPxB/q44IYjnz3ihDMuuOKGO44/
so8TzrjgihvuOF5jHyecccEVN9xx/Il9nHDGBVfccMfxZ/ZxwhkXXHHDHcfr
7OOEMy644oY7jjfYxwlnXHDFDXccb7KPE8644Iob7jius48TzrjgihvuOP7C
Pk4444IrbrjjeIt9nHDGBVfccMfxNvs44YwLrrjhjuMd9nHCGRdcccMdx7vs
44QzLrjihjuO99jHCWdccMUNdxzvs48TzrjgihvuOJazBzziCSc844wXXPCK
K95wwzvu+MDxwdkDHvGEE55xxgsueMUVb7jhHXd84Pjw7AGPeMIJzzjjBRe8
4oo33PCOOz5w/PXsAY94wgnPOOMFF7ziijfc8I47PnB8dPaARzzhhGec8YIL
XnHFG254xx0fOD4+e8AjnnDCM854wQWvuOINN7zjjg8cn5w94BFPOOEZZ7zg
gldc8YYb3nHHB45Pzx7wiCec8IwzXnDBK654ww3vuOMDx42zBzziCSc844wX
XPCKK95wwzvu+MDxt7MHPOIJJzzjjBdc8Ior3nDDO+74wPHZ2QMe8YQTnnHG
Cy54xRVvuOEdd3zg+PzsAY94wgnPOOMFF7ziijfc8I47PnB8cfaARzzhhGec
8YILXnHFG254xx0fOL48e8AjnnDCM854wQWvuOINN7zjjg8cX5094BFPOOEZ
Z7zggldc8YYb3nHHB46vzx7wiCec8IwzXnDBK654ww3vuOMDRzn7Ah7wRTzi
S3jCl3HCV/CMr+GMr+MF38AF/x2v+B+44n/iDf8LN/xvvOP/4I6/xQf+L45v
zr6AB3wRj/gSnvBlnPAVPONrOOPrePnB3wGo7+xy
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0., 558.}, {0, 1.4426526624586722`}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"time\"", TraditionalForm], 
       FormBox["\"ratio\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> FormBox[
       RowBox[{"{", "\"(mean-fit-2 / mean-fit-1) vs time\"", "}"}], 
       TraditionalForm], PlotRange -> {{0., 558.}, {0, 1.4426526624586722`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"ratio of mean fitnesses\"", "\"ratio of theor-velocities\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.688758354494632*^9, 3.6887583877098217`*^9}, {
   3.688758434985393*^9, 3.6887585025357122`*^9}, 3.688758798867324*^9, 
   3.688759222295253*^9, {3.689425915261757*^9, 3.689425926280485*^9}, 
   3.689426919257182*^9, 3.6894269540814657`*^9, 3.689428194102005*^9, 
   3.689428433993927*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Fitness Increase = \"\>", "\[InvisibleSpace]", 
   "1.4094984220692963`", 
   "\[InvisibleSpace]", "\<\" and predicted increase by theoretical sum of \
rate of increases is \"\>", "\[InvisibleSpace]", "2.6057668914195102`"}],
  SequenceForm[
  "Total Fitness Increase = ", 1.4094984220692963`, 
   " and predicted increase by theoretical sum of rate of increases is ", 
   2.6057668914195102`],
  Editable->False]], "Print",
 CellChangeTimes->{3.689428194169736*^9, 3.689428433995344*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 Fitness Increase = \"\>", "\[InvisibleSpace]", 
   "0.6356124718380965`", 
   "\[InvisibleSpace]", "\<\" and predicted increase by theoretical rate of \
increase is \"\>", "\[InvisibleSpace]", "1.3028834457097551`"}],
  SequenceForm[
  "Trait 1 Fitness Increase = ", 0.6356124718380965, 
   " and predicted increase by theoretical rate of increase is ", 
   1.3028834457097551`],
  Editable->False]], "Print",
 CellChangeTimes->{3.689428194169736*^9, 3.689428433996249*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 Fitness Increase = \"\>", "\[InvisibleSpace]", 
   "0.7738859502311998`", 
   "\[InvisibleSpace]", "\<\" and predicted increase by theoretical rate of \
increase is \"\>", "\[InvisibleSpace]", "1.3028834457097551`"}],
  SequenceForm[
  "Trait 2 Fitness Increase = ", 0.7738859502311998, 
   " and predicted increase by theoretical rate of increase is ", 
   1.3028834457097551`],
  Editable->False]], "Print",
 CellChangeTimes->{3.689428194169736*^9, 3.6894284339969263`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.02", ",", 
       RowBox[{"2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "60000"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fulldata", ",", "verbose", ",", "veryverbose"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "False", ",", "False"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", " ", "Regimes"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Testing", " ", "two", " ", "trait", " ", "evolution"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genotypeabundances", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"popsize", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "-", "1"}], 
          RowBox[{
           SuperscriptBox["r", 
            RowBox[{"Length", "[", "genotypes", "]"}]], "-", "1"}]], ")"}], 
        SuperscriptBox["r", 
         RowBox[{"i", "-", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "genotypes", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688764231871097*^9, 3.688764253149859*^9}, {
   3.688764283894946*^9, 3.688764330215361*^9}, {3.688764372895424*^9, 
   3.688764386079885*^9}, {3.688764418599378*^9, 3.688764446622428*^9}, {
   3.6887644901999607`*^9, 3.688764511215309*^9}, {3.688764588271337*^9, 
   3.688764870352583*^9}, 3.68936151208447*^9, {3.6894270286207933`*^9, 
   3.68942713690736*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "4.708735280542232`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "105.4813220547839`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.00009480351407433339`"}],
  SequenceForm[
  "Trait 1 q = ", 4.708735280542232, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 105.4813220547839, 
   " and rate of adaptation ", 0.00009480351407433339],
  Editable->False]], "Print",
 CellChangeTimes->{3.688764883583211*^9, 3.688765003577957*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "3.7383519587043743`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "96.74281185269709`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0.0002067337057605115`"}],
  SequenceForm[
  "Trait 2 q = ", 3.7383519587043743`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 96.74281185269709, 
   " and rate of adaptation ", 0.0002067337057605115],
  Editable->False]], "Print",
 CellChangeTimes->{3.688764883583211*^9, 3.6887650035786657`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "Simulations"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParallelDo", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"results", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"RunSimulationCheckEachMutation2", "[", 
          RowBox[{
          "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
           "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes",
            ",", "genotypeabundances"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "\"\<~/Documents/kgrel2d/data/convtest/convtest_N-10p6_c1-0d01_c2-\
0d02_U1-1x10pn4_U2-2x10pn4_exp\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], ",", 
        "results", ",", "\"\<Data\>\""}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<exp \>\"", ",", "i"}], "]"}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", "35"}], "}"}]}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6887648961988583`*^9, 3.688764989575225*^9}, {
  3.688765573464697*^9, 3.688765607447715*^9}, {3.688765664176187*^9, 
  3.688765679551775*^9}, {3.688825000306798*^9, 3.6888250028571978`*^9}, {
  3.689427162395968*^9, 3.689427170043744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Analyzez", " ", "convergence", " ", "data"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meanratios", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "35"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"results", "=", 
        RowBox[{"Import", "[", 
         RowBox[{
         "\"\<~/Documents/kgrel2d/data/convtest/convtest_N-10p6_c1-0d01_c2-\
0d02_U1-1x10pn4_U2-2x10pn4_exp\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"meanratios", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "35"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"StandardDeviation", "[", "meanratios", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Mean", "[", "meanratios", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StandardDeviation", "[", "meanratios", "]"}], "/", 
    RowBox[{"Mean", "[", "meanratios", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"meanratios", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "9"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<35 simulation results of ratios\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<simulation\>\"", ",", "\"\<ratio of means\>\""}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6888247157721443`*^9, 3.6888247666718807`*^9}, {
  3.688824802887982*^9, 3.688824942744104*^9}, {3.6888249899549294`*^9, 
  3.688824992993059*^9}, {3.688825080370143*^9, 3.688825108360354*^9}, {
  3.688825155889594*^9, 3.688825197224382*^9}, {3.689427211514481*^9, 
  3.689427285466964*^9}, {3.689427328779024*^9, 3.689427437409854*^9}}],

Cell[BoxData["0.6475335009938762`"], "Output",
 CellChangeTimes->{
  3.6888249448136663`*^9, 3.688825018955332*^9, {3.6888250842021523`*^9, 
   3.688825111640356*^9}, {3.688825183945795*^9, 3.688825200258183*^9}, 
   3.6894272234097013`*^9, 3.689427294377708*^9, 3.6894273830191803`*^9, {
   3.689427413890274*^9, 3.68942744032051*^9}}],

Cell[BoxData["7.404361842553456`"], "Output",
 CellChangeTimes->{
  3.6888249448136663`*^9, 3.688825018955332*^9, {3.6888250842021523`*^9, 
   3.688825111640356*^9}, {3.688825183945795*^9, 3.688825200258183*^9}, 
   3.6894272234097013`*^9, 3.689427294377708*^9, 3.6894273830191803`*^9, {
   3.689427413890274*^9, 3.689427440321871*^9}}],

Cell[BoxData["0.08745297903628232`"], "Output",
 CellChangeTimes->{
  3.6888249448136663`*^9, 3.688825018955332*^9, {3.6888250842021523`*^9, 
   3.688825111640356*^9}, {3.688825183945795*^9, 3.688825200258183*^9}, 
   3.6894272234097013`*^9, 3.689427294377708*^9, 3.6894273830191803`*^9, {
   3.689427413890274*^9, 3.6894274403231363`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQEf7H9XStx8/lrKASrgkOJ90FthGozP4XDZQkA7
ygTGF3CI3eG4RFRFHsoXcdi1TDLznJgclC/h0DJ/uePDGdJQvoxD+TKbSdl6
MPUKDmkd5Vf2N8PMU3JI1PPUDDoH06/iwP03xPL2ZBhfzWF/xVQ17j+yUL6G
w8ubmzaxrFOA8rUcLt9V2DOhRhLK13H4mcUlJWwOk9dzUI9h/xslB9Nv4GCq
ybPCSgQmb+jw7dZDc+PfML6RQ41zCdvZDTD1xg7Nb7VKmXlgfBOHH/fXTP2y
G6be1IHx0ZwDk4pg9ps5LJm1YpLzFxko39zh/t+/gad6YeotHD4e39PmPk0C
yrd0SLffu/TtCpi8lcPuxmef2VVh+q0dMjoXWbO7weRtHLy39Wx304GFr63D
+jP8ix9xwNxn58DdcLLSeR4svO0dXgU+M0y3h8k7OMwPKRVccQIq3+DgkPDu
WtemSph9jg4PYr7cLmyH8hscHSpnfZO4HCDjAACaD4pv
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"simulation\"", TraditionalForm], 
    FormBox["\"ratio of means\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"35 simulation results of ratios\"", TraditionalForm],
  PlotRange->{{0., 35.}, {0, 9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6888249448136663`*^9, 3.688825018955332*^9, {3.6888250842021523`*^9, 
   3.688825111640356*^9}, {3.688825183945795*^9, 3.688825200258183*^9}, 
   3.6894272234097013`*^9, 3.689427294377708*^9, 3.6894273830191803`*^9, {
   3.689427413890274*^9, 3.6894274403432827`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Check", " ", "Evolution", " ", "in", " ", "1", " ", "dimension", " ", 
      "to", " ", "match", " ", "Desai", " ", "and", " ", "Fisher", " ", 
      "simulations", " ", "fig", " ", "5"}], " ", "&"}], " ", "6", " ", "a"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.01", ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", 
       RowBox[{"0", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "50000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fulldata", ",", "verbose", ",", "veryverbose", ",", "exactqv"}], "}"}],
      "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "False", ",", "False", ",", "False"}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simv", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "21"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simq", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "21"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"genotypes", ",", "genotypeabundances"}], "}"}], "=", 
     RowBox[{"getInitialDFdistribution", "[", 
      RowBox[{"popsize", ",", "\[CapitalDelta]c1", ",", "U1", ",", "1"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688695558225275*^9, 3.688695577769321*^9}, {
   3.6886976542927437`*^9, 3.688697703019405*^9}, {3.6886977463208647`*^9, 
   3.688697752537838*^9}, 3.688698185549271*^9, {3.68869821919487*^9, 
   3.688698223223608*^9}, {3.6886986620524282`*^9, 3.6886986629004*^9}, {
   3.6886988603750963`*^9, 3.6886988664805202`*^9}, 3.688698904555194*^9, {
   3.688699337369549*^9, 3.688699342189859*^9}, {3.688699460908698*^9, 
   3.6886994643065567`*^9}, {3.688699585083333*^9, 3.688699591745851*^9}, {
   3.6886999821022263`*^9, 3.688700108974204*^9}, {3.688700161987878*^9, 
   3.688700213709936*^9}, 3.688701092035573*^9, {3.688706294970908*^9, 
   3.688706295860649*^9}, {3.688706362192438*^9, 3.688706363363892*^9}, {
   3.688706394895247*^9, 3.68870639920033*^9}, 3.6887078089313726`*^9, {
   3.689361436747138*^9, 3.68936144590728*^9}, {3.6893617538262377`*^9, 
   3.689361937297886*^9}, {3.6893621616660337`*^9, 3.689362163651622*^9}, {
   3.689362350506291*^9, 3.689362365490233*^9}, {3.68943922549607*^9, 
   3.689439246335281*^9}, {3.689439544831192*^9, 3.689439545345488*^9}, {
   3.689439864781389*^9, 3.689439893403941*^9}, {3.68944115054305*^9, 
   3.689441170445846*^9}, {3.6894413018703547`*^9, 3.6894413035335417`*^9}, {
   3.689441662995769*^9, 3.689441663659277*^9}, {3.689441708964651*^9, 
   3.6894417091735897`*^9}, {3.689441785347884*^9, 3.6894417854585953`*^9}, {
   3.689441816667884*^9, 3.689441816759532*^9}, 3.6894423473370237`*^9, {
   3.68944276885594*^9, 3.689442781637012*^9}, {3.689442926620921*^9, 
   3.689442944764956*^9}, 3.689442981284316*^9, {3.689443019870043*^9, 
   3.689443020409173*^9}, {3.689443391596382*^9, 3.689443420657501*^9}, {
   3.6894437010652018`*^9, 3.689443727896481*^9}, {3.689443766033156*^9, 
   3.68944379239709*^9}, {3.6894444706310797`*^9, 3.689444470736638*^9}, {
   3.689444576565987*^9, 3.6894445781250973`*^9}, {3.689444681997616*^9, 
   3.689444682080071*^9}, {3.689450767934025*^9, 3.689450780845628*^9}, {
   3.689451554600609*^9, 3.689451606848484*^9}, {3.689454982231722*^9, 
   3.6894549928859386`*^9}, {3.689455040576201*^9, 3.689455043624084*^9}, {
   3.689455150486496*^9, 3.689455152205962*^9}, {3.689530693098277*^9, 
   3.6895307132184896`*^9}, {3.689530744515786*^9, 3.68953076167528*^9}, {
   3.689537154580268*^9, 3.6895371549799843`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"results", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"RunSimulationCheckEachMutation2", "[", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"(", 
              RowBox[{"4", "+", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "/", "5"}], ")"}]}], ")"}]],
             ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", 
            ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", ",", 
            RowBox[{
             FractionBox[
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"4", "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "/", "5"}], ")"}]}], 
                ")"}]}], "popsize"], "genotypeabundances"}]}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"simv", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"4", "+", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "5"}], ")"}]}], ")"}], 
          ",", 
          RowBox[{
           SuperscriptBox["10", "5"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"results", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "4"}], "]"}], "]"}], "-", 
              RowBox[{"results", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ")"}], "/", 
            RowBox[{"results", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}]}]}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"simq", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"4", "+", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "5"}], ")"}]}], ")"}], 
          ",", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{"results", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "9"}], "]"}], "]"}], "]"}], "/", 
           "\[CapitalDelta]c1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "21"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thryvest", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"(", 
            RowBox[{"j", "/", "25"}], ")"}]}], ")"}], ",", 
         FractionBox[
          RowBox[{
           SuperscriptBox["10", "5"], " ", 
           SuperscriptBox["\[CapitalDelta]c1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"\[CapitalDelta]c1", " ", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{"4", "+", 
                   RowBox[{"(", 
                    RowBox[{"j", "/", "25"}], ")"}]}], ")"}]}]}], "]"}]}], 
             "-", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalDelta]c1", "/", "U1"}], "]"}], "2"]]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thryqest", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"(", 
            RowBox[{"j", "/", "25"}], ")"}]}], ")"}], ",", 
         RowBox[{"2", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"4", "+", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "/", "25"}], ")"}]}], ")"}],
              "-", "2"}], ")"}], "/", "3"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thryqext", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"(", 
            RowBox[{"j", "/", "25"}], ")"}]}], ")"}], ",", 
         RowBox[{"getTransQ", "[", 
          RowBox[{"\[CapitalDelta]c1", ",", "U1", ",", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"4", "+", 
              RowBox[{"(", 
               RowBox[{"j", "/", "25"}], ")"}]}], ")"}]}], ",", "True"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-vary_c1-0d01_c2-0d00_U1-\
1x10pn5_U2-0x10pn4_exp006.m\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "simv", ",", "thryvest", ",", "simq", ",", "thryqest", ",", 
        "thryqext"}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688697705911489*^9, 3.6886977385901012`*^9}, {
   3.688697851586619*^9, 3.688697881514435*^9}, 3.688699542613991*^9, 
   3.6886996145602417`*^9, {3.688701974370201*^9, 3.6887019797698917`*^9}, {
   3.688706327590456*^9, 3.6887063285022173`*^9}, {3.688706468965032*^9, 
   3.688706478057048*^9}, {3.688707040023732*^9, 3.688707053374549*^9}, {
   3.688707990485836*^9, 3.6887080244590893`*^9}, {3.6887081595099154`*^9, 
   3.688708174075613*^9}, {3.689361633370254*^9, 3.689361662274227*^9}, {
   3.689361981385914*^9, 3.689362020777807*^9}, 3.689362061731192*^9, {
   3.689362102969953*^9, 3.6893621119619417`*^9}, 3.689365058890818*^9, {
   3.689369504882784*^9, 3.689369508802414*^9}, {3.689442963587603*^9, 
   3.6894429880750113`*^9}, {3.6894434833378687`*^9, 
   3.6894435208008347`*^9}, {3.6894435942490053`*^9, 3.689443682593759*^9}, {
   3.689443755064299*^9, 3.6894437583599863`*^9}, {3.689443799439836*^9, 
   3.6894438106958513`*^9}, {3.68944384447136*^9, 3.68944393676649*^9}, {
   3.689443969175912*^9, 3.689444056782176*^9}, {3.689444115622074*^9, 
   3.689444345396983*^9}, {3.689444409750698*^9, 3.6894444165211773`*^9}, {
   3.689444531293839*^9, 3.689444573166254*^9}, {3.689444686661221*^9, 
   3.689444719075636*^9}, {3.689450697279434*^9, 3.689450710550029*^9}, {
   3.689450755749881*^9, 3.689450759669726*^9}, {3.689450790725881*^9, 
   3.689450799285637*^9}, 3.6894509046057177`*^9, {3.689451016933709*^9, 
   3.689451025267921*^9}, {3.689451064090934*^9, 3.6894510686833076`*^9}, {
   3.689451667608163*^9, 3.689451694269671*^9}, {3.689451729583523*^9, 
   3.689451770361458*^9}, {3.689452351301148*^9, 3.689452352229219*^9}, {
   3.689454244835351*^9, 3.689454268736087*^9}, {3.689454624834888*^9, 
   3.6894546716249743`*^9}, {3.689454950127603*^9, 3.6894549510792837`*^9}, {
   3.689455000199236*^9, 3.6894550083217497`*^9}, {3.689455055496194*^9, 
   3.6894550560043373`*^9}, {3.689455097606597*^9, 3.689455104574424*^9}, 
   3.689455192288741*^9, {3.689455241719253*^9, 3.6894554531805058`*^9}, {
   3.689455652493465*^9, 3.689455654733241*^9}, {3.689455714956882*^9, 
   3.689455721971849*^9}, {3.689455908788065*^9, 3.689455924827586*^9}, {
   3.689455995195286*^9, 3.6894559971141033`*^9}, 3.689531394096899*^9, {
   3.689531694699572*^9, 3.689531700130486*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "simv", ",", "thryvest", ",", "simq", ",", "thryqest", ",", "thryqext"}], 
    "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-vary_c1-0d01_c2-0d00_U1-\
1x10pn5_U2-0x10pn4_exp006.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"simv", ",", "thryvest"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<simulation\>\"", ",", "\"\<thry approx\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "->", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"simq", ",", "thryqest", ",", "thryqext"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Black"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<simulation\>\"", ",", "\"\<thry approx\>\"", ",", 
      "\"\<thry exact\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "->", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.689451037043551*^9, {3.6894510835639544`*^9, 3.689451189858975*^9}, {
   3.6894512986588087`*^9, 3.689451328433938*^9}, {3.689451360561339*^9, 
   3.6894513642398643`*^9}, {3.689451781183755*^9, 3.689451805839468*^9}, {
   3.689451849728842*^9, 3.689451877015003*^9}, {3.689451917119194*^9, 
   3.689451944452154*^9}, {3.689452066222085*^9, 3.6894521020538816`*^9}, {
   3.6894523479503*^9, 3.689452348764801*^9}, {3.6894525734371243`*^9, 
   3.689452586820115*^9}, {3.6894527430914803`*^9, 3.689452754074986*^9}, {
   3.6894546670276613`*^9, 3.6894546735525*^9}, {3.689454794279915*^9, 
   3.68945481672016*^9}, 3.689454860116428*^9, {3.689454954951364*^9, 
   3.6894549553833723`*^9}, {3.689455073104076*^9, 3.689455087654633*^9}, {
   3.689455463724708*^9, 3.689455481228786*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQECDrn2Sdpr5r60P3sGBAQcSv3vVjw++dZ+1kwQ
EHRY+EpDaN7BL/ZpYCDkcHfLES6bmi/2xmAg7GDsbMKTHPnDHmKeiMPj9s9r
RNf+hpon4nBr5WS5/zV/oOaJOjzleJXA/+s/1Dwxh3dHA474iv2HmifuMEvD
r1RNntEBYp6Ew/zj94ssdZkcIOZJOGzJL1u3xJ/ZAWKepIPvVVHerBUsDhDz
pBzkD4cwCMuxOkDMk3bYJZJ94bM7K9Q8GYfj3HKJ56vYoebJOLDc6SuLtWSH
mifrYLpJ84nOZw6oeXIObVx6rzfM5IKaJ+8we6a/88pmbqh5Cg5O4VePtvdz
OwAAhN2DRA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJwt0XtMU1ccB/BSHoUC5ba9fb8GTqVhgylRGKLnC8b3EGWm6IaOiDBF3YpT
NDCci6BMNIjOCMYwIxLddD4II1WHsm5gVJhz4osMpVOZiDyEVhQRZ3vONzm5
/33z/d1P6PIvUzKFAoEg8+1zf2k4HG6UvFL+e4+Y00rtrnAOVb8W3J3zcwdJ
sRmLuhdy2KBcP6m4y0Hy+ZOzHHkc5lqzy5rGPiBHrFPFt6s46K+k9/gsf0ha
mt3h0D8mdc70ykfkebi7kIO9IKn627ZOYnrbZjNKUX57uleD8jGZ7ch72yjF
qglxS0dTukiOu84qxZSSD87Glz4hByrckSLk0ThF/tVu8rvLXSiFY5oh56yo
hzxd6B4oRV25vGVoei/xzONlKB4IME/e0kc8dVNliBy3JTFuWT/J8kQG1cf5
1iUj/cR9bVqpDIItuZWbDjwjnnNtMnSfyGneHztAPPMcMrTeXTNcd2uAeOrE
clzwWxl+a/0gifZEjqPRGRaXzEk8vy9Njt3pywr5M07iObdIjrxdS2qik13E
M++kHCvOLepI6XERT91tOZL+S5asK3lOqAePGH5efJl5iHnwCEuYmX360hDz
4CH+IqH8WuYL5sHDeSC+qdf7JfPg0X4pxhl8+CXz4NHknBj2PoaZB48zoZEL
Pro3zDwUqJhv3rz661fMQ4HC/HdP7NCOMA8F1hwztf1oG2EeCqTe1Ppftrxm
HgpAqJz82PmaeSgQESVdIdo7yjyU4NOC9oyb8IZ5KPG6WNQw49ob5qHE4Cde
G2smC0A9lFj1bDTYXiQA9VCiffvIkeutAlAPJVKMw1McY7xAPVRoqh36u3+d
F6iHCnHzXKsEdi9QDxVOOwYEnFQI6qHC2E39+03pQlAPFSokvZFRp4SgHipI
qrsbp40KQT3UKJzSlTY/yRvUQ40X1zsHlx70BvVQY+3KhzvWdnuDeqjhGHWE
FsT5gHqoYdl337bzOx9QDzWaI9qTD97xAfVQA/a2zuPjfUE9NKhdfKfgfK4v
qIcG5r6b/NVGX1APDX4ounG8jfcD9dCA119PfJLhB+qhQXHNn3df1viBemgw
MrvZGiAUgXpoYb1/WaRZKAL10KJzw6XK8EMiUA8tPg1qnBTbJ2IeWvx12N48
a5o/89BixocNGam7/JmHFrZr9cNZ//gzDx0is86X5UYEMA8dqkZs4dvyApiH
Duq9dRf3XQ5gHjrsNNdaqtVi5qGDoOFMT+3nYuahQ67lVOEfdWLmoUf30xO6
Vt9A5qFH+tafah4sCmQeerRqjs0ZrApkHnrMPl3dIRwMZB56XJhZtVGWGMQ8
9JjYfkgSVhbEPPQ4+lVl9YSOIOZhgF58MD4hKph5GLDnUMWNBZuDmYcBfjH7
s9NbgpmHAXkt33tZ9RLmYUBfxp7yb1ZLmIcBK4ZLo0rPSZiHEW27dzVVBoQw
DyOSxpcsPbk4hHkYYa8vdtYfDWEeRsQs2lbS8jyEeRhhcSWU9YZxzMOIsoaG
tNy5HPMw4UoJCR/N4ZiHCb6pFwaLKjjmYQIJm3ox+DeOeZiQ13N+x77HHPMw
4RdbnMXASZmHCX1bz4ZWx0iZxzswJ8f2vPeZFP8DLlS0Yw==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.9375, 0}, 
     PlotRange -> {{4., 8.}, {0, 4.342944819032518}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.9375, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{4., 8.}, {0, 4.342944819032518}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"simulation\"", "\"thry approx\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6894443750178833`*^9, 3.689444449336698*^9, 
  3.6894444953115597`*^9, 3.689444607660021*^9, 3.689444742081856*^9, 
  3.689450838837919*^9, 3.689450988250483*^9, 3.689451116290097*^9, 
  3.689451190701823*^9, 3.689451304764572*^9, 3.689451365057266*^9, 
  3.6894522209867487`*^9, 3.6894525919310617`*^9, 3.6894527562857943`*^9, 
  3.689453044237563*^9, 3.689454385635921*^9, 3.689454818484035*^9, 
  3.6894548616685658`*^9, 3.689455572499585*^9, 3.689456081255097*^9, 
  3.6895309021974297`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQECDvu/CD21Z/llf/YMCAg4KN35zZbB+Md+1kwQ
EHQwOcnmsZyTwSENDIQckvIcTt1JZ3AwBgNhB76qpbeqM5kcIOaJOJwLzZvW
uoHZAWKeiMNd97QfM2JZHCDmiToUT6ybPGkKK9Q8MQeRA6ENS+PYoOaJOyw5
8eqA6kF2qHkSDk6ht7r5wjmg5kk4SIQ2HSpI4YSaJ+mgdim2XimOC2qelMM7
7TsaPmzcUPOkHXzP+l2UC+CGmifj8ODlocD6XF6oeTIO329XLVcJ5IWaJ+uw
cOVq00Vb+aDmyTm8zf/0QGclP9Q8eYfvu/pyD5kIQM1TcND8nvhNuE3AAQBe
vYBm
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJwtlA1klVEYx+/39/d9773vve/9qFgWo4jFmPOPKEbZiMVYlkUxLUYsxmKU
YhSjGKOIYozFKEZZjGIUYxSjGKWY9r27dc9z/g/3Ht73Pc95/v/f85yjfbe6
+j0ul6u/8dOriRTWZkcvOmv/1Ime8fcbzSlclthQXXPVsV+dKXzYaNZv1F1r
+vzqcAqnJvb7Fk9uqheD7ZHl5ylMti7d8E5uqs+fdKTQeNh4s6U2ZVsKdyS2
VK2Rba6axs9Cx8jMjy11YXW4kTENc862uq3TDaYx373+sGl+Wz17qiONlp2F
x70tO8rUkYZ5vqN+d+qNaQTbBqa+BHaVlGdlMLSCl/GhXSXp2jOQY1Z31XWJ
DC45WvGe0mp7xjN491bHnpIy5jIwPuwrsy8DkTuxr4yuLLwiuK5OS2Rh6q4r
2daTxfdvOupK5I5lodUWOg6UlDedhTnnQEm65SyOi+BDZXhYeNKrFR+ShwWC
ok8Wzmi7W10wPCxo9W0DLhgeFlcXDA8LYseKC4aHhbSEG4ZHDoaDm2sOUu6I
m7pyeKPbY9ZN33MwvrvZFzkck/DweQ5XNL5uD0x5eRifPTA88vioaS54YHjk
URd7PfwuD+Orlz7lcdMYTo55iNwpL/usAOOjl/sKSEgD+GB4FHBOwgfDo0Df
fDA8ChC5Mz7mKXAefPTdpk9+9oXN+fCTh41HTRqgn3lt+uInBxumff3kYXN+
AuRh04cAzylyngLkUcTXgDQ4eRSpO0geRZzVeBHkuUXOW5A8itQZJI8S5y9I
HiXIODgh1lGirhB5lPDgvo4QeZQ4nyHyKFFHiHU5nNcweTi4pvH2hcnDYd1h
8nAg7bwUZp0O5zlCHg7rjJBHmfMdIY8yXr/SEWHdZdYVIY8ybBnAKHmUOf9R
8iizjih1lHkfRMmjAmnn9Sh5VHhujDwquCqCY9RV4X0RI48Kz4mRR4X3R5w8
qhC5bXHqrDJvnDyqMr2NP/Ko8n6Jk0eVeRLUXeV9kyCPGu7p8R1NkEeN+xLk
UcPfPzoS9KHG+yhJHjV+lySPGu+nJHkcgeBdTOI/lY+l7A==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        PointBox[CompressedData["
1:eJwt1AtME3ccB/A+oLQFyt3RN33omEkZYcOBbhoeXxdjNYIIAjFS3upAnSI+
2MRlKDO+h0aDoluXKWInigNlFMEFhIEk6KZI0I3FgTh5iLhpmQM31pbfN7lc
Lnf55ve7T/KfmbUpYY2Ax+OtcV6u+3QY3Km4NmdF8FR0kKXkhsPEoK2/aPma
U1PRCXbDnpF45/Nb2bIhDx4K5VXmvh0MrsSIszoieCjPi5T2nGWg6D3/yc9b
ebjV6QqDhtxlOZMXeRg3uQoZZM94+LH5MQ9GZ5vdwOKC6EpQjZ6PxX07nI0s
YuwlpnnJfGx21eWxqL49tuyXL/g4VeYKi+6FJ6zH2vlocbgKWXTEbozK5gnw
NN41IIsny74qMM8TwD2enMPeFwM1UfkCuOsiOTwvC9lurhRgrTsc8iuWZGUM
CODa1lLC4WLpH6H79EK417U730/aaq4nC+Eer4/Dto5Nt6ZKhHDXSf0RU9ew
I7ZDiDB3/JF/5r22cwIPuH+fxR/1YemdXhEecK+7xx8FcxfU52/zgHu8Kn9M
LE1pf1zlAXddjz9y7x+Kyhj0wLSHHI1hxi19Mz0x7SFHXlJfa06KJ6Y95Di5
MsnqOO5JHnJsXPVsy97bnuQhx/Hk1Ba9WEQecqy/McLZF4jIQ47B1v7nSYUi
8lBAz//vr/GrIvJQYDZ/qPbUMxF5KMCubuuFyYs8FKgRNjFDmV7koUDlqq95
x057kYcCGUUfZUR1e5GHEoMztEPDMjF5KJH4yLTy5GIxeSjR37h606LdYvJQ
4vNrJ1++bBCThxLz78VWn3WIyUMJ+9rD+QnvSMhDBdmr82J+roQ8VLC/mFp0
+YyEPFR4l70vTO2VkIcKVsMstVQpJQ8VjjzLSv8+TkoeKhwK2VCXuV9KHmrk
DibyfFqk5KFG4FGzrva1lDzUqFuxeswy15s8nN8fOZMuzPMmDzW6VlxNtH3r
TR5qVNlG6pY+8iYPNQ58M3PrqM6HPDRonrRuO5zsQx4aTESJLgQf8SEPDeqj
onk3O3zIQ4Obj7NzsoS+5KHBj+FVXRMRvuShwa9pH4Yf3e5LHloU/9nz6azv
fMlDC5Pj/fK6IV/y0GL++LkvzYEy8tBC98QvtdsiIw8t7naG9maUyshDC0FQ
ETv8k4w8AjAhNznyJH7kEYB8weRnjg/8yCMAMtW6yoKdfuQRAIVm5+a/a/3I
IwBjj1o7t475kUcARi+93VsgZ8hDh6Kno6rw2Qx56KDZVaEai2XIQ4e0faUP
bOsY8tBhXkOoJXMvQx46vJmnsarLGfLQobE90Hq7iSEPHUIEcSnFvzHkoced
iZZ7cycY8tCjq/2uZEjJkocelwuf/1MWxpKHHgWi2vIly1ny0CNwzgPJqw0s
eegx3hkedG4/Sx4GHGpuFMRXsORhQFfxrtJJ5zk37WHAiZxLA+UPWfIwIH5W
8WjMa5Y8DLiVaal+oebIwwBrqi20bA5HHkaE2IbXRyZw5GFE3HB99u8bOfIw
Yl/TD+rdBznyMKK7vObgGzaOPIywPEm73tzKkYcRotrTVenOc3HaYwYWBsdl
vP6Xw/95UJvv
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.9375, 0}, 
     PlotRange -> {{4., 8.}, {0, 4.748033051330655}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.9375, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{4., 8.}, {0, 4.748033051330655}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"simulation\"", "\"thry approx\"", "\"thry exact\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6894443750178833`*^9, 3.689444449336698*^9, 
  3.6894444953115597`*^9, 3.689444607660021*^9, 3.689444742081856*^9, 
  3.689450838837919*^9, 3.689450988250483*^9, 3.689451116290097*^9, 
  3.689451190701823*^9, 3.689451304764572*^9, 3.689451365057266*^9, 
  3.6894522209867487`*^9, 3.6894525919310617`*^9, 3.6894527562857943`*^9, 
  3.689453044237563*^9, 3.689454385635921*^9, 3.689454818484035*^9, 
  3.6894548616685658`*^9, 3.689455572499585*^9, 3.689456081255097*^9, 
  3.68953090227102*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Check", " ", "Evolution", " ", "in", " ", "1", " ", "dimension", " ", 
      "to", " ", "match", " ", "Desai", " ", "and", " ", "Fisher", " ", 
      "simulations", " ", "fig", " ", "5"}], " ", "&"}], " ", "6", " ", "b"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.01", ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       RowBox[{"0", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "50000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fulldata", ",", "verbose", ",", "veryverbose", ",", "exactqv"}], "}"}],
      "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "False", ",", "False", ",", "False"}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simv", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "21"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simq", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "21"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"genotypes", ",", "genotypeabundances"}], "}"}], "=", 
     RowBox[{"getInitialDFdistribution", "[", 
      RowBox[{"popsize", ",", "\[CapitalDelta]c1", ",", "U1", ",", "1"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688695558225275*^9, 3.688695577769321*^9}, {
   3.6886976542927437`*^9, 3.688697703019405*^9}, {3.6886977463208647`*^9, 
   3.688697752537838*^9}, 3.688698185549271*^9, {3.68869821919487*^9, 
   3.688698223223608*^9}, {3.6886986620524282`*^9, 3.6886986629004*^9}, {
   3.6886988603750963`*^9, 3.6886988664805202`*^9}, 3.688698904555194*^9, {
   3.688699337369549*^9, 3.688699342189859*^9}, {3.688699460908698*^9, 
   3.6886994643065567`*^9}, {3.688699585083333*^9, 3.688699591745851*^9}, {
   3.6886999821022263`*^9, 3.688700108974204*^9}, {3.688700161987878*^9, 
   3.688700213709936*^9}, 3.688701092035573*^9, {3.688706294970908*^9, 
   3.688706295860649*^9}, {3.688706362192438*^9, 3.688706363363892*^9}, {
   3.688706394895247*^9, 3.68870639920033*^9}, 3.6887078089313726`*^9, {
   3.689361436747138*^9, 3.68936144590728*^9}, {3.6893617538262377`*^9, 
   3.689361937297886*^9}, {3.6893621616660337`*^9, 3.689362163651622*^9}, {
   3.689362350506291*^9, 3.689362365490233*^9}, {3.68943922549607*^9, 
   3.689439246335281*^9}, {3.689439544831192*^9, 3.689439545345488*^9}, {
   3.689439864781389*^9, 3.689439893403941*^9}, {3.68944115054305*^9, 
   3.689441170445846*^9}, {3.6894413018703547`*^9, 3.6894413035335417`*^9}, {
   3.689441662995769*^9, 3.689441663659277*^9}, {3.689441708964651*^9, 
   3.6894417091735897`*^9}, {3.689441785347884*^9, 3.6894417854585953`*^9}, {
   3.689441816667884*^9, 3.689441816759532*^9}, 3.6894423473370237`*^9, {
   3.68944276885594*^9, 3.689442781637012*^9}, {3.689442926620921*^9, 
   3.689442944764956*^9}, 3.689442981284316*^9, {3.689443019870043*^9, 
   3.689443020409173*^9}, {3.689443391596382*^9, 3.689443420657501*^9}, {
   3.6894437010652018`*^9, 3.689443727896481*^9}, {3.689443766033156*^9, 
   3.68944379239709*^9}, {3.6894444706310797`*^9, 3.689444470736638*^9}, {
   3.689444576565987*^9, 3.6894445781250973`*^9}, {3.689444681997616*^9, 
   3.689444682080071*^9}, {3.689450767934025*^9, 3.689450780845628*^9}, {
   3.689451635762858*^9, 3.689451636073202*^9}, {3.689454544522491*^9, 
   3.6894545495144367`*^9}, 3.6894551593934813`*^9, {3.689528647159198*^9, 
   3.689528654734955*^9}, {3.68953078008353*^9, 3.689530796435343*^9}, {
   3.6895371497641582`*^9, 3.689537150203805*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"results", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"RunSimulationCheckEachMutation2", "[", 
           RowBox[{
           "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
            SuperscriptBox["10", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "/", "10"}], ")"}]}], 
              ")"}]], ",", "U2", ",", "maxtime", ",", "timestep", ",", 
            "genotypes", ",", "genotypeabundances"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"simv", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "10"}], ")"}]}], ")"}], 
          ",", 
          RowBox[{
           SuperscriptBox["10", "5"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"results", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "4"}], "]"}], "]"}], "-", 
              RowBox[{"results", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ")"}], "/", 
            RowBox[{"results", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}]}]}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"simq", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "10"}], ")"}]}], ")"}], 
          ",", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{"results", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "9"}], "]"}], "]"}], "]"}], "/", 
           "\[CapitalDelta]c1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "21"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thryvest", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "-", 
           RowBox[{"(", 
            RowBox[{"i", "/", "50"}], ")"}]}], ")"}], ",", 
         FractionBox[
          RowBox[{
           SuperscriptBox["10", "5"], " ", 
           SuperscriptBox["\[CapitalDelta]c1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"popsize", " ", "\[CapitalDelta]c1"}], "]"}]}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"\[CapitalDelta]c1", "/", 
               RowBox[{"10", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "4"}], "-", 
                  RowBox[{"(", 
                   RowBox[{"i", "/", "50"}], ")"}]}], ")"}]}]}], "]"}]}], 
            ")"}]}], 
          SuperscriptBox[
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalDelta]c1", "/", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "-", 
                RowBox[{"(", 
                 RowBox[{"i", "/", "50"}], ")"}]}], ")"}]}]}], "]"}], "2"]]}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thryqest", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "-", 
           RowBox[{"(", 
            RowBox[{"i", "/", "50"}], ")"}]}], ")"}], ",", 
         RowBox[{
          RowBox[{"-", "8"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "-", 
              RowBox[{"(", 
               RowBox[{"i", "/", "50"}], ")"}]}], ")"}], "+", "2"}], 
           ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thryqext", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "-", 
           RowBox[{"(", 
            RowBox[{"i", "/", "50"}], ")"}]}], ")"}], ",", 
         RowBox[{"getTransQ", "[", 
          RowBox[{"\[CapitalDelta]c1", ",", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "-", 
              RowBox[{"(", 
               RowBox[{"i", "/", "50"}], ")"}]}], ")"}]}], ",", "popsize", 
           ",", "True"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d00_U1-\
vary_U2-0x10pn4_exp007.m\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "simv", ",", "thryvest", ",", "simq", ",", "thryqest", ",", 
        "thryqext"}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688697705911489*^9, 3.6886977385901012`*^9}, {
   3.688697851586619*^9, 3.688697881514435*^9}, 3.688699542613991*^9, 
   3.6886996145602417`*^9, {3.688701974370201*^9, 3.6887019797698917`*^9}, {
   3.688706327590456*^9, 3.6887063285022173`*^9}, {3.688706468965032*^9, 
   3.688706478057048*^9}, {3.688707040023732*^9, 3.688707053374549*^9}, {
   3.688707990485836*^9, 3.6887080244590893`*^9}, {3.6887081595099154`*^9, 
   3.688708174075613*^9}, {3.689361633370254*^9, 3.689361662274227*^9}, {
   3.689361981385914*^9, 3.689362020777807*^9}, 3.689362061731192*^9, {
   3.689362102969953*^9, 3.6893621119619417`*^9}, 3.689365058890818*^9, {
   3.689369504882784*^9, 3.689369508802414*^9}, {3.689442963587603*^9, 
   3.6894429880750113`*^9}, {3.6894434833378687`*^9, 
   3.6894435208008347`*^9}, {3.6894435942490053`*^9, 3.689443682593759*^9}, {
   3.689443755064299*^9, 3.6894437583599863`*^9}, {3.689443799439836*^9, 
   3.6894438106958513`*^9}, {3.68944384447136*^9, 3.68944393676649*^9}, {
   3.689443969175912*^9, 3.689444056782176*^9}, {3.689444115622074*^9, 
   3.689444345396983*^9}, {3.689444409750698*^9, 3.6894444165211773`*^9}, {
   3.689444531293839*^9, 3.689444573166254*^9}, {3.689444686661221*^9, 
   3.689444719075636*^9}, {3.689450697279434*^9, 3.689450710550029*^9}, {
   3.689450755749881*^9, 3.689450759669726*^9}, {3.689450790725881*^9, 
   3.689450799285637*^9}, 3.6894509046057177`*^9, {3.689451016933709*^9, 
   3.689451025267921*^9}, {3.689451064090934*^9, 3.6894510686833076`*^9}, {
   3.6894546867207317`*^9, 3.689454695248879*^9}, {3.689454963087411*^9, 
   3.689454963247425*^9}, {3.689528661398796*^9, 3.689528670109127*^9}, {
   3.689528701435782*^9, 3.689528835054022*^9}, 3.689529161208867*^9, 
   3.6895313819159307`*^9, 3.689531718046712*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "simv", ",", "thryvest", ",", "simq", ",", "thryqest", ",", "thryqext"}], 
    "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d01_c2-0d00_U1-\
vary_U2-0x10pn4_exp007.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"simv", ",", "thryvest"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<simulation\>\"", ",", "\"\<thry approx\>\"", ",", 
      "\"\<thry exact\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "->", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"simq", ",", "thryqest", ",", "thryqext"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Black"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<simulation\>\"", ",", "\"\<thry approx\>\"", ",", 
      "\"\<thry exact\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "->", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.689451037043551*^9, {3.6894510835639544`*^9, 3.689451189858975*^9}, {
   3.6894512986588087`*^9, 3.689451328433938*^9}, {3.689451360561339*^9, 
   3.6894513642398643`*^9}, 3.689454685451137*^9, {3.689454757520303*^9, 
   3.689454786624317*^9}, {3.689454960040653*^9, 3.6894549601675577`*^9}, {
   3.689528736115069*^9, 3.6895287373246593`*^9}, {3.68952917205485*^9, 
   3.689529212223145*^9}, 3.689541563555665*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQECB5ynMuzeHyHkkAYGAgc+yIYv+eEm5HD2DAgI
HNDYbe1zkUfAwRgMBA+svyL1xvwKn8OsmSAgeMDotcy8vau4HCDmCR34LSl6
8EMGJ9Q8oQPrjPrFKw+wQ80TOhDzKSzeJJMVap7wgayrjU7ZzGxQ84QPeGrb
s853ZYGaJ3JgaeiLjYUXmaDmiRx4/GTXFJ3PDFDzRA5EdkrnCEcxQs0TPfA4
4myT5cK/9hDzRA+sOFUvx6Txzx5intiBub+XCeSx/7GHmCd2QPDyXy99qZ/2
EPPEDgT9lpF1m/XdHmKe+IEf+gmi0Z+/Qc0TPxAo27a+1ek71DyJA2sDl8mz
7v5sDwDY8IsK
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJwt0XtQlFUYBvDdZWV1EfzuH2hgjibqkJmCugSdM5qQlKDmLUVJhdVQcYUR
L2iWiJcBBqMhhSm8gTU16pSaq1A9IyYMCAnqYDWElmKGJndEQHL3nGfmzPnv
mfd9f6NWbZyfYDIYDAkvnutnEVCSenN1mc9wqpyOvLtdERC4Ln/D3s1+dHxs
zuXOcQJWJVqG9N3xpeHW+hOOcAFJesKZjrm+dL4zIKN5noCYabWBM3/Rqd0d
Abb16xNKw3Wa5i4UcL/85zXTLmnU1RabI6BiZYh/dqhGixyuRgFRZ9IiD/+k
UnedU0D04TMrQyJUWn3NFQGZwUH7Z9Qq9MVwLwoFTLp2d+WROIV2jXMNKODY
WF+vV1tl6h7PKmLX+t3GmgyZjnTVBYiwPMwS7f4yneKOiMC6mrd+vyDRt92F
Ir5/klkrLJSoe91YETv3TfFq7RDpJvfCIr5eUfXe6kMidddliEh/PNVnXphI
C/JdESEr735a9LdA3ec7LcL7/FcjZmcLtMy17mUR7xeGVEywCdQ9Xr0I02h4
bqgZRh+56ppFzJ/kNJ6bOIwyDwnjXxPjLZ/5cA8JqV+e2jar15t7SLCPXdM0
Z40395CQmFaXZ6wfyj0kFGXf/3ZG1FDuIaF0cnJqB7y4h4SIqWvjekO9uIeE
gJK6xjCnlXtIKDiekXJkupV7SCjc5Mi2lg7hHhJmNWZl2WcM4R4SLjXGffdF
1WDuIWHJYbNyaPFg7iEjzHaxgDZZuIeMc+FNLXu2WLiHjMlC/kdzvSzcQ0bq
J+s+OHjMk3vIaHlUGzc51JN7yHBGVjaPuTWIe8h4cLZJXJw8iHvIyNt3eotT
HMQ9ZCRZ5i2wnTVzDxk1K4oTKxeZuYeMmOIUj+V9HtxDRpTJ45+/TnhwDwV7
3ngYGz3Hg3souBLs65/71MQ9FNQNH7vwWLGJeyhwvlJduHGBiXsoWDL0aF+L
2cQ9FOQmtdzyu2DkHgoyTtxr+zPRyD0UbN51aWvIy0buoaCrPLhJqjdwDwXl
E18XNuQYuIeCaZXxAaGzDdxDQeHI8P0Os4F7KJjeWD7aZ/cAYR4qxBEVuQ/7
nxPmoWJz5B+WVTueE+ahIuei4wd7fz9hHipKn3ssevBxP2EeKlLC5vrf9Own
zENF8KgLP/rn9BHmoSK37faK8359hHmoUO3LCrJO9hLmoeK42LAlL6SXMA8V
zcvlDy9ffUaYh4qlRjHCc+kzwjxU3Bh9dvaCJz2EeWg4GT/F5+jeHsLOpyFK
bjjQMLKHMA8NB4z3vIwlTwnz0JCcuMw2sPgpYR4arDvfsVZ3dRPmoSE66N7V
uEPdhHlo2N5dZT5l6ybMQ4Nf0oGibxq6CPPQIM/0/DU6vYswDw2O6xPacyZ0
EeahwbvvYFn8jU7CPDS0bJsTfGVnJ2EeGt5MrdlaPL6Te+j4t6TGaKjv4B46
5G2xaVUZHdxDR+C1tsqBkA7uocMWU+yd96Cde+hw3In9PL2gnXvo2PFkzKOy
6HbuoSP56P6KaHM799DR89KA6l/Sxj10/JZi/y8wpY176LielJW/NqiNe+iY
WH0l83ZTK/fQcXBJVvym463cwxfjYqY/DoprJf8DLMLX+w==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-3.96875, 0}, 
     PlotRange -> {{-6., -4.}, {0, 6.514417228548775}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-3.96875, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-6., -4.}, {0, 6.514417228548775}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"simulation\"", "\"thry approx\"", "\"thry exact\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6894443750178833`*^9, 3.689444449336698*^9, 3.6894444953115597`*^9, 
   3.689444607660021*^9, 3.689444742081856*^9, 3.689450838837919*^9, 
   3.689450988250483*^9, 3.689451116290097*^9, 3.689451190701823*^9, 
   3.689451304764572*^9, 3.689451365057266*^9, 3.689454787408804*^9, {
   3.689529185140627*^9, 3.689529213829041*^9}, 3.689531184227762*^9, 
   3.689541511799573*^9, 3.68954156528767*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQECB9qnH/WboybgkAYGAgcimpaJfuMXcDh7BgQE
Dsy9ev4UXwmfgzEYCB6wNBRNS+Tic5g1EwQEDxR13lyzYRmPA8Q8oQMz6ic6
ym7khpondEDI8+75gwbcUPOEDnzysb3WrcEFNU/4wDujtdMEarmg5gkfeN/s
IubGzgk1T+SAVhq/EG8hB9Q8kQOTNtx1zjrBDjVP5MByIcPAvZvYoeaJHujc
/Hr+tFY2qHmiB0K2bZsnncAGNU/sQJL6qszlbGxQ88QO/Nf/sU1WiBVqntiB
el/TZ2nbWaDmiR+YcEwjpMufBWqe+IHHbyQKT0SxQM2TOPB4v/D+MjlmBwAi
sYSW
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJwt1HtMVmUcB/Dzvue98fJezv2IcbPEfLPJRSzJCc8wEjQqLukYCMrFlY2Q
S5uA5eUdKtWE5CKgVChM5VZZKThdP/BlDKYUkQOiP0AIEF/S1dRs1nrP4ffd
7+z542zfPc/5nHNWZOYl5mgpisrxXMq6FAZwJULnlqkSgYG6or3+M5124kir
6H24moEMNXayyTx6bt8mBoTYoLkc1k4Su/zL7iUw8Kbb9YbbZSN71DDw+Vyx
Z2ykVC1koNNdGBsfYiNKW1oFA2u2Tj/Hz1tJ8z6lkQH+123vBDdZiVrXxcDV
2z4X61Kt5NZNJQzIO4uGY2Qr8WzOU8jA5ltxgWt/sZBHq5UNMhAUd3Jl3EkL
UbdnZsG9rK/7RIKFBCh1/iwE9Hyoe8xayDo1LFy/G59XMuJNYtVCFpbv7j7P
1noT9bhpLJz+PsUz3iRfPTALOuvzH2T4exO1rsxz3zTTYJoxk4Z6JSy0tSox
E/XxdbLQlFy3P6rATG4ox+1l4alwytLzipmo2xv19DVEf+nQmYlbqbvHwlDE
3JnCIS+y5MDBUq8XenCQUpvjGS/04CB+VdVAdpgXenDo54UeHITPfhqRNWRC
Dw7GyxvHyhtN6MHBXbo1Ky/XhB4cRP496bRHmtCDg0eHxuk9dhN6cBBnTx56
f8qIHhxEl3otBn1nRA8Ojh9TYkQPDnwdy+9UpBrRg4fCRUjbGGJEDx6O3wku
OKo3ogcPV3InLudOGNCDh9SjtrHFbwzowUPgsPk0XW5ADx4iAsN+a9tlQA8e
Tkxv8IwBPXg4oIIa0IOHr9Kvlzxc0KMHD/ktpfSgS48ePPyZ8nLds1/o0YOH
mP2JlU+L9eghwNtq9OghQKsrOfOFUD16CDD2VvrmYqsePQSoiVqojlrQoYcA
br8kurRfhx4CtFQnbnW06NBDgPWxzvBYpw49BKj/eK7h9m4deghw5EJR9o9E
hx4CDDSeLVsXqEMPAf116CGAz4OBqbBJGj0EuDJ7LGYQaPQQ4euQtgRXE40e
Ijj/Ct0Q4KTRQ4ScqviXxrNp9BBh53ZL9YPXaPQQoXuFoTnLQaOHCDdCLJ6h
0UMEv5aJHdvva9FDhJGflWjRQ4S9ay52NF/WoocI59sd7w02aNFDhCdd92uj
D2rRQ4RrZFWfd7YWPSRQvvaVcVr0kCD46vzZT9Zq0UMCOj3vXJSgRQ8JAv+d
3xL1jwY9JKhy3txWPqlBDwkKfPvzffs16CHB4dBy5+MODXpIkOhTk+BTo0EP
CZKy7N8eOqBBDwmkS5VlL2Zr0EOCXuFJ+zOva9BDgvDhV/n4cA16SOD3WeaF
H3w16CGDa8acWaDXoIcMs7b6jdl/UOghQ7H19/XVoxR6yNA34r9D00Ohh4z/
Hwo9ZMhr/49UVFPoIcNPCYeDOz+i0EOGSsO7nqHQQwbx2pkjp5Io9JDBll/j
2BVJoYcMB1tIR4aDQg9P36XpiBqBQo9l+P5R5H+l6qaH
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        PointBox[CompressedData["
1:eJwt1H9UjXccB/B7ee7P7q3n9zWTZM2KsbF2mln23bjiWJaIg2jlFP2wiDgl
Z3UWh5KOiCRZxXYPRzmtJZutN+YSFWI6bPYjmqhsVH6ciXWvz/uc73n+eL7n
fT6f53XO4xuTHB47SKPRxA4c1/NleIxtKe8MLZKZXBnyV7rMY8PRAzOyPpNZ
QGT+qT5/HuqgcHY9QGbB5taKlcE8dCudXqG9EguvG76xczaPDK7v06v1Eotz
h8dBY3xX3FaJrXcX8pj3ln1E/wKJudoi83l8fj8jJd9fYgdWuhp5BAVNrVaf
iMxdV8ejWl/dk3tOZE2NrvDA5oKtHXtENjDcQCGPV52xwqgkkT3ydw3I47Zl
c/jkD0XmHs8swH9d1oIxksh8XHXDBfzmmx53547A3nFHwMmWS91JPwpsurtQ
QELP5cLaHQJzrxspYEz31sD6BIGtci8sIFdyNmV9LDB33UYBzoTB258OFVjx
HlcEdNZUt/r28sz9+SoFLJi57LVHTTw77Vr3lIDQpeOGpTh45h6vVUDi6ifb
tn/Jsy5XXaeAHzaqSWFRPHvpISIk4vyZQ5N48hARHdDRXDKEJw8RPW3it/Yu
L/IQ8evy0sMpDi/yEJF1L67seKwXeYhYk3a5XfLzIg8RV43bXqTf8iQPEe27
chwdFZ7kISJ09vML82I9yUNEZ3Judv0bnuQhYlXh2qHenVbyEDFh90NtQpWV
PERElX5x/as1VvKQUHkgcvmJ963kIWHWYvO+Y1oreUiocPyem9dgIQ8J83/6
ZsXEAgt5SJhjX1Jau8hCHhLWlrTv1YyykIeEsrLrnPTAgzwkxM+K3333hAd5
SAjPDX47c4sHeUjoKU9saJnnQR4S/nCmpN308yAPCXt9pqaU9JjJQ0Z8x1yN
5bSZPGTMH/79Fv8dZvKQsSIsNO/+UjN5yHjmd6Ns4btm8pCRPXZuarzBTB4y
XnfIjbYbJvKQsavFJzPmiIk8ZExYtypzWpaJPGQsiw67hAgTecg4muDY1Dza
RB4yCn9JaErSmMhDRnFV759F14zkIaP1UbpX2BEjeShQpmTU5WcbyUPBpu+C
PomINJKHgg/6/GeWBhrJQ8Fo7Rb7cquRPBREVFy5cfRvA3koCJwz+3gqDOSh
wDn/4L6aYgN5KNA+iwpPTDWQh4L9h3ZW7Q4zkIeCe2dXFwe9aSAPBaUjO7gZ
RgN5KPjoWlB3w209eahIX+9YXHdSTx4qpmQP/A3268lDxaaKfyZey9CTx8B7
X9ajXaQnDxVr+wdd3DFRTx4qys9ke+YM0ZOHigfagP62xzryUMGPGPlvSauO
PFRMPj1mWu0xHXmoOBcdsmxskY48VBS+sv5nTZqOPFTovi5oHbdQRx4qDse0
jaydpCMPG+5Os4wv9NaRhw11Z507z7/gyMOGxLyDHXPbOPKwwdR1q3nCGY48
Bu5bxz+IcXDkYcP0+g2a27kcediQc/FCTU0yRx42PH74vPHKHI48bEj3rvJk
73HkYYNof2Z/MowjDxsmZS61/6flyMOGp6sL20PuDCaPIViim6W72TiY/Q9x
DMQ5
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-3.96875, 0}, 
     PlotRange -> {{-6., -4.}, {0, 5.148734742939763}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-3.96875, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-6., -4.}, {0, 5.148734742939763}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"simulation\"", "\"thry approx\"", "\"thry exact\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6894443750178833`*^9, 3.689444449336698*^9, 3.6894444953115597`*^9, 
   3.689444607660021*^9, 3.689444742081856*^9, 3.689450838837919*^9, 
   3.689450988250483*^9, 3.689451116290097*^9, 3.689451190701823*^9, 
   3.689451304764572*^9, 3.689451365057266*^9, 3.689454787408804*^9, {
   3.689529185140627*^9, 3.689529213829041*^9}, 3.689531184227762*^9, 
   3.689541511799573*^9, 3.689541565358721*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Check", " ", "Evolution", " ", "in", " ", "1", " ", "dimension", " ", 
      "to", " ", "match", " ", "Desai", " ", "and", " ", "Fisher", " ", 
      "simulations", " ", "fig", " ", "5"}], " ", "&"}], " ", "6", " ", "c"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.01", ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", 
       RowBox[{"0", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1000", ",", "50000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fulldata", ",", "verbose", ",", "veryverbose", ",", "exactqv"}], "}"}],
      "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "False", ",", "False", ",", "False"}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simv", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "21"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simq", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "21"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"storeqs", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "21"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"genotypes", ",", "genotypeabundances"}], "}"}], "=", 
     RowBox[{"getInitialDFdistribution", "[", 
      RowBox[{"popsize", ",", "\[CapitalDelta]c1", ",", "U1", ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SeedRandom", "[", "7", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.689453134313169*^9, 3.6894531346980247`*^9}, {
   3.689454443608561*^9, 3.68945444392248*^9}, 3.689455163392514*^9, 
   3.689537173575811*^9, {3.689614381153566*^9, 3.68961438780964*^9}, {
   3.689614680402252*^9, 3.689614693522869*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"results", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"RunSimulationCheckEachMutation2", "[", 
           RowBox[{"popsize", ",", 
            SuperscriptBox["10", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "13"}], "/", "4"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"j", "-", "1"}], ")"}], "/", "10"}]}]], ",", 
            "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",", "maxtime", ",", 
            "timestep", ",", "genotypes", ",", "genotypeabundances"}], "]"}], 
          "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"storeqs", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "13"}], "/", "4"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "10"}]}]], ",", 
          RowBox[{"results", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "9"}], "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"simv", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "13"}], "/", "4"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "10"}]}], ")"}], ",", 
          RowBox[{
           SuperscriptBox["10", "5"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"results", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "4"}], "]"}], "]"}], "-", 
              RowBox[{"results", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ")"}], "/", 
            RowBox[{"results", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}]}]}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"simq", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "13"}], "/", "4"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "10"}]}], ")"}], ",", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{"results", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "9"}], "]"}], "]"}], "]"}], "/", 
           SuperscriptBox["10", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "13"}], "/", "4"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "10"}]}]]}]}], "}"}]}], 
       ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "21"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thryvest", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "13"}], "/", "4"}], "+", 
           RowBox[{"(", 
            RowBox[{"i", "/", "50"}], ")"}]}], ")"}], ",", 
         FractionBox[
          RowBox[{
           SuperscriptBox["10", "5"], " ", 
           SuperscriptBox["10", 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "13"}], "/", "4"}], "+", 
               RowBox[{"i", "/", "50"}]}], ")"}]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"popsize", " ", 
                SuperscriptBox["10", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "13"}], "/", "4"}], "+", 
                   RowBox[{"i", "/", "50"}]}], ")"}]]}], "]"}]}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{
               SuperscriptBox["10", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "13"}], "/", "4"}], "+", 
                  RowBox[{"i", "/", "50"}]}], ")"}]], "/", "U1"}], "]"}]}], 
            ")"}]}], 
          SuperscriptBox[
           RowBox[{"Log", "[", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "13"}], "/", "4"}], "+", 
                RowBox[{"i", "/", "50"}]}], ")"}]], "/", "U1"}], "]"}], 
           "2"]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thryqest", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "13"}], "/", "4"}], "+", 
           RowBox[{"(", 
            RowBox[{"i", "/", "50"}], ")"}]}], ")"}], ",", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", 
            RowBox[{"popsize", " ", 
             SuperscriptBox["10", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "13"}], "/", "4"}], "+", 
                RowBox[{"i", "/", "50"}]}], ")"}]]}], "]"}]}], 
          RowBox[{"Log", "[", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "13"}], "/", "4"}], "+", 
               RowBox[{"i", "/", "50"}]}], ")"}]], "/", "U1"}], "]"}]]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thryqext", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "13"}], "/", "4"}], "+", 
           RowBox[{"(", 
            RowBox[{"i", "/", "50"}], ")"}]}], ")"}], ",", 
         RowBox[{"getTransQ", "[", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "13"}], "/", "4"}], "+", 
              RowBox[{"i", "/", "50"}]}], ")"}]], ",", "U1", ",", "popsize", 
           ",", "True"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-vary_c2-0d00_U1-\
1x10pn5_U2-0x10pn4_exp008.m\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "simv", ",", "thryvest", ",", "simq", ",", "thryqest", ",", 
        "thryqext"}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.689453152664356*^9, 3.689453155928067*^9}, {
   3.689454282116392*^9, 3.689454286866613*^9}, {3.6894545855298777`*^9, 
   3.6894546120662727`*^9}, {3.689537193481039*^9, 3.6895372197718554`*^9}, {
   3.6895372683089933`*^9, 3.6895372939887733`*^9}, {3.6895373567657423`*^9, 
   3.689537375940835*^9}, {3.6895374061650677`*^9, 3.689537527839072*^9}, {
   3.689537562550186*^9, 3.689537624975184*^9}, 3.689541882452059*^9, {
   3.689542039221627*^9, 3.689542047970516*^9}, 3.689542088740017*^9, {
   3.6895422150831957`*^9, 3.6895422301223993`*^9}, {3.689542326275247*^9, 
   3.689542336667292*^9}, 3.68961441219567*^9, {3.6896147002118483`*^9, 
   3.6896147496760798`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "simv", ",", "thryvest", ",", "simq", ",", "thryqest", ",", "thryqext"}], 
    "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-vary_c2-0d00_U1-\
1x10pn5_U2-0x10pn4_exp008.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"simv", ",", "thryvest"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<simulation\>\"", ",", "\"\<thry approx\>\"", ",", 
      "\"\<thry exact\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "->", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"simq", ",", "thryqest", ",", "thryqext"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Black"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<simulation\>\"", ",", "\"\<thry approx\>\"", ",", 
      "\"\<thry exact\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "->", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.689541601322495*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQFcBxjOXuTh9OyyNwYDzgMMon/ffPOYYp8GBhwH
GN/MeGjRMMd+1kwQYD/g+Pxz0VS9lfZnz4AA2wGGUwxTN6zbYA8xj+2A4rW3
F0LDdkDNYz2wcca0Ys4tB6DmsRy4GNs/353nLNQ85gMavr+LDDSuQs1jOnB0
eoHCOqUHUPOYDnD+uf2/b+tLqHmMB5TPHnApE/oCNY/hgISKafqc5P9Q+f/7
jQxu3fm1mc0BYv7f/e2TTObLBws5QMz7s/+l8Ec3O24pB4j+X/urRcRUV6xQ
doDY/2P/O5nltTfVDBwg5n3f77F0mdHNQguoeV/3MzWqNZxmdIKa92W/9vLu
7o0d3g4AQIqRIQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJwt0nlUVHUUB/A3+wyaQmDkAkqYWziVBtocOL+fGxhnXDCPlhK4AQWauJRm
hCeJ8tjoKIjTgEkwkmZHCdEUBX+XxV0BUVkm0wRJWZTEGRhgYHLmd+8577z/
vu++7+f6rVq/KEYsCELMy8f55uMGwVeNs1dN30fqTIkhbnUqKE5cFhy2J42c
CHu4zeuEChoCqpRmRzpJbYs465uqAvXQLGmcPoNE6susEyJVUH1/b8RaYiBT
XaMCQ+UM30OvGombK1AFHQ1bw9sGZRFnWthDJfzw94uNO9Q/k5dhLxOVsCYl
bl3dN9nEFadXgqblw+w7A7+QWNcoYf/QunDpx7kkxBWohIZn6Qn5VSbi5VpQ
CeUj/Jo0MXmk3blemwJec5/VTkYdIeXOuDIFLJ/WkrO3+yjJNDpHAcXhCW3B
vcfIBlegAtb82FlrGH+czHUtqIBHlyoSQlLyyWjXDytA0fbtdp2ygHQ546xy
KJk3ZdCf8SfJzRvOkUOVurAzvrWQHHbWZ5KDEP5R0eRdp8nXrgXlkNv/vuas
9gxZ5PphOSS+6fhKCCwiE10FyoFGujeHhJ4n3EMO4Xk3JR0pJeghg8BYTf6D
5ww9ZODtXvrEO7wUPWRg9omKPn6mDD1kYAo6axw9uwI9ZODRckXi1XkRPWRQ
c6CvJr7iMnpIIWp/Y8DsC1fRQwrF8XFlsqbr6CEFi/1Wy4qgSvSQwu+wJScg
qho9pNAaXWPLK76FHlIIXD3hQt/02+ghgYNqrbrs7h30kIA2m068nFGLHhLY
se2nOd5J9eghgS1Jry+V6MzoIYHczOaN467eQw8JSCO/SFo77QF6iGFB03mT
7uk/6CGG1IMy9aeRjeghBsmy+6crW5vQQwzSTWnlyVnN6CGG4T75aZs3PEYP
MUxKGrKzY30LeoghI33D2K2ZbeghgpDK6uR/LU/RQwSvfBv626kZ/6GHCAw5
K+tC856jhwhqa7KOmca/QA8RnJypbU+6bkEPETy7aJpTmt6FHgJE+BYczUmx
oYcAAf6aQMOhXvQQwFC86/BnT+zoIcC96uVzg2Ic6CFA4Qr53fODRZR7COAv
zG+Xp4op39/BErfqzvn7Sinf18H8M5ddtppllO/nYDM1+9/JvaCgfJ8BtjKq
+buMGyrKvz/AFpurx+5SDqb8ewMs0G9hkP7LIZR797PSlDdG7dztTrlvPxsW
6ZX7eb8H5Z79zI3VyzN3e1LuZ2c7H12rf0SHUe5lZ36r3QvjR3hT7mNnB1Mc
7nt8hlPuYWfWY6VHBuaNpLz/Pqafu3gR5PtQ3ncf69OmzTf6j6G83z5m8fhr
u07nR3mfvSzrqKo1Ypg/5f31Mn1z5pASGIt99TLfqn3ejfvGUX6vPSzEy/jr
SN0Eyu+zh60r+mSSR+Ekyu+xh82q1l4qcZtM+f3ZmDm4p2GL4W3K783G8q5E
ZNnV71J+Xza2IHup6lTBFPToZkMnj4n9Y8l76NHNbsU+DhX8gtCjm3krjJtt
ntPRo4vZosuJZqoGPbpYR21A3LkdwejRxfQHog5dkRP0sLK3Opc8HNRI0cPK
vk9YGNcUPRM9rCyZJc8/7ZiFHhZ2e9XUMF3FHPSwsKXFHp5FBWHoYWF6CDXX
X/sAPSzMsMnsec9TS/8HjaMLZA==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-1.2187500000000002`, 0}, 
     PlotRange -> {{-3.25, -1.25}, {0, 33.28202860903202}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-1.2187500000000002`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-3.25, -1.25}, {0, 33.28202860903202}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"simulation\"", "\"thry approx\"", "\"thry exact\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.689541603177816*^9, {3.6895419839842873`*^9, 3.689541999650902*^9}, 
   3.6895421950219107`*^9, 3.689542435382086*^9, {3.6896145106736917`*^9, 
   3.689614524463355*^9}, 3.689614668012073*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQFcB54XHFjWe97YwRgMOA9UNcbuK5cycEgDA44D
tYmyfyxCtBxmzQQB9gMiy2/vf6Wm5nD2DAiwHZi1nMdhuaGSA8Q8tgMPPnna
v/GSg5rHemDZ2xWNZZySUPNYDuzbU3hpAZcY1DzmAy9rg/7fFxaGmsd0YKPY
fpU9dwSg5jEdULLtiHSYzgc1j/GA5U1m/toj3FDzGA5cts461s/ABZX/v39/
pYdBQRUH1Py/+9VNRG868XJCzfuzX/i5T7flIg6o/l/7ZbTYtM52cEDt/7F/
blJZBCsPJ9S87/vn1gecXrcfZt7X/StTT7MEzOCAmvdlv5WW9xPdHg4HANTX
h14=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJw10n9MU1cUB/D+uPe+14qLExwSioyo2wySgDDjj+CuBgQKY0IU0wQCc1OQ
qYNRR6YytyjDLQgOYYIBQ1bROTNZxQXCiPeIBRKGKBFBI2YSGYuTRSaUH23B
tc/T09P0jybfd975nJBdn6bu1qhUqt3ur+f3VekhoWKFu3V80JIXrR/Ugbqx
uS9Yr+NX4oYP+V3RQffm0YaYcZkXP0tpWVasA6i23XAOyDy9vN3+TroOLllL
TPy6zCOV0sGH3x0ZWHhB5nolUAdl8RH9mWUy96TFDctQUNITtKZQ5u4wd6IM
T/aWX/4qS+ZKXLkM69KO1scZZb5HKRnij0W5W+bRSqAMJS3dfuHBMvdTBpQh
58F/tUa9zMc84z2TYCk1nL1tl/hNT1y7BCm8a/T3YYmfrfGUBL1dj4/49Eo8
XwmU4K0PuPl6q8TjlQEluPn9evXtixIPVl5YgvutWwo2Vkl8yhNnZ/Bb7JVI
9TGJ3+rxFIOh1wttQfkSP+9Zn4XBxi+DRFmmxA8rAzL4y1x5NyVZ4qnKCzPo
+jja3RJfpSyQwZ71Lwo6Vkv8lYf7/3yDuyX0oLCj5D5k+0joQWHhyIqCBhdD
DwrnrwWqV/3L0INC8fO158YfMfSgEGivO+noZehBIXTdkZBYYOhBoH9PVmuv
laEHga4qS2eVhaEHgYrpwRvVVQw9CPxo3RQ1UMLQg0BDdszVpEMMPQh0G8iQ
Yx9DDy2kLrqT/mcmQw8ttHP4ZyaVoYcWtirF0EMLnes9H4YeWhjcFVVTGMbQ
QwtPc5s3m0IYemjA/35yQO4Shh4aaKsqeu2SjqGHBrK2z/gvmafooYFbJ3dG
/fKCoocGQud69ub9TdFDA50ZQx0ZQxQ9NNAX659h7qPooYankw+NTZ0UPdSQ
Pf6GNaCNooca/kiQWi5YKXqo4eB+Wma6SNFDDXdNSdkRdRQ91KAO6SgKO03R
QwXp1f2L3v+WoocKYgNDd5cfpeihgoa4H2wTByl6qCCqtr/oi30UPVRwbzh3
JPgjih4qKDIe3jZq8s7/UmyPOLesZ5t33pfCltPWeCfOO99LsYY8y5nY5J1n
XviXxjdFrvU+f15oSx86T4V5nzcvNJ981qRfSdF7Tpw5ejy53kDRd07Epvi5
m6LnnDA5KhYH+VD0c4nEOtu7WkLRyyWuDjeEa10EfVwia3/qCcMkQQ+X6Ege
syWPEdy/UxiTj+fXjBDct1N0G7QG1xDB/TrFgx2+Oz6/R3CfDvE4yedXqZfg
/hzip9pH7Y2dBPflEOH5zpUHBMF7nRVvH080b2kheJ+zwmpbnLjaSvAeZ4XZ
8iQh9GeC9zcjjK7Sxe9ZCN7bjIg+o0vIriV4XzOicUPeaUsVQY9p8Tx+pGai
jKDHtGh+8g3beYKgx7TYcCqn+NbXBD2mhC3tsLsJekyJ5abighdmgh5T4s2H
vjH1Bwh62EVHy4GnmTkEPexi+dbSpRG7CHrYRWUlPeGbTtBjUlwOWDDO0gh6
TIqAayb9gm1ej0nh1IdXBBu9HpMiRinC/wdemc8H
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        PointBox[CompressedData["
1:eJw10ntQVHUUB/B9733sEzcyFRTCCURtRC3C0N+AZkIaMGMLsohDAYWOIkMo
mLLIbIH4GBXTNCWSohjZfLQONeDvIApJSBmMKGAjheK2MGjs8lzY2PV0Zu7c
/7733O/n+KXsiEsVCQSC1OnH/X4+HNzo1E3UfK4lHeczw7kOFjJC/35UsltL
zGt78nRmFjYH9ulmJmqJyRZb42tiIdv7vFy/UksMR647Ag0sJDU1Fkf4a8lS
z7Dgm2w1t8u0hPMEsvBqY0mrvF9D3GlrexhoGUgy3r2jIdNh04kMfNBff2pF
jYZ44o4w4BVfND+kTEPSPMNAV2VPhuVTDQn3BDIgvGZ8CNs1ROdZkIEBlW1x
jF5D+t3r2eSw0X9oYTLRkAZ33HU5LNmx6YE1SENOf+EeOZh+P7mtf4aG7PQE
yiFda0xqdKrJ254F5dAyMnvFiT/UZK7nh+Ww55mmeuX3ajLsjnPIIMbvs5Ba
o5rcbnGPDJpjdpXIE9Skwl3feRl4v3TUMitETfZ4FpRB5MB66yCvJnGeH5bB
hlmLTxY8VpEgT4Ey+IbxSW2uV5HnHjIICB8PvnlWhR5SOHtztWNbngo9pDDZ
93i0Vq9CDyk0a+edubhchR5SiF1QkhGpU6GHFOoPrPLdOaREDykkTHGly9uU
6CGBNesaWg9eUaKHBPa2VtuzSpXoIYF2qXN978dK9JDA6uLEyAd6JXpIYP+J
U4ZNYUr0kIByIHZVvI8SPcRw0beuuk2gRA8xPCV5plu9CvQQw9LInGuv3VKg
hxiuirs+mmlWoIcYdqUpLm09rkAPMfxsudS+KFeBHiKwlTUHG5IV6CGCH5f8
5m9fo0APERQs6wwbWqhADxEkv/+A0esU6CGCxKd/LvNx8ughgs7uVbmRvTx6
iKDCzH3d1MKjhxDyvaIOVlp49BBClTh9fs85Hj2EUPbC4YysIh49hLC1cPaH
CVk8egjh3gXlG6UGHj2EMPeHvTK/tTx6CCDgVx/51BIePQTQ927dviAfHj0E
UNFwp66c4dFDAFs4qV+qnUMPAdDoXzRZDzn0EMC9JJugqYXD/V20fG9oZspP
HO7romXzdE8ivuVwPxfdaZ7nTDvO4T5TNGTo0brbRg6/P0VzfD/Znb39/+9N
0dsBYaGJBg69J2lPYnqEMYpD30l6Kvhp/F+hHHpO0sUXfd4yvsKhn5MeDo7p
jvfm0MtJc+fXOjKkHPo4qXTOgmyLnUUPJ42urCGv97LY/wSl9q+iB9tY7HuC
9uZPlnQ3sNjvBD04eMw1eYXFPsfpDdfpqrgKFvsbp94pR0/eL2Wxr3G6Z5+o
46iJxXsdo40CQ35eDov3OUZtvvTCsXQW73GM3jW1G+/Hs3h/o3S0s9x/QxSL
9zZKp+q3XBtcweJ9jdLC9/SmukUseozQA9zl6qtzWfQYoRu7Nmd1aln0GKGZ
rVavQAmLHsN0TtWmtnPDDHoMU1fXDGe4lUGPYVq8//J9STeDHg4649Bg7b+t
DHo46JwnBeOy6wx6OOjjKqGNWBj0sNPcN1v+KfuOQQ87LUqzJrz8JYMedmp9
59mZ5iMMetjpGBl68UQhQ/4DSc/hvw==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-1.2187500000000002`, 0}, 
     PlotRange -> {{-3.25, -1.25}, {0, 5.430438378355771}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-1.2187500000000002`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-3.25, -1.25}, {0, 5.430438378355771}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"simulation\"", "\"thry approx\"", "\"thry exact\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.689541603177816*^9, {3.6895419839842873`*^9, 3.689541999650902*^9}, 
   3.6895421950219107`*^9, 3.689542435382086*^9, {3.6896145106736917`*^9, 
   3.689614524463355*^9}, 3.689614668088244*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Check", " ", "Evolution", " ", "in", " ", "1", " ", "dimension", " ", 
      "to", " ", "match", " ", "Desai", " ", "and", " ", "Fisher", " ", 
      "simulations", " ", "fig", " ", "5"}], " ", "&"}], " ", "6", " ", "c"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"simulation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", 
       ",", "popsize"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.001", ",", "0.01", ",", 
       RowBox[{"1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", 
       RowBox[{"0", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}], ",", 
       SuperscriptBox["10", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"starttime", ",", "timestep", ",", "maxtime"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1000", ",", "50000"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fulldata", ",", "verbose", ",", "veryverbose", ",", "exactqv"}], "}"}],
      "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "False", ",", "False", ",", "False"}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "initial", " ", "genotypes", " ", "and", " ", "their", " ", 
     "abundances"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printRegimeDetails", "[", 
     RowBox[{
     "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", "U1", ",", "U2", ",",
       "popsize", ",", "False"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"genotypes", ",", "genotypeabundances"}], "}"}], "=", 
     RowBox[{"getInitialDFdistribution", "[", 
      RowBox[{"popsize", ",", "\[CapitalDelta]c1", ",", "U1", ",", "1"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.689453134313169*^9, 3.6894531346980247`*^9}, {
   3.689454443608561*^9, 3.68945444392248*^9}, 3.689455163392514*^9, 
   3.689537173575811*^9, {3.689612191450088*^9, 3.6896122318341217`*^9}, {
   3.689612423490506*^9, 3.689612447593951*^9}, {3.6896125605953503`*^9, 
   3.689612560658155*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 1 q = \"\>", "\[InvisibleSpace]", "2.9999999999999996`", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\"Concurrent Mutations Regime\"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "2302.5850929940466`", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "4.3429448190325164`*^-7"}],
  SequenceForm[
  "Trait 1 q = ", 2.9999999999999996`, " in ", "Concurrent Mutations Regime", 
   " with expected time scale ", 2302.5850929940466`, 
   " and rate of adaptation ", 4.3429448190325164`*^-7],
  Editable->False]], "Print",
 CellChangeTimes->{3.689612448807938*^9, 3.6896125617459517`*^9, 
  3.6896134076127*^9, 3.689613466394759*^9, 3.689613582800935*^9, 
  3.689614968662678*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Trait 2 q = \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" in \"\>", 
   "\[InvisibleSpace]", "\<\" No Evolution Regime \"\>", 
   "\[InvisibleSpace]", "\<\" with expected time scale \"\>", 
   "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" and rate of adaptation \"\>", 
   "\[InvisibleSpace]", "0"}],
  SequenceForm[
  "Trait 2 q = ", 0, " in ", " No Evolution Regime ", 
   " with expected time scale ", 0, " and rate of adaptation ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.689612448807938*^9, 3.6896125617459517`*^9, 
  3.6896134076127*^9, 3.689613466394759*^9, 3.689613582800935*^9, 
  3.6896149686657133`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "simulation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"RunSimulationCheckEachMutation2", "[", 
        RowBox[{
        "popsize", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
         "U1", ",", "U2", ",", "maxtime", ",", "timestep", ",", "genotypes", 
         ",", "genotypeabundances"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d001_c2-0d01_U1-\
1x10pn5_U2-0x10pn4_exp009.m\>\"", ",", "results"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.689453152664356*^9, 3.689453155928067*^9}, {
   3.689454282116392*^9, 3.689454286866613*^9}, {3.6894545855298777`*^9, 
   3.6894546120662727`*^9}, {3.689537193481039*^9, 3.6895372197718554`*^9}, {
   3.6895372683089933`*^9, 3.6895372939887733`*^9}, {3.6895373567657423`*^9, 
   3.689537375940835*^9}, {3.6895374061650677`*^9, 3.689537527839072*^9}, {
   3.689537562550186*^9, 3.689537624975184*^9}, 3.689541882452059*^9, {
   3.689542039221627*^9, 3.689542047970516*^9}, 3.689542088740017*^9, {
   3.6895422150831957`*^9, 3.6895422301223993`*^9}, {3.689542326275247*^9, 
   3.689542336667292*^9}, {3.689612206514599*^9, 3.689612289459227*^9}, {
   3.689612333458027*^9, 3.689612342169859*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/Documents/kgrel2d/data/simtest/simtest_N-10p6_c1-0d001_c2-0d01_U1-\
1x10pn5_U2-0x10pn4_exp009.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qresults", "=", 
   RowBox[{
    RowBox[{"getSummarizedResults", "[", 
     RowBox[{
     "results", ",", "\[CapitalDelta]c1", ",", "\[CapitalDelta]c2", ",", 
      "popsize"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "9"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qresults", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}], "=", 
   RowBox[{
    SuperscriptBox["\[CapitalDelta]c1", 
     RowBox[{"-", "1"}]], 
    RowBox[{"qresults", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.689541601322495*^9, {3.6896123066514378`*^9, 3.689612320168919*^9}, {
   3.6896123781851063`*^9, 3.689612396609199*^9}, {3.689612821225224*^9, 
   3.6896128220423307`*^9}, {3.6896131121697187`*^9, 3.689613113122634*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"timeIndx", "=", "43"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"qresults", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<estim q\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"\"\<mean q = \>\"", 
     RowBox[{"ToString", "[", 
      RowBox[{"Mean", "[", 
       RowBox[{"qresults", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<genotypes = \>\"", ",", 
    RowBox[{
     RowBox[{"results", "[", 
      RowBox[{"[", "timeIndx", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<abundances = \>\"", ",", 
    RowBox[{
     RowBox[{"results", "[", 
      RowBox[{"[", "timeIndx", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"results", "[", 
     RowBox[{"[", "timeIndx", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"results", "[", 
       RowBox[{"[", "timeIndx", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.689612402008602*^9, 3.689612407529155*^9}, {
  3.6896125212330236`*^9, 3.689612547617153*^9}, {3.689612585721407*^9, 
  3.689612601408985*^9}, {3.689612636785243*^9, 3.6896126846895514`*^9}, {
  3.689612721257757*^9, 3.689612829784672*^9}, {3.6896128600982523`*^9, 
  3.689612906890497*^9}, {3.689613055610725*^9, 3.689613180993279*^9}, {
  3.6896132165066767`*^9, 3.689613253761742*^9}, {3.689613371971233*^9, 
  3.6896133741939583`*^9}, {3.6896138555069532`*^9, 3.689613985450316*^9}, {
  3.689614023979645*^9, 3.6896140301063538`*^9}, {3.689614074947071*^9, 
  3.689614143226131*^9}, {3.68961425553166*^9, 3.689614262042316*^9}}],

Cell[BoxData["43"], "Output",
 CellChangeTimes->{{3.689612524458415*^9, 3.689612536526189*^9}, {
   3.6896128263679523`*^9, 3.689612830494375*^9}, {3.689612895166359*^9, 
   3.689612909442128*^9}, 3.689613025295686*^9, {3.689613059044704*^9, 
   3.689613079715666*^9}, {3.689613146556306*^9, 3.689613201662366*^9}, {
   3.689613254577792*^9, 3.689613278326171*^9}, 3.689613375148218*^9, 
   3.6896134683075867`*^9, 3.6896135853881817`*^9, 3.6896138658008947`*^9, {
   3.68961392722787*^9, 3.689613985913597*^9}, {3.689614025076991*^9, 
   3.6896140304266167`*^9}, {3.6896140755541363`*^9, 
   3.6896141441896343`*^9}, {3.689614256341936*^9, 3.689614262477322*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1UwtMU1cYbnkVJmCZCGUy5wxkyCDMgaPL0PshiDLrY2y6DhuGo5iOMSwq
jG2grGnYRRngIJGXEScDXRwyH0CjUcpjoDBeo/J+F0qdTYBKpVLK3O7hJjc3
X777Pc45/3nzi+MRsRYsFiv85fvfd/WR7j60PUM/Q3nS0ZalvADQFZGCXTBR
/5PIAXchxj3y8ALBl8AzNQhPOsxTZb6jjYaRMoh9eYq5VBYYswrItV9vkh4m
GDeQoki95KpfYfT0LdCnrD74TGOmInx2dBg9b0NkeaE3Zg+H6GtQqizeP1Ni
zWDhXXjwlg3KDat+D9DZdqde0ayn/BoSvItFD+D1dle923U2w+crkRsr3yES
L5O8BkSHstiBcYsMTm1C3bG0YPnSPJXZUqO77dAM7mnxhBZmhpc2gz5X+86V
U0QvfghbZUZ4+FqiF7aiIGpnia1MT0mKn/iOnm0D/9aTP8cvkn6Cv+D8+4C/
g91q3w5UhdW5JlWaqKtGt3D9mk6YXvso4ZdEsr6iThTcl9zRbrQi/bsQesGJ
w/uWrCe7G5KgdoXMZplSpRVc5mu6IV7rZJuwmejpvyEwG+cu/2TBYFkPZss0
338pXqKSyncpuX4q1NmdPr4tmvCpKtzzKrquOMFGaHJcWrBaBUGO2Z09S/Y/
+THiK85OvbdI/KW9oM+7ePeEWaAu7+qRbRm9CEo5Wvlzqx3Dx/XBY3hLLD/X
Gnfdnf4IXOhDVSBHl8N9heHF/ZDT08kxozawaPutKX65H5sqnaXLRqKPGkCJ
bqv/vk9JvnAQASHXurbq2Fjs+LzwiHIQkkM1G6o1hI8YwtA6TuL7ZVbg7PX8
bq52CPZvbQ979wrxEwwj3jDwieYo6R82gtzdosFGEwvVM6rCwo2jCHgm4muU
NuR8RuEVddPFT0Tw62Owv7ZZFuJB9r9oDPR8UkGuvYE5f9dxpIzJGkXzs1RW
iny/Gz0ObtfO7sBaMj/5L/ml3raD3QQ7TaBqnWo8+mNyn7InkM6/6XgmdJGy
5p94rCmfgHNTplVWviWTt2YSzsMH/fO+Ifn0JLjpftMW7mQerdVIf3rS8cBD
0kemBvdXbcCWkFkq8dXER89/VGNPUdqx8FZy31bUaDEHv/Hc5QWZ/ylInt4o
71m/QJ17ZCOo6ZyCySre8IMjyTNOgY4vmNaOk/lNnkZLi9M9jh/x00+jriJW
Uf3VC8ps8lnfz9Iga7BeEp1J5leqQR+XnTt5nvyv06DU+E9H9sgz6szFyAM+
ETMIyhZ1tHsT/7gZCPM+vN/WvkL9C4EGsKM=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"time\"", TraditionalForm], 
    FormBox["\"estim q\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
    RowBox[{"\"2.08552\"", " ", "\"mean q = \""}], TraditionalForm],
  PlotRange->{{0, 50000.}, {0, 3.2580870168521514`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.689612524458415*^9, 3.689612536526189*^9}, {
   3.6896128263679523`*^9, 3.689612830494375*^9}, {3.689612895166359*^9, 
   3.689612909442128*^9}, 3.689613025295686*^9, {3.689613059044704*^9, 
   3.689613079715666*^9}, {3.689613146556306*^9, 3.689613201662366*^9}, {
   3.689613254577792*^9, 3.689613278326171*^9}, 3.689613375148218*^9, 
   3.6896134683075867`*^9, 3.6896135853881817`*^9, 3.6896138658008947`*^9, {
   3.68961392722787*^9, 3.689613985913597*^9}, {3.689614025076991*^9, 
   3.6896140304266167`*^9}, {3.6896140755541363`*^9, 
   3.6896141441896343`*^9}, {3.689614256341936*^9, 3.689614262503078*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"genotypes = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"11", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "1"}], "}"}]}], "}"}]}],
  SequenceForm[
  "genotypes = ", {{11, 1}, {12, 1}, {13, 1}, {14, 1}, {15, 1}, {16, 1}, {17, 
   1}, {18, 1}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.689613935513434*^9, 3.68961398593748*^9}, {
  3.689614025099351*^9, 3.689614030454561*^9}, {3.689614075579359*^9, 
  3.68961414421756*^9}, {3.689614256374503*^9, 3.689614262507716*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"abundances = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "11.16922848814673`", ",", "1277.9715243774947`", ",", 
     "21463.706695165187`", ",", "166434.26716391594`", ",", 
     "657689.331890127`", ",", "86916.2704480335`", ",", "66207.28305344183`",
      ",", "206.0400962574749`"}], "}"}]}],
  SequenceForm[
  "abundances = ", {11.16922848814673, 1277.9715243774947`, 
   21463.706695165187`, 166434.26716391594`, 657689.331890127, 
   86916.2704480335, 66207.28305344183, 206.0400962574749}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.689613935513434*^9, 3.68961398593748*^9}, {
  3.689614025099351*^9, 3.689614030454561*^9}, {3.689614075579359*^9, 
  3.68961414421756*^9}, {3.689614256374503*^9, 3.689614262508313*^9}}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.38380952380952377`, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5421245421245421, 0.}, {1.4578754578754578`, 
            11.16922848814673}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{48.70061554033377, 83.62111265008494}, {
           98.54559299602846, 99.04874044496675}}],
         StatusArea[#, 11.16922848814673]& ,
         TagBoxNote->"11.16922848814673"],
        StyleBox["11.16922848814673`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[11.16922848814673, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.542124542124542, 0.}, {2.4578754578754576`, 
            1277.9715243774947`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.28779838418203, 121.20829549393318`}, {
           98.18861260607137, 99.04874044496675}}],
         StatusArea[#, 1277.9715243774947`]& ,
         TagBoxNote->"1277.9715243774947"],
        StyleBox["1277.9715243774947`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1277.9715243774947`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.542124542124542, 0.}, {3.4578754578754576`, 
            21463.706695165187`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{123.8749812280303, 158.79547833778145`}, {
           92.50034409233335, 99.04874044496675}}],
         StatusArea[#, 21463.706695165187`]& ,
         TagBoxNote->"21463.706695165187"],
        StyleBox["21463.706695165187`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21463.706695165187`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.542124542124542, 0.}, {4.457875457875458, 
            166434.26716391594`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{161.46216407187853`, 196.38266118162971`}, {
           51.648154783581504`, 99.04874044496675}}],
         StatusArea[#, 166434.26716391594`]& ,
         TagBoxNote->"166434.26716391594"],
        StyleBox["166434.26716391594`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[166434.26716391594`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.542124542124542, 0.}, {5.457875457875458, 
            657689.331890127}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{199.0493469157268, 
           233.96984402547798`}, {-86.78577854872613, 99.04874044496675}}],
         StatusArea[#, 657689.331890127]& ,
         TagBoxNote->"657689.331890127"],
        StyleBox["657689.331890127`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[657689.331890127, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.542124542124542, 0.}, {6.457875457875458, 
            86916.2704480335}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{236.63652975957507`, 271.55702686932625`}, {
           74.05604397698892, 99.04874044496675}}],
         StatusArea[#, 86916.2704480335]& ,
         TagBoxNote->"86916.2704480335"],
        StyleBox["86916.2704480335`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[86916.2704480335, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.542124542124542, 0.}, {7.457875457875458, 
            66207.28305344183}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{274.22371260342334`, 309.1442097131745}, {
           79.89176310990058, 99.04874044496675}}],
         StatusArea[#, 66207.28305344183]& ,
         TagBoxNote->"66207.28305344183"],
        StyleBox["66207.28305344183`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[66207.28305344183, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.542124542124542, 0.}, {8.457875457875458, 
            206.0400962574749}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{311.8108954472716, 346.7313925570228}, {
           98.49067907726364, 99.04874044496675}}],
         StatusArea[#, 206.0400962574749]& ,
         TagBoxNote->"206.0400962574749"],
        StyleBox["206.0400962574749`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[206.0400962574749, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.38380952380952377`, 0.}, {8.619356776556776, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5421245421245421, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5421245421245421, 0.}]}],
          LineBox[{{8.457875457875458, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {8.457875457875458, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.38380952380952377`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox["\"28421.4\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.689612524458415*^9, 3.689612536526189*^9}, {
   3.6896128263679523`*^9, 3.689612830494375*^9}, {3.689612895166359*^9, 
   3.689612909442128*^9}, 3.689613025295686*^9, {3.689613059044704*^9, 
   3.689613079715666*^9}, {3.689613146556306*^9, 3.689613201662366*^9}, {
   3.689613254577792*^9, 3.689613278326171*^9}, 3.689613375148218*^9, 
   3.6896134683075867`*^9, 3.6896135853881817`*^9, 3.6896138658008947`*^9, {
   3.68961392722787*^9, 3.689613985913597*^9}, {3.689614025076991*^9, 
   3.6896140304266167`*^9}, {3.6896140755541363`*^9, 
   3.6896141441896343`*^9}, {3.689614256341936*^9, 3.689614262568438*^9}}]
}, Open  ]]
},
WindowSize->{1535, 876},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 6153, 142, 275, "Input"],
Cell[6736, 166, 1801, 42, 239, "Output"],
Cell[8540, 210, 24006, 410, 239, "Output"]
}, Open  ]],
Cell[32561, 623, 8998, 260, 239, "Input"],
Cell[41562, 885, 478, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[42065, 901, 378, 7, 55, "Input"],
Cell[42446, 910, 1974, 53, 32, "Output"],
Cell[44423, 965, 1181, 22, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45641, 992, 10552, 288, 349, "Input"],
Cell[CellGroupData[{
Cell[56218, 1284, 1495, 25, 23, "Print"],
Cell[57716, 1311, 1366, 24, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[59109, 1339, 1608, 33, 99, "Input"],
Cell[CellGroupData[{
Cell[60742, 1376, 2329, 64, 165, "Input"],
Cell[CellGroupData[{
Cell[63096, 1444, 462, 9, 23, "Print"],
Cell[63561, 1455, 418, 8, 23, "Print"]
}, Open  ]],
Cell[63994, 1466, 8228, 146, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72259, 1617, 9280, 272, 349, "Input"],
Cell[CellGroupData[{
Cell[81564, 1893, 753, 15, 23, "Print"],
Cell[82320, 1910, 881, 16, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[83228, 1930, 1114, 26, 99, "Input"],
Cell[CellGroupData[{
Cell[84367, 1960, 2366, 64, 165, "Input"],
Cell[CellGroupData[{
Cell[86758, 2028, 370, 8, 23, "Print"],
Cell[87131, 2038, 326, 7, 23, "Print"]
}, Open  ]],
Cell[87472, 2048, 10110, 178, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97619, 2231, 9778, 281, 349, "Input"],
Cell[CellGroupData[{
Cell[107422, 2516, 1085, 20, 23, "Print"],
Cell[108510, 2538, 1082, 20, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[109619, 2562, 1491, 32, 99, "Input"],
Cell[CellGroupData[{
Cell[111135, 2598, 9472, 257, 473, "Input"],
Cell[120610, 2857, 533, 10, 23, "Print"],
Cell[121146, 2869, 16376, 280, 239, "Output"],
Cell[137525, 3151, 42010, 744, 250, "Output"],
Cell[179538, 3897, 61411, 1080, 232, "Output"],
Cell[240952, 4979, 23473, 423, 225, "Output"],
Cell[264428, 5404, 28871, 529, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293336, 5938, 4306, 104, 165, "Input"],
Cell[297645, 6044, 217, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297899, 6052, 9308, 274, 349, "Input"],
Cell[CellGroupData[{
Cell[307232, 6330, 787, 15, 23, "Print"],
Cell[308022, 6347, 790, 15, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[308839, 6366, 1110, 26, 99, "Input"],
Cell[309952, 6394, 5863, 150, 253, "Input"],
Cell[CellGroupData[{
Cell[315840, 6548, 9423, 275, 349, "Input"],
Cell[CellGroupData[{
Cell[325288, 6827, 814, 15, 23, "Print"],
Cell[326105, 6844, 815, 15, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[326947, 6863, 1158, 27, 99, "Input"],
Cell[328108, 6892, 5965, 152, 253, "Input"],
Cell[CellGroupData[{
Cell[334098, 7048, 9071, 244, 430, "Input"],
Cell[343172, 7294, 16368, 282, 212, "Output"],
Cell[359543, 7578, 23128, 435, 264, "Output"],
Cell[CellGroupData[{
Cell[382696, 8017, 567, 12, 23, "Print"],
Cell[383266, 8031, 557, 12, 23, "Print"],
Cell[383826, 8045, 553, 12, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[384428, 8063, 9119, 244, 452, "Input"],
Cell[393550, 8309, 12823, 224, 212, "Output"],
Cell[406376, 8535, 20506, 392, 261, "Output"],
Cell[CellGroupData[{
Cell[426907, 8931, 543, 11, 23, "Print"],
Cell[427453, 8944, 530, 11, 23, "Print"],
Cell[427986, 8957, 532, 11, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[428567, 8974, 3080, 86, 261, "Input"],
Cell[CellGroupData[{
Cell[431672, 9064, 736, 14, 23, "Print"],
Cell[432411, 9080, 739, 14, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[433177, 9098, 1502, 33, 143, "Input"],
Cell[CellGroupData[{
Cell[434704, 9135, 2503, 63, 231, "Input"],
Cell[437210, 9200, 336, 5, 32, "Output"],
Cell[437549, 9207, 336, 5, 32, "Output"],
Cell[437888, 9214, 340, 5, 32, "Output"],
Cell[438231, 9221, 1776, 39, 232, "Output"]
}, Open  ]],
Cell[440022, 9263, 10971, 289, 278, "Input"],
Cell[450996, 9554, 8281, 205, 317, "Input"],
Cell[CellGroupData[{
Cell[459302, 9763, 2040, 46, 77, "Input"],
Cell[461345, 9811, 13437, 276, 247, "Output"],
Cell[474785, 10089, 18066, 370, 253, "Output"]
}, Open  ]],
Cell[492866, 10462, 10897, 288, 278, "Input"],
Cell[503766, 10752, 7826, 202, 295, "Input"],
Cell[CellGroupData[{
Cell[511617, 10958, 1709, 43, 77, "Input"],
Cell[513329, 11003, 13377, 275, 246, "Output"],
Cell[526709, 11280, 18398, 376, 246, "Output"]
}, Open  ]],
Cell[545122, 11659, 9220, 271, 322, "Input"],
Cell[554345, 11932, 8206, 230, 398, "Input"],
Cell[CellGroupData[{
Cell[562576, 12166, 1314, 37, 77, "Input"],
Cell[563893, 12205, 13249, 273, 257, "Output"],
Cell[577145, 12480, 18309, 374, 251, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595491, 12859, 8708, 251, 256, "Input"],
Cell[CellGroupData[{
Cell[604224, 13114, 837, 16, 25, "Print"],
Cell[605064, 13132, 707, 15, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[605798, 13151, 1529, 31, 77, "Input"],
Cell[607330, 13184, 1162, 33, 78, "Input"],
Cell[CellGroupData[{
Cell[608517, 13221, 2089, 49, 121, "Input"],
Cell[610609, 13272, 664, 9, 32, "Output"],
Cell[611276, 13283, 2957, 59, 259, "Output"],
Cell[CellGroupData[{
Cell[614258, 13346, 987, 27, 23, "Print"],
Cell[615248, 13375, 805, 16, 23, "Print"]
}, Open  ]],
Cell[616068, 13394, 13243, 337, 235, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
